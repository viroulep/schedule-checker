{"version":3,"sources":["Navigation/utils.js","utils/index.js","wca/routes.js","wca/api.js","Navigation/Navigation.js","Settings/Settings.js","Pickers/Generic.js","GroupGeneration/ModalGenRandom.js","Simulation/TimesDetail.js","data/events.js","Pickers/Event.js","data/simu.js","Pickers/Model.js","Simulation/QuickOpt.js","Simulation/QuickSimu.js","Simulation/QuickRun.js","wca/persistence.js","Competitions/SyncIcon.js","UtilsComponents/LoadingError.js","UtilsComponents/LoadingPlaceholder.js","Competitions/IndexList.js","wca/wcif.js","Competitions/Group.js","UtilsComponents/EventIcon.js","Competitions/Round.js","Competitions/Show.js","App.js","serviceWorker.js","index.js"],"names":["itemProps","active","className","cn","isPartiallyActive","isPartiallyCurrent","isExactlyActive","isCurrent","prefixed","url","process","integerDivision","x","y","result","Math","floor","remainder","timeToString","time","hour","join","setInt","e","set","def","parseInt","target","value","loadStoredConfig","simulator","saved","ls","mapSetup","setup","asObject","getSetupProps","mapModel","model","getModelProps","mapScrambling","scrambling","getScramblingProps","err","loadConfig","asMap","MapStringInt","ErrorKind","SUCCESS","console","error","errorMessage","clearAndRefreshSettings","document","location","reload","clearAndRefresh","clear","window","overridenBaseUrl","REACT_APP_WCA_URL","isStaging","wcaUrl","baseUrl","path","apiUrl","competitionsUrl","getOauthToken","setRemoteIfNeeded","params","URLSearchParams","search","has","wcaApiFetch","fetchOptions","fetch","headers","Headers","Authorization","then","response","ok","Error","statusText","json","getMe","signIn","paramsAsString","origin","client_id","response_type","redirect_uri","scope","toString","Navigation","user","userLoading","Menu","pointing","secondary","to","getProps","Item","Icon","loading","name","Dropdown","item","text","simple","onClick","href","DropdownMenu","saveAction","hasChanges","icon","disabled","SettingsPanel","props","setProps","Form","Grid","doubling","textAlign","columns","Object","entries","map","k","v","Column","key","Input","inline","min","type","label","onChange","newProps","updateInProps","Settings","useState","setSetup","setModel","setScrambling","setSaved","useEffect","seHasChanges","_","isEqual","mHasChanges","scHasChanges","hasAnyChange","Header","Message","color","attached","conf","newConfig","Segment","default","GenericPicker","val","setVal","options","FormAddRandom","generated","setGenerated","setMin","max","setMax","amount","setAmount","content","as","Button","size","Array","from","random","generateRandomArray","amountOptions","keys","n","FormAddOne","setTime","Generic","scrolling","ModalGenRandom","times","setTimes","OpenButton","headerContent","open","setOpenValue","setOpen","setClose","primary","Modal","centered","onClose","Content","length","basic","relaxed","Divider","vertical","negative","Actions","Group","positive","Or","TimesDetail","compact","events","id","preferred_format","rank","byId","forEach","simulatedId","includes","push","official","filter","forSimulation","eventsForSimu","EventPicker","event","setEvent","availableModels","defaultModel","modelOptions","m","ModelPicker","QuickOpt","message","setMessage","maxStations","setMaxStations","maxStaff","setMaxStaff","Event","Model","timesVec","asVector","VectorTime","localOverride","optimizeStaff","Err","BestResult","Judges","Runners","Scramblers","strResult","strStaff","QuickSimu","simuGroup","Value","savedTimes","QuickRunPage","array","defaultData","data","lastFetched","usePersistence","kind","loadedData","setData","setLoading","setError","sync","useCallback","loaded","Date","now","catch","finally","storedData","SyncIcon","syncIcon","link","Popup","trigger","toLocaleString","wide","position","LoadingError","LoadingPlaceholder","Dimmer","inverted","Loader","Placeholder","Line","Competitions","competitions","fluid","comp","announced_at","manageByMeParams","managed_by_me","start","toISOString","IndexList","parseActivityCode","activityCode","match","r","g","a","o","eventId","roundNumber","groupNumber","attemptNumber","otherActivity","secondsForRange","startTime","endTime","getTime","index","activity","pbMap","groupsById","accuracyArray","setAccuracyArray","undefined","simulated","setSimulated","estimate","diff","abs","round","newAcc","competitors","person","noPb","worst","t","i","competitorsToTimes","List","horizontal","EventIcon","Round","childActivities","every","some","ca","CompetitionInfo","schedule","setPbMap","setGroups","onlySimulated","setOnlySimulated","allActivities","venue","venues","room","rooms","sortedActivities","sortBy","activities","groupBy","d","getFullYear","getMonth","getDate","getAllActivities","wcif","setGroupMap","persons","p","registrantId","pbs","personalBests","pb","best","assignments","assignmentCode","activityId","buildIndex","Checkbox","toggle","checked","toDateString","stackable","Competition","competitionId","LoadingMessage","FailureMessage","LoadingWasm","Home","NotFound","getOauthTokenIfAny","token","hash","replace","hashParams","get","children","App","setSimulator","setUserLoading","currentUser","setCurrentUser","loadWasm","wasm","getSimu","setUser","me","loginUser","setTimeout","Container","basepath","Boolean","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a7844c2c.chunk.js","sourcesContent":["import cn from 'classnames';\n\nconst itemProps = (active) => ({\n  className: cn('item', { active }),\n});\n\nexport const isPartiallyActive = ({\n  isPartiallyCurrent,\n}) => itemProps(isPartiallyCurrent);\n\nexport const isExactlyActive = ({\n  isCurrent,\n}) => itemProps(isCurrent);\n\nexport const prefixed = (url) => `${process.env.PUBLIC_URL}${url}`;\n","import ls from 'local-storage';\nimport { asMap, asObject } from '@viroulep/group-simulator';\nimport { prefixed } from '../Navigation/utils';\n\nconst SECS_IN_MINUTE = 60;\nconst SECS_IN_HOUR = 60 * SECS_IN_MINUTE;\n\nconst integerDivision = (x, y) => ({\n  result: Math.floor(x / y),\n  remainder: x % y,\n});\n\nexport const timeToString = (time) => {\n  let { result, remainder } = integerDivision(time, SECS_IN_HOUR);\n  const hour = result;\n  ({ result, remainder } = integerDivision(remainder, SECS_IN_MINUTE));\n  const hourStr = hour > 0 ? `${hour} hours` : '';\n  const minStr = result > 0 ? `${result} minutes` : '';\n  const secStr = `${remainder} seconds`;\n  return [hourStr, minStr, secStr].join(' ');\n};\n\nexport const setInt = (e, set, def) => set(parseInt(e.target.value, 10) || def);\n\nexport const loadStoredConfig = (simulator) => {\n  if (!simulator) {\n    return {};\n  }\n  const saved = ls('config') || {};\n  const mapSetup = saved.setup || asObject(simulator.getSetupProps());\n  const mapModel = saved.model || asObject(simulator.getModelProps());\n  const mapScrambling = saved.scrambling || asObject(simulator.getScramblingProps());\n  const err = simulator.loadConfig(\n    asMap(simulator.MapStringInt, mapSetup),\n    asMap(simulator.MapStringInt, mapModel),\n    asMap(simulator.MapStringInt, mapScrambling),\n  );\n  if (err !== simulator.ErrorKind.SUCCESS) {\n    /* eslint-disable-next-line */\n    console.error(`Could not load local config: ${simulator.errorMessage(err)}`);\n    return {\n      mapSetup: asObject(simulator.getSetupProps()),\n      mapModel: asObject(simulator.getModelProps()),\n      mapScrambling: asObject(simulator.getScramblingProps()),\n    }\n  }\n\n  return { mapSetup, mapModel, mapScrambling };\n};\n\nexport const storeConfig = (conf) => ls('config', conf);\n\nexport const clearAndRefreshSettings = () => {\n  ls('config', {});\n  document.location.reload();\n};\n\nexport const clearAndRefresh = () => {\n  ls.clear();\n  window.location = prefixed('/');\n};\n","import ls from 'local-storage';\n\nconst prodBaseUrl = 'https://www.worldcubeassociation.org';\nconst stagingBaseUrl = 'https://staging.worldcubeassociation.org';\nconst overridenBaseUrl = process.env.REACT_APP_WCA_URL;\n\nexport const setStaging = () => {\n  ls.clear();\n  ls('staging', true);\n  document.location.reload();\n};\nexport const setProd = () => {\n  ls.clear();\n  ls('staging', false);\n  document.location.reload();\n};\n\nexport const isStaging = () => overridenBaseUrl || ls('staging');\n\nconst wcaUrl = () => (overridenBaseUrl || (isStaging() ? stagingBaseUrl : prodBaseUrl));\n\nexport const getOauthClientId = () => (isStaging() ? 'example-application-id' : '3A9BGEPZcmf7CA1D77meVRMzFGT-CZq6-6oXyPgelMU');\n\nexport const baseUrl = (path = '') => `${wcaUrl()}${path}`;\n\nexport const oauthUrl = (paramsAsString) => baseUrl(`/oauth/authorize?${paramsAsString}`);\n\nexport const apiUrl = (path) => baseUrl(`/api/v0${path}`);\nexport const selfUrl = () => apiUrl('/me');\nexport const competitionsUrl = (path) => apiUrl(`/competitions${path}`);\nexport const competitionWcifUrl = (id) => competitionsUrl(`/${id}/wcif`);\n","import ls from 'local-storage';\nimport {\n  selfUrl,\n  getOauthClientId,\n  oauthUrl,\n  setStaging,\n  setProd,\n  isStaging,\n} from './routes';\n\n// For now, this is only some internal details\nconst getOauthToken = () => ls('token') || '';\n\nexport const setOauthToken = (token) => ls('token', token);\n\nexport const setRemoteIfNeeded = () => {\n  const params = new URLSearchParams(window.location.search);\n  if (params.has('staging') && !isStaging()) {\n    setStaging();\n  }\n  if (params.has('prod') && isStaging()) {\n    setProd();\n  }\n};\n\nexport const wcaApiFetch = (url, fetchOptions = {}) => fetch(url,\n  {\n    ...fetchOptions,\n    headers: new Headers({\n      Authorization: `Bearer ${getOauthToken()}`,\n      'Content-Type': 'application/json',\n    }),\n  })\n  .then((response) => {\n    if (!response.ok) throw new Error(response.statusText);\n    return response;\n  })\n  .then((response) => response.json());\n\nexport const getMe = () => wcaApiFetch(selfUrl());\n\n// Call this upon loading to check the token in local storage is still valid!\n// TODO: store user, only re-login if token is expired!\nexport const loginUser = (setUser, setLoading) => {\n  if (getOauthToken().length === 0) {\n    return;\n  }\n\n  setLoading(true);\n  getMe().then((user) => {\n    setUser(user.me);\n  }).catch(() => {\n    // invalid token or other error, reset everything.\n    ls.clear();\n  }).finally(() => setLoading(false));\n};\n\nexport const signIn = () => {\n  const { origin } = window.location;\n  const params = new URLSearchParams({\n    client_id: getOauthClientId(),\n    response_type: 'token',\n    redirect_uri: `${origin}${process.env.PUBLIC_URL}`,\n    scope: 'public manage_competitions',\n  });\n  window.location = oauthUrl(params.toString());\n};\n","import React from 'react';\nimport {\n  Menu, Dropdown, Item, Icon,\n} from 'semantic-ui-react';\nimport { Link } from '@reach/router';\nimport {\n  isPartiallyActive, isExactlyActive, prefixed,\n} from './utils';\nimport { clearAndRefresh } from '../utils';\nimport { signIn } from '../wca/api';\n\n/* eslint-disable jsx-a11y/anchor-is-valid */\nconst Navigation = ({\n  user,\n  userLoading,\n}) => (\n  <Menu pointing secondary>\n    <Link to={prefixed('/')} getProps={isExactlyActive}>\n      Home\n    </Link>\n    <Link to={prefixed('/settings')} getProps={isPartiallyActive}>\n      Settings\n    </Link>\n    <Link to={prefixed('/quick-simu')} getProps={isPartiallyActive}>\n      Quick simulation\n    </Link>\n    {user && (\n      <Link to={prefixed('/competitions')} getProps={isPartiallyActive}>\n        My competitions\n      </Link>\n    )}\n    {userLoading && (\n      <Item className=\"right\">\n        <Icon loading name=\"spinner\" />\n      </Item>\n    )}\n    {user && (\n      <Dropdown item text={user.name} className=\"right\" simple>\n        <Dropdown.Menu>\n          <Dropdown.Item onClick={clearAndRefresh}>\n            Sign out\n          </Dropdown.Item>\n        </Dropdown.Menu>\n      </Dropdown>\n    )}\n    {!user && !userLoading && (\n      <a href=\"#\" className=\"item right\" onClick={signIn}>\n        Sign in with the WCA\n      </a>\n    )}\n  </Menu>\n);\n\nexport default Navigation;\n","import React, { useState, useEffect } from 'react';\nimport { Link, Router } from '@reach/router';\nimport {\n  Grid,\n  Header,\n  Form,\n  Dropdown,\n  Segment,\n  Message,\n  Menu,\n} from 'semantic-ui-react';\nimport _ from 'lodash';\nimport { asMap } from '@viroulep/group-simulator';\n\nimport {\n  isPartiallyActive, isExactlyActive,\n} from '../Navigation/utils';\nimport './Settings.scss';\nimport { storeConfig, loadStoredConfig, clearAndRefreshSettings } from '../utils';\n\nconst DropdownMenu = ({\n  saveAction,\n  hasChanges,\n}) => (\n  <Dropdown item icon=\"cogs\" className=\"right\">\n    <Dropdown.Menu>\n      <Dropdown.Item\n        onClick={saveAction}\n        disabled={!hasChanges}\n      >\n        Save settings\n      </Dropdown.Item>\n      <Dropdown.Item onClick={clearAndRefreshSettings}>Reset settings to default</Dropdown.Item>\n    </Dropdown.Menu>\n  </Dropdown>\n);\n\n/* TODO: for import/export\n<Dropdown.Divider />\n  <Dropdown.Header>Export</Dropdown.Header>\n  <Dropdown.Item>Share</Dropdown.Item>\n  */\n\nconst SettingsPanel = ({\n  props,\n  setProps,\n}) => {\n  const updateInProps = (k, v) => {\n    const newProps = {\n      ...props,\n    };\n    // NaN evaluates as false, so if NaN take 0\n    newProps[k] = parseInt(v, 10) || 0;\n    setProps(newProps);\n  };\n\n  return (\n    <Form className=\"settings-form\">\n      <Grid doubling textAlign=\"right\" columns={3}>\n        {Object.entries(props).map(([k, v]) => (\n          <Grid.Column key={k}>\n            <Form.Input\n              inline\n              min={0}\n              type=\"number\"\n              label={k}\n              value={v}\n              onChange={(e) => updateInProps(k, e.target.value)}\n            />\n          </Grid.Column>\n        ))}\n      </Grid>\n    </Form>\n  );\n};\n\nconst Settings = ({\n  simulator,\n}) => {\n  const [setup, setSetup] = useState({});\n  const [model, setModel] = useState({});\n  const [scrambling, setScrambling] = useState({});\n  const [saved, setSaved] = useState({});\n\n  useEffect(() => {\n    const { mapSetup, mapModel, mapScrambling } = loadStoredConfig(simulator);\n    setSetup(mapSetup);\n    setModel(mapModel);\n    setScrambling(mapScrambling);\n    setSaved({\n      setup: mapSetup,\n      model: mapModel,\n      scrambling: mapScrambling,\n    });\n  }, [simulator]);\n\n  const loadConfig = () => {\n    const newConfig = { setup, model, scrambling };\n    simulator.loadConfig(\n      asMap(simulator.MapStringInt, setup),\n      asMap(simulator.MapStringInt, model),\n      asMap(simulator.MapStringInt, scrambling),\n    );\n    setSaved(newConfig);\n    storeConfig(newConfig);\n  }\n\n  const seHasChanges = !_.isEqual(saved.setup, setup);\n  const mHasChanges = !_.isEqual(saved.model, model);\n  const scHasChanges = !_.isEqual(saved.scrambling, scrambling);\n  const hasAnyChange = seHasChanges || mHasChanges || scHasChanges;\n\n  /* eslint-disable jsx-a11y/anchor-is-valid */\n  return (\n    <div>\n      <Header>\n        Simulator settings\n      </Header>\n      <Message color=\"violet\">\n        All values are unsigned integers.\n        <br />\n        All times are expressed in seconds.\n      </Message>\n      <Menu attached=\"top\" pointing color=\"violet\">\n        <Link to=\"\" getProps={isExactlyActive}>\n          Setup\n          {' '}\n          {seHasChanges ? '*' : ''}\n        </Link>\n        <Link to=\"model\" getProps={isPartiallyActive}>\n          Model parameters\n          {' '}\n          {mHasChanges ? '*' : ''}\n        </Link>\n        <Link to=\"scrambling\" getProps={isPartiallyActive}>\n          Scrambling costs\n          {' '}\n          {scHasChanges ? '*' : ''}\n        </Link>\n        <DropdownMenu\n          saveAction={loadConfig}\n          hasChanges={hasAnyChange}\n        />\n      </Menu>\n      <Segment attached=\"bottom\">\n        <Router>\n          <SettingsPanel\n            path=\"/\"\n            default\n            simulator={simulator}\n            props={setup}\n            setProps={setSetup}\n          />\n          <SettingsPanel\n            path=\"/model\"\n            simulator={simulator}\n            props={model}\n            setProps={setModel}\n          />\n          <SettingsPanel\n            path=\"/scrambling\"\n            simulator={simulator}\n            props={scrambling}\n            setProps={setScrambling}\n          />\n        </Router>\n      </Segment>\n    </div>\n  )\n};\n\nexport default Settings;\n","import React from 'react';\nimport { Dropdown } from 'semantic-ui-react';\n\n/* eslint-disable react/jsx-props-no-spreading */\nconst GenericPicker = ({\n  val,\n  setVal,\n  options,\n  ...props\n}) => (\n  <Dropdown\n    {...props}\n    value={val}\n    onChange={(e, { value }) => setVal(value)}\n    options={options}\n  />\n);\n\nexport default GenericPicker;\n","import React, { useState, useEffect } from 'react';\nimport {\n  Segment, Divider, Header, Form, Button, Modal, Grid,\n} from 'semantic-ui-react';\nimport _ from 'lodash';\n\nimport { setInt } from '../utils';\nimport GenericPicker from '../Pickers/Generic';\n\nconst generateRandomArray = (min, max, size) => Array.from(Array(size))\n  .map(() => Math.floor(Math.random() * (max - min + 1)) + min);\n\nconst DEFAULT_MIN = 10;\nconst DEFAULT_MAX = 15;\n\nconst FormAddRandom = ({\n  generated,\n  setGenerated,\n}) => {\n  const [min, setMin] = useState(DEFAULT_MIN);\n  const [max, setMax] = useState(DEFAULT_MAX);\n  const [amount, setAmount] = useState(10);\n  const error = min > max ? {\n    content: 'Max must be greater than min',\n  } : null;\n\n  const generateAndAppend = () => setGenerated([\n    ...generated,\n    ...generateRandomArray(min, max, amount),\n  ]);\n\n  useEffect(() => {\n    setMin(_.min(generated) || DEFAULT_MIN);\n    setMax(_.max(generated) || DEFAULT_MAX);\n  }, [generated]);\n\n  return (\n    <>\n      <Header as=\"h4\" textAlign=\"center\">\n        Generate random times\n      </Header>\n      <p>\n        The form below let you add some randomly generated number within\n        {' '}\n        <em>min</em>\n        {' '}\n        and\n        {' '}\n        <em>max</em>\n        .\n      </p>\n      <Form>\n        <Form.Input\n          inline\n          min={1}\n          type=\"number\"\n          label=\"Min\"\n          value={min}\n          onChange={(e) => setInt(e, setMin, min)}\n        />\n        <Form.Input\n          inline\n          min={1}\n          type=\"number\"\n          label=\"Max\"\n          value={max}\n          error={error}\n          onChange={(e) => setInt(e, setMax, max)}\n        />\n        <Form.Input\n          inline\n          min={1}\n          type=\"number\"\n          label=\"Amount\"\n          value={amount}\n          onChange={(e) => setInt(e, setAmount, amount)}\n        />\n        <Button\n          color=\"violet\"\n          disabled={!!error}\n          content=\"Generate and append\"\n          onClick={generateAndAppend}\n        />\n      </Form>\n    </>\n  )\n};\n\nconst amountOptions = Array.from(Array(10).keys()).map((n) => ({\n  text: n + 1,\n  key: n + 1,\n  value: n + 1,\n}));\n\nconst FormAddOne = ({\n  generated,\n  setGenerated,\n}) => {\n  const [time, setTime] = useState(_.max(generated) || DEFAULT_MAX);\n  const [amount, setAmount] = useState(1);\n  const generateAndAppend = () => setGenerated([\n    ...generated,\n    ...Array.from(Array(amount)).map(() => time),\n  ]);\n  return (\n    <>\n      <Header as=\"h4\" textAlign=\"center\">\n        Add specific time(s)\n      </Header>\n      <p>\n        You can add a specific time one or more time by using the form below.\n      </p>\n      <Form className=\"mb-2\">\n        <Form.Input\n          inline\n          min={1}\n          type=\"number\"\n          label=\"Time\"\n          value={time}\n          onChange={(e) => setInt(e, setTime, time)}\n        />\n      </Form>\n      <div className=\"mb-2\">\n        I want to add this value\n        {' '}\n        <GenericPicker\n          inline\n          scrolling\n          val={amount}\n          setVal={setAmount}\n          options={amountOptions}\n        />\n        {' '}\n        times.\n      </div>\n      <Button\n        color=\"violet\"\n        content=\"Append\"\n        onClick={generateAndAppend}\n      />\n    </>\n  );\n};\n\nconst ModalGenRandom = ({\n  times,\n  setTimes,\n  OpenButton,\n  headerContent,\n}) => {\n  const [open, setOpenValue] = useState(false);\n  const [generated, setGenerated] = useState([]);\n\n  const setOpen = () => setOpenValue(true);\n  const setClose = () => setOpenValue(false);\n\n  useEffect(() => {\n    setGenerated(times);\n  }, [times, open]);\n\n  return (\n    <>\n      {OpenButton ? (\n        <OpenButton onClick={setOpen} />\n      ) : (\n        <Button primary onClick={setOpen}>Generate group</Button>\n      )}\n      <Modal open={open} centered={false} onClose={setClose}>\n        <Modal.Header>\n          {headerContent ? (\n            <>{headerContent}</>\n          ) : (\n            <>Generate competitors for group</>\n          )}\n        </Modal.Header>\n        <Modal.Content>\n          <p>\n            Use this form to generate a population for the group.\n            Each number represents the average time of one competitor,\n            therefore if you want 20 competitors in the group you need to\n            generate 20 numbers.\n          </p>\n          <p>\n            There are\n            {' '}\n            {generated.length}\n            {' '}\n            competitors in the group currently:\n            <br />\n            <code>\n              {generated.join(', ')}\n            </code>\n          </p>\n          <Segment basic>\n            <Grid columns={2} relaxed=\"very\" className=\"mb-2\">\n              <Grid.Column>\n                <FormAddRandom generated={generated} setGenerated={setGenerated} />\n              </Grid.Column>\n              <Grid.Column>\n                <FormAddOne generated={generated} setGenerated={setGenerated} />\n              </Grid.Column>\n            </Grid>\n            <Divider vertical>Or</Divider>\n          </Segment>\n          <Button\n            basic\n            negative\n            content=\"Clear times\"\n            onClick={() => setGenerated([])}\n          />\n        </Modal.Content>\n        <Modal.Actions>\n          <Button.Group>\n            <Button\n              positive\n              onClick={() => { setTimes(generated); setClose(); }}\n              content=\"Save\"\n            />\n            <Button.Or />\n            <Button color=\"black\" onClick={setClose} content=\"Discard\" />\n          </Button.Group>\n        </Modal.Actions>\n      </Modal>\n    </>\n  );\n};\n\nexport default ModalGenRandom;\n","import React, { useState } from 'react';\nimport {\n  Button, Segment,\n} from 'semantic-ui-react';\nimport ModalGenRandom from '../GroupGeneration/ModalGenRandom';\n\nconst TimesDetail = ({\n  times,\n  setTimes,\n}) => {\n  const [open, setOpen] = useState(false);\n  const OpenButton = ({ onClick }) => (\n    <Button\n      color=\"violet\"\n      content=\"Set group times\"\n      onClick={onClick}\n      compact\n    />\n  );\n\n  return (\n    <div className=\"times-details\">\n      <ModalGenRandom\n        times={times}\n        setTimes={setTimes}\n        OpenButton={OpenButton}\n      />\n      <Button onClick={() => setOpen(!open)} compact>\n        {open ? (\n          <>Hide details.</>\n        ) : (\n          <>Show average times.</>\n        )}\n      </Button>\n      {open && (\n        <Segment>\n          <code>\n            {times.join(', ')}\n          </code>\n        </Segment>\n      )}\n    </div>\n  );\n};\n\nexport default TimesDetail;\n","const events = [\n  {\n    id: '333',\n    name: '3x3x3 Cube',\n    preferred_format: 'a',\n    rank: 10,\n  },\n  {\n    id: '222',\n    name: '2x2x2 Cube',\n    preferred_format: 'a',\n    rank: 20,\n  },\n  {\n    id: '444',\n    name: '4x4x4 Cube',\n    preferred_format: 'a',\n    rank: 30,\n  },\n  {\n    id: '555',\n    name: '5x5x5 Cube',\n    preferred_format: 'a',\n    rank: 40,\n  },\n  {\n    id: '666',\n    name: '6x6x6 Cube',\n    preferred_format: 'm',\n    rank: 50,\n  },\n  {\n    id: '777',\n    name: '7x7x7 Cube',\n    preferred_format: 'm',\n    rank: 60,\n  },\n  {\n    id: '333bf',\n    name: '3x3x3 Blindfolded',\n    preferred_format: '3',\n    rank: 70,\n  },\n  {\n    id: '333fm',\n    name: '3x3x3 Fewest Moves',\n    preferred_format: 'm',\n    rank: 80,\n  },\n  {\n    id: '333oh',\n    name: '3x3x3 One-Handed',\n    preferred_format: 'a',\n    rank: 90,\n  },\n  {\n    id: 'clock',\n    name: 'Clock',\n    preferred_format: 'a',\n    rank: 110,\n  },\n  {\n    id: 'minx',\n    name: 'Megaminx',\n    preferred_format: 'a',\n    rank: 120,\n  },\n  {\n    id: 'pyram',\n    name: 'Pyraminx',\n    preferred_format: 'a',\n    rank: 130,\n  },\n  {\n    id: 'skewb',\n    name: 'Skewb',\n    preferred_format: 'a',\n    rank: 140,\n  },\n  {\n    id: 'sq1',\n    name: 'Square-1',\n    preferred_format: 'a',\n    rank: 150,\n  },\n  {\n    id: '444bf',\n    name: '4x4x4 Blindfolded',\n    preferred_format: '3',\n    rank: 160,\n  },\n  {\n    id: '555bf',\n    name: '5x5x5 Blindfolded',\n    preferred_format: '3',\n    rank: 170,\n  },\n  {\n    id: '333mbf',\n    name: '3x3x3 Multi-Blind',\n    preferred_format: '3',\n    rank: 180,\n  },\n  {\n    id: '333ft',\n    name: '3x3x3 With Feet',\n    preferred_format: 'a',\n    rank: 996,\n  },\n  {\n    id: 'magic',\n    name: 'Magic',\n    preferred_format: 'a',\n    rank: 997,\n  },\n  {\n    id: 'mmagic',\n    name: 'Master Magic',\n    preferred_format: 'a',\n    rank: 998,\n  },\n  {\n    id: '333mbo',\n    name: '3x3x3 Multi-Blind Old Style',\n    preferred_format: '3',\n    rank: 999,\n  },\n];\n\nconst byId = {};\n\nevents.forEach((e) => { byId[e.id] = e; });\n\nconst simulatedId = [];\n\nevents.forEach((e) => {\n  if (e.rank < 900 && !['333fm', '333mbf'].includes(e.id)) {\n    simulatedId.push(e.id);\n  }\n});\n\nexport default {\n  official: events.filter((e) => e.rank < 900),\n  forSimulation: events.filter((e) => simulatedId.includes(e.id)),\n  byId,\n  simulatedId,\n};\n","import React from 'react';\n\nimport GenericPicker from './Generic';\nimport events from '../data/events';\n\nconst eventsForSimu = events.forSimulation.map((e) => ({\n  text: e.name,\n  key: e.id,\n  value: e.id,\n}));\n\n/* eslint-disable react/jsx-props-no-spreading */\nconst EventPicker = ({\n  event,\n  setEvent,\n  ...props\n}) => (\n  <GenericPicker\n    {...props}\n    val={event}\n    setVal={setEvent}\n    options={eventsForSimu}\n  />\n);\n\nexport default EventPicker;\n","export const availableModels = ['Runners', 'JudgesRun'];\nexport const defaultModel = availableModels[0];\nexport const defaultEvent = '333';\n","import React from 'react';\n\nimport { availableModels } from '../data/simu';\nimport GenericPicker from './Generic';\n\nconst modelOptions = availableModels.map((m) => ({\n  text: m,\n  key: m,\n  value: m,\n}));\n\n/* eslint-disable react/jsx-props-no-spreading */\nconst ModelPicker = ({\n  model,\n  setModel,\n  ...props\n}) => (\n  <GenericPicker\n    {...props}\n    val={model}\n    setVal={setModel}\n    options={modelOptions}\n  />\n);\n\nexport default ModelPicker;\n","import React, { useState } from 'react';\nimport {\n  Button, Header, Input,\n} from 'semantic-ui-react';\nimport { asVector } from '@viroulep/group-simulator';\nimport EventPicker from '../Pickers/Event';\nimport ModelPicker from '../Pickers/Model';\nimport { timeToString, setInt } from '../utils';\nimport { defaultModel, defaultEvent } from '../data/simu';\n\nconst QuickOpt = ({\n  simulator,\n  times,\n}) => {\n  const [event, setEvent] = useState(defaultEvent);\n  const [model, setModel] = useState(defaultModel);\n  const [message, setMessage] = useState('');\n  const [maxStations, setMaxStations] = useState(10);\n  const [maxStaff, setMaxStaff] = useState(14);\n\n  const runSimulation = () => {\n    const timesVec = asVector(simulator.VectorTime, times);\n    // We'll just use the default config with no override!\n    const localOverride = new simulator.MapStringInt();\n    const {\n      Err, BestResult, Judges, Runners, Scramblers,\n    } = simulator.optimizeStaff(\n      event, timesVec, maxStations, maxStaff, localOverride, model,\n    );\n    if (Err !== simulator.ErrorKind.SUCCESS) {\n      setMessage(\n        `An error occurred during the simulation: ${simulator.errorMessage(Err)}`,\n      );\n    } else {\n      const strResult = `The best group took ${timeToString(BestResult)},`;\n      const strStaff = `using ${Judges} judges, ${Scramblers} scramblers, and ${Runners} runners. `;\n      setMessage(`${strResult} ${strStaff}`);\n    }\n  };\n\n  return (\n    <>\n      <Header>\n        Quick staff optimizer\n      </Header>\n      <div className=\"opt-content\">\n        <div className=\"inputs\">\n          <Input\n            min={3}\n            type=\"number\"\n            label=\"Total staff\"\n            value={maxStaff}\n            onChange={(e) => setInt(e, setMaxStaff, maxStaff)}\n          />\n          <Input\n            min={1}\n            type=\"number\"\n            label=\"Stations\"\n            value={maxStations}\n            onChange={(e) => setInt(e, setMaxStations, maxStations)}\n          />\n        </div>\n        <p>\n          Given I have\n          {' '}\n          {maxStaff}\n          {' '}\n          staff and at most\n          {' '}\n          {maxStations}\n          {' '}\n          stations available, I want to get the shortest time for this group.\n        </p>\n        <div>\n          This group is for\n          {' '}\n          <EventPicker event={event} setEvent={setEvent} inline scrolling />\n          {' '}\n          and my staff will be using the\n          {' '}\n          <ModelPicker model={model} setModel={setModel} inline />\n          {' '}\n          system throughout the group.\n        </div>\n      </div>\n      <Button\n        primary\n        className=\"run-simu\"\n        content=\"Run it!\"\n        onClick={runSimulation}\n      />\n      <p>\n        {message}\n      </p>\n    </>\n  );\n};\n\nexport default QuickOpt;\n","import React, { useState } from 'react';\nimport {\n  Button, Header, Message,\n} from 'semantic-ui-react';\nimport { asVector } from '@viroulep/group-simulator';\nimport EventPicker from '../Pickers/Event';\nimport ModelPicker from '../Pickers/Model';\nimport { timeToString } from '../utils';\nimport { defaultModel, defaultEvent } from '../data/simu';\n\nconst QuickSimu = ({\n  simulator,\n  times,\n}) => {\n  const [event, setEvent] = useState(defaultEvent);\n  const [model, setModel] = useState(defaultModel);\n  const [message, setMessage] = useState('');\n\n  const runSimulation = () => {\n    const timesVec = asVector(simulator.VectorTime, times);\n    // We'll just use the default config with no override!\n    const localOverride = new simulator.MapStringInt();\n    const { Err, Value } = simulator.simuGroup(event, timesVec, localOverride, model);\n    if (Err !== simulator.ErrorKind.SUCCESS) {\n      setMessage(\n        `An error occurred during the simulation: ${simulator.errorMessage(Err)}`,\n      );\n    } else {\n      setMessage(`The group took ${timeToString(Value)}.`);\n    }\n  };\n\n  return (\n    <>\n      <Header>\n        Quick group simulation\n      </Header>\n      <Message\n        compact\n        color=\"brown\"\n      >\n        You can adjust the number of judges/scramblers/runners,\n        as well as the miscramble or extra rate in the settings.\n      </Message>\n      <div>\n        I want to simulate this group for\n        {' '}\n        <EventPicker event={event} setEvent={setEvent} inline scrolling />\n        {' '}\n        and my staff will be using the\n        {' '}\n        <ModelPicker model={model} setModel={setModel} inline />\n        {' '}\n        system throughout the group.\n      </div>\n      <Button\n        primary\n        className=\"run-simu\"\n        content=\"Run it!\"\n        onClick={runSimulation}\n      />\n      <p>\n        {message}\n      </p>\n    </>\n  );\n};\n\nexport default QuickSimu;\n","import React, { useState } from 'react';\nimport {\n  Header,\n} from 'semantic-ui-react';\nimport TimesDetail from './TimesDetail';\nimport QuickOpt from './QuickOpt';\nimport QuickSimu from './QuickSimu';\nimport './QuickRun.scss';\n\n// Poor man's database\nlet savedTimes = [];\n\nconst QuickRunPage = ({\n  simulator,\n}) => {\n  const [times, setTimes] = useState(savedTimes);\n  const setPersistedTimes = (array) => {\n    savedTimes = array;\n    setTimes(array);\n  };\n\n  return (\n    <>\n      <Header>\n        Group setup\n      </Header>\n      <div>\n        There are currently\n        {' '}\n        {times.length}\n        {' '}\n        competitors in the group.\n        <TimesDetail times={times} setTimes={setPersistedTimes} />\n      </div>\n      <QuickSimu simulator={simulator} times={times} />\n      <QuickOpt simulator={simulator} times={times} />\n    </>\n  );\n};\n\nexport default QuickRunPage;\n","import { useState, useEffect, useCallback } from 'react';\nimport ls from 'local-storage';\n\nimport { wcaApiFetch } from '../wca/api';\n\nconst defaultData = {\n  data: null,\n  lastFetched: null,\n};\n\n/* eslint-disable import/prefer-default-export */\nexport const usePersistence = (kind, url) => {\n  const [loadedData, setData] = useState({\n    ...defaultData,\n  });\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  const sync = useCallback(() => {\n    setLoading(true);\n    setError(null);\n    wcaApiFetch(url).then((loaded) => {\n      const data = {\n        data: loaded,\n        lastFetched: Date.now(),\n      };\n      setData(data);\n      ls(kind, data);\n    }).catch((err) => {\n      setError(err.message);\n    }).finally(() => setLoading(false));\n  }, [kind, url, setData, setError]);\n\n  useEffect(() => {\n    const storedData = ls(kind) || {\n      ...defaultData,\n    };\n    if (!storedData.lastFetched) {\n      sync();\n    } else {\n      setData(storedData);\n      setLoading(false);\n    }\n  }, [kind, sync]);\n\n  return {\n    loadedData,\n    loading,\n    error,\n    sync,\n  };\n};\n","import React from 'react';\nimport { Icon, Popup } from 'semantic-ui-react';\n\nconst SyncIcon = ({\n  loading,\n  sync,\n  lastFetched,\n}) => {\n  const syncIcon = (\n    <Icon\n      link\n      name=\"sync\"\n      size=\"small\"\n      loading={loading}\n      onClick={sync}\n    />\n  );\n  return (\n    <>\n      {lastFetched ? (\n        <Popup\n          trigger={syncIcon}\n          content={`Last fetched on ${new Date(lastFetched).toLocaleString()}`}\n          size=\"small\"\n          wide\n          position=\"bottom center\"\n        />\n      ) : (\n        syncIcon\n      )}\n    </>\n  );\n};\n\nexport default SyncIcon;\n","import React from 'react';\nimport { Message } from 'semantic-ui-react';\n\nconst LoadingError = ({ error }) => (\n  <Message negative>\n    Something wrong happened when loading the data:\n    <pre>\n      {error}\n    </pre>\n    Your authentification token may have expired, you may try to sign out then\n    back in, or to use the &quot;Clear locally stored data&quot; option in the menu.\n    <br />\n    If the issue persists, it most likely means the WCA website is unreachable.\n    or the WCA website is unreachable.\n  </Message>\n);\n\nexport default LoadingError;\n","import React from 'react';\nimport { Dimmer, Placeholder, Loader } from 'semantic-ui-react';\n\nconst LoadingPlaceholder = () => (\n  <>\n    <Dimmer active inverted>\n      <Loader active inverted />\n    </Dimmer>\n    <Placeholder>\n      <Placeholder.Line />\n      <Placeholder.Line />\n    </Placeholder>\n  </>\n);\n\nexport default LoadingPlaceholder;\n","import React from 'react';\nimport { Link } from '@reach/router';\nimport {\n  Menu, Header, Segment,\n} from 'semantic-ui-react';\nimport cn from 'classnames';\n\nimport { competitionsUrl } from '../wca/routes';\nimport { usePersistence } from '../wca/persistence';\nimport SyncIcon from './SyncIcon';\nimport LoadingError from '../UtilsComponents/LoadingError';\nimport LoadingPlaceholder from '../UtilsComponents/LoadingPlaceholder';\nimport './IndexList.scss';\n\nconst Competitions = ({\n  competitions,\n}) => (\n  <Menu vertical fluid className=\"competitions-list\">\n    {competitions.map((comp) => (\n      <Link\n        key={comp.id}\n        to={comp.id}\n        className={cn('item', {\n          'not-announced': !comp.announced_at,\n        })}\n      >\n        {comp.name}\n      </Link>\n    ))}\n  </Menu>\n);\n\nconst manageByMeParams = new URLSearchParams({\n  managed_by_me: true,\n  // Last 12 months: months * days * hours * minByHour * secByMin * milli\n  start: new Date(Date.now() - 12 * 28 * 24 * 60 * 60 * 1000).toISOString(),\n});\n\nconst IndexList = () => {\n  const {\n    loadedData, loading, error, sync,\n  } = usePersistence(\n    'competitions.index', competitionsUrl(`?${manageByMeParams.toString()}`)\n  );\n  const { data, lastFetched } = loadedData;\n  return (\n    <>\n      <Header className=\"my-comps\">\n        My recent competitions\n        <SyncIcon\n          loading={loading}\n          sync={sync}\n          lastFetched={lastFetched}\n        />\n      </Header>\n      {error && (\n        <LoadingError error={error} />\n      )}\n      {loading && (\n        <Segment>\n          <LoadingPlaceholder />\n        </Segment>\n      )}\n      {!loading && data && (\n        <Competitions competitions={data} />\n      )}\n    </>\n  );\n};\n\nexport default IndexList;\n","import events from '../data/events';\n\nexport const parseActivityCode = (activityCode) => {\n  const [, e, r, g, a, o] = activityCode.match(\n    /^(\\w+)(?:-r(\\d+))?(?:-g(\\d+))?(?:-a(\\d+))?(?:-(\\w+))?$/,\n  );\n  return {\n    eventId: e === 'other' ? null : e,\n    roundNumber: r ? parseInt(r, 10) : null,\n    groupNumber: g ? parseInt(g, 10) : null,\n    attemptNumber: a ? parseInt(a, 10) : null,\n    otherActivity: o,\n  };\n};\n\nexport const activityCodeToName = (activityCode) => {\n  const {\n    eventId, roundNumber, groupNumber, attemptNumber,\n  } = parseActivityCode(activityCode);\n  return [\n    eventId && events.byId[eventId].name,\n    roundNumber && `Round ${roundNumber}`,\n    groupNumber && `Group ${groupNumber}`,\n    attemptNumber && `Attempt ${attemptNumber}`,\n  ].filter((x) => x).join(', ');\n};\n","import React, { useState, useEffect } from 'react';\nimport {\n  Button, Divider, List, Header,\n} from 'semantic-ui-react';\nimport { asVector } from '@viroulep/group-simulator';\nimport _ from 'lodash';\n\nimport { parseActivityCode } from '../wca/wcif';\nimport { timeToString } from '../utils';\nimport GroupGenerator from '../GroupGeneration/ModalGenRandom';\n\n\nconst competitorsToTimes = (competitors, pbMap, eventId) => {\n  let times = competitors.map((person) => pbMap[person][eventId]);\n  let noPb = 0;\n  times = times.filter((t) => {\n    if (t === undefined) {\n      noPb += 1;\n    }\n    return t !== undefined;\n  });\n  const worst = times[times.length - 1];\n  if (worst) {\n    for (let i = 0; i < noPb; i += 1) {\n      times.push(worst);\n    }\n  }\n  return times;\n};\n\nconst secondsForRange = (startTime, endTime) => Math.floor(\n  (new Date(endTime).getTime() - new Date(startTime).getTime()) / 1000,\n);\n\nconst openGroupButton = (size) => ({ onClick }) => (\n  <Button\n    size=\"tiny\"\n    compact\n    content={`Manage times (${size})`}\n    className=\"mb-2\"\n    onClick={onClick}\n  />\n);\n\n\nconst Group = ({\n  index,\n  simulator,\n  activity,\n  pbMap,\n  groupsById,\n  accuracyArray,\n  setAccuracyArray,\n}) => {\n  const [error, setError] = useState(undefined);\n  const [simulated, setSimulated] = useState(undefined);\n  const [times, setTimes] = useState([]);\n\n  useEffect(() => {\n    if (times.length === 0) {\n      return;\n    }\n    const { activityCode } = activity;\n    const { eventId } = parseActivityCode(activityCode);\n    const timesVec = asVector(simulator.VectorTime, times);\n    // We'll just use the default config with no override!\n    const localOverride = new simulator.MapStringInt();\n    const { Err, Value } = simulator.simuGroup(\n      eventId, timesVec, localOverride, 'Runners',\n    );\n    if (Err !== simulator.ErrorKind.SUCCESS) {\n      setError(\n        `An error occurred during the simulation: ${simulator.errorMessage(Err)}`,\n      );\n    } else {\n      setSimulated(Value);\n    }\n  }, [times, simulator, activity]);\n\n  useEffect(() => {\n    if (simulated === undefined) {\n      return;\n    }\n    const { startTime, endTime } = activity;\n    const estimate = secondsForRange(startTime, endTime);\n    const diff = Math.abs(Math.round(((simulated - estimate) / estimate) * 100));\n    const newAcc = [\n      ...accuracyArray,\n    ];\n    newAcc[index] = diff < 10;\n    if (!_.isEqual(accuracyArray, newAcc)) {\n      setAccuracyArray(newAcc);\n    }\n  }, [index, accuracyArray, setAccuracyArray, simulated, activity]);\n\n  const {\n    id, name, activityCode, startTime, endTime,\n  } = activity;\n  const { eventId } = parseActivityCode(activityCode);\n\n  useEffect(() => {\n    setTimes(competitorsToTimes(groupsById[id] || [], pbMap, eventId));\n  }, [groupsById, id, pbMap, eventId]);\n\n  return (\n    <List.Item>\n      <Divider horizontal>\n        <Header as=\"h4\">\n          {name}\n        </Header>\n      </Divider>\n      <p>\n        Scheduled for\n        {' '}\n        {timeToString(secondsForRange(startTime, endTime))}\n        .\n      </p>\n      <Header as=\"h5\" content=\"Simulation\" className=\"mb-2\" />\n      <GroupGenerator\n        times={times}\n        setTimes={setTimes}\n        OpenButton={openGroupButton(times.length)}\n        headerContent={`Times for ${name}`}\n      />\n      <p>\n        {error && (\n          <>{error}</>\n        )}\n        {!error && simulated && (\n          <>\n            Simulation took\n            {timeToString(simulated)}\n            .\n          </>\n        )}\n        {!error && !simulated && (\n          <>No simulation result yet</>\n        )}\n      </p>\n    </List.Item>\n  );\n};\n\nexport default Group;\n","import React from 'react';\nimport { Icon } from 'semantic-ui-react';\n\nimport '../wca/cubing-icons.css';\nimport './EventIcon.scss';\n\n/* eslint-disable react/jsx-props-no-spreading */\nconst EventIcon = ({\n  id,\n  ...props\n}) => (\n  <Icon className={`cubing-icon event-${id}`} {...props} />\n);\n\nexport default EventIcon;\n","import React, { useState } from 'react';\nimport {\n  List, Header, Grid, Segment,\n} from 'semantic-ui-react';\nimport { parseActivityCode } from '../wca/wcif';\nimport Group from './Group';\nimport EventIcon from '../UtilsComponents/EventIcon';\n\n\nconst Round = ({\n  simulator,\n  comp,\n  activity,\n  pbMap,\n  groupsById,\n}) => {\n  const { activityCode, name, childActivities } = activity;\n  const { eventId } = parseActivityCode(activityCode);\n  const [accuracyArray, setAccuracyArray] = useState(\n    childActivities.map(() => undefined),\n  );\n  let color = 'black';\n  if (accuracyArray.every((a) => a)) {\n    color = 'green';\n  } else if (accuracyArray.some((a) => a !== undefined)) {\n    color = 'orange';\n  }\n\n  return (\n    <Grid.Column key={activity.id}>\n      <Segment color={color}>\n        <Header as=\"h3\">\n          {eventId && (\n            <EventIcon id={eventId} />\n          )}\n          <Header.Content>\n            {name}\n          </Header.Content>\n        </Header>\n        <List relaxed>\n          {childActivities.map((ca, index) => (\n            <Group\n              index={index}\n              key={ca.id}\n              activity={ca}\n              color={color}\n              accuracyArray={accuracyArray}\n              setAccuracyArray={setAccuracyArray}\n              comp={comp}\n              pbMap={pbMap}\n              groupsById={groupsById}\n              simulator={simulator}\n            />\n          ))}\n        </List>\n      </Segment>\n    </Grid.Column>\n  );\n};\n\nexport default Round;\n","import React, {\n  Fragment, useState, useEffect,\n} from 'react';\nimport {\n  Divider, Grid, Header, Segment, Checkbox,\n} from 'semantic-ui-react';\nimport _ from 'lodash';\n\nimport { competitionWcifUrl } from '../wca/routes';\nimport { parseActivityCode } from '../wca/wcif';\nimport { usePersistence } from '../wca/persistence';\nimport SyncIcon from './SyncIcon';\nimport LoadingError from '../UtilsComponents/LoadingError';\nimport LoadingPlaceholder from '../UtilsComponents/LoadingPlaceholder';\nimport Round from './Round';\nimport events from '../data/events';\n\nconst buildIndex = (wcif, setPbMap, setGroupMap) => {\n  const pbMap = {\n  };\n  const groupsById = {\n  };\n\n  wcif.persons.forEach((p) => {\n    if (!p.registrantId) {\n      return;\n    }\n    const pbs = {};\n    p.personalBests.forEach((pb) => { pbs[pb.eventId] = Math.floor(pb.best / 100); });\n    pbMap[p.registrantId] = pbs;\n    p.assignments.forEach((a) => {\n      if (a.assignmentCode === 'competitor') {\n        if (!groupsById[a.activityId]) {\n          groupsById[a.activityId] = [];\n        }\n        groupsById[a.activityId].push(p.registrantId);\n      }\n    });\n  });\n\n  setPbMap(pbMap);\n  setGroupMap(groupsById);\n};\n\nconst formatDate = (d) => `${d.getFullYear()}-${d.getMonth() + 1}-${d.getDate()}`;\n\nconst getAllActivities = (schedule, onlySimulated) => {\n  // Return all activities for first venue/first room\n  // TODO: extend to take for a given room\n  const venue = schedule.venues[0];\n  if (!venue) {\n    return [];\n  }\n  const room = venue.rooms[0];\n  if (!room) {\n    return [];\n  }\n  const sortedActivities = _.sortBy(room.activities.filter(\n    (a) => !onlySimulated\n    || events.simulatedId.includes(parseActivityCode(a.activityCode).eventId),\n  ), ['startTime']);\n  return _.groupBy(sortedActivities, (a) => formatDate(new Date(a.startTime)));\n};\n\nconst CompetitionInfo = ({\n  simulator,\n  comp,\n}) => {\n  const { schedule } = comp;\n  const [pbMap, setPbMap] = useState({});\n  const [groupsById, setGroups] = useState({});\n  const [onlySimulated, setOnlySimulated] = useState(true);\n  const allActivities = getAllActivities(schedule, onlySimulated);\n  useEffect(() => buildIndex(comp, setPbMap, setGroups), [comp]);\n\n  return (\n    <>\n      <p>\n        You can review the schedule below.\n      </p>\n      <Checkbox\n        toggle\n        label=\"Show only event that can be simulated\"\n        checked={onlySimulated}\n        onChange={() => setOnlySimulated(!onlySimulated)}\n      />\n      {_.map(allActivities, (v, k) => (\n        <Fragment key={k}>\n          <Divider horizontal>\n            <Header as=\"h2\">\n              {new Date(k).toDateString()}\n            </Header>\n          </Divider>\n          <Grid columns={3} stackable>\n            {v.map((activity) => (\n              <Round\n                key={activity.id}\n                activity={activity}\n                comp={comp}\n                pbMap={pbMap}\n                groupsById={groupsById}\n                simulator={simulator}\n              />\n            ))}\n          </Grid>\n        </Fragment>\n      ))}\n    </>\n  )\n};\n\nconst Competition = ({\n  competitionId,\n  simulator,\n}) => {\n  const {\n    loadedData, loading, error, sync,\n  } = usePersistence(\n    `competitions.${competitionId}`,\n    competitionWcifUrl(competitionId),\n  );\n  const { data, lastFetched } = loadedData;\n  return (\n    <>\n      <Header as=\"h1\" className=\"my-comps\">\n        {data ? (\n          data.name\n        ) : (\n          competitionId\n        )}\n        <SyncIcon\n          loading={loading}\n          sync={sync}\n          lastFetched={lastFetched}\n        />\n      </Header>\n      {error && (\n        <LoadingError error={error} />\n      )}\n      {loading && (\n        <Segment>\n          <LoadingPlaceholder />\n        </Segment>\n      )}\n      {!loading && data && (\n        <CompetitionInfo comp={data} simulator={simulator} />\n      )}\n    </>\n  );\n};\n\nexport default Competition;\n","import React, { useState, useEffect } from 'react';\nimport {\n  Button, Container, Message, Icon,\n} from 'semantic-ui-react';\nimport { getSimu } from '@viroulep/group-simulator';\nimport { Router } from '@reach/router';\n\nimport './App.scss';\nimport Navigation from './Navigation/Navigation';\nimport Settings from './Settings/Settings';\nimport QuickRunPage from './Simulation/QuickRun';\nimport { loadStoredConfig } from './utils';\nimport {\n  setOauthToken,\n  loginUser,\n  setRemoteIfNeeded,\n} from './wca/api';\nimport { isStaging } from './wca/routes';\nimport CompetitionsList from './Competitions/IndexList';\nimport Competition from './Competitions/Show';\n\nconst LoadingMessage = () => (\n  <>\n    <Message.Header>Loading required content</Message.Header>\n    Please wait while the page is loading a required module.\n  </>\n);\n\nconst FailureMessage = () => (\n  <>\n    <p>\n      The loading of the module timed out.\n      It&pos;s likely that there was an error and that your browser does not support WebAssembly.\n    </p>\n\n    <p>\n      This module is necessary for this application, it is pointless to show\n      you anything more than this error message at this point.\n      <br />\n      Feel free to check this website to make sure your browser is supported.\n    </p>\n    <Button\n      href=\"https://caniuse.com/#feat=wasm\"\n      target=\"_blank\"\n      secondary\n    >\n      Check browser compatibility\n    </Button>\n  </>\n);\n\n// Use dismissable with wasm: info loading, green loaded, red timeout!\nconst LoadingWasm = ({\n  simulator,\n  loading,\n}) => (\n  <>\n    {!simulator && (\n      <Message\n        icon\n        color={loading ? 'teal' : 'red'}\n      >\n        {loading && (\n          <Icon name=\"circle notched\" loading />\n        )}\n        <Message.Content>\n          {loading ? (\n            <LoadingMessage />\n          ) : (\n            <FailureMessage />\n          )}\n        </Message.Content>\n      </Message>\n    )}\n  </>\n);\n\nconst Home = () => (\n  <div>\n    This page is a work in progress and most likely won&apos;t do what you expect.\n    <br />\n    You should not use it.\n    <br />\n    Come back later.\n  </div>\n);\n\nconst NotFound = () => <p>Oups, it&apos;s a 404</p>;\n\nconst getOauthTokenIfAny = () => {\n  const hash = window.location.hash.replace(/^#/, '');\n  const hashParams = new URLSearchParams(hash);\n  if (hashParams.has('access_token')) {\n    window.location.hash = '';\n    setOauthToken(hashParams.get('access_token'));\n  }\n};\n\nconst Competitions = ({ children }) => <>{children}</>;\n\nfunction App() {\n  const [simulator, setSimulator] = useState(undefined);\n  const [loading, setLoading] = useState(true);\n  const [userLoading, setUserLoading] = useState(false);\n  const [currentUser, setCurrentUser] = useState(null);\n\n  const loadWasm = async () => {\n    const wasm = getSimu(() => { setSimulator(wasm); setLoading(false) });\n  };\n\n  // Pass '[]' as a dependency, so that it's ran just once.\n  useEffect(() => {\n    loadWasm();\n    setRemoteIfNeeded();\n    getOauthTokenIfAny();\n    loginUser(setCurrentUser, setUserLoading);\n    // Register a timeout on the loading process\n    setTimeout(() => setLoading(false), 3000);\n  }, []);\n\n  useEffect(() => { loadStoredConfig(simulator); }, [simulator]);\n\n  return (\n    <Container>\n      <LoadingWasm simulator={simulator} loading={loading} />\n      {simulator && (\n        <>\n          <Navigation\n            user={currentUser}\n            userLoading={userLoading}\n          />\n          {isStaging() && (\n            <Message size=\"small\" color=\"pink\">\n              You&apos;re not currently using the WCA&apos;s production data.\n            </Message>\n          )}\n          <Router basepath={process.env.PUBLIC_URL}>\n            <Home path=\"/\" />\n            <Settings simulator={simulator} path=\"settings/*\" />\n            <QuickRunPage simulator={simulator} path=\"/quick-simu\" />\n            {currentUser && (\n              <Competitions path=\"competitions\">\n                <CompetitionsList path=\"/\" />\n                <Competition path=\":competitionId\" simulator={simulator} />\n              </Competitions>\n            )}\n            <NotFound default />\n          </Router>\n        </>\n      )}\n    </Container>\n  );\n}\n\nexport default App;\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'fomantic-ui-css/semantic.css';\n\n// NOTE:\n// import { Link } from 'react-router-dom'\n// import { Button } from 'semantic-ui-react'\n\n// // 💡 `to` prop is not handled in `Button` and will be passed to `Link` component\n// <Button as={Link} to=\"/home\">\n// To homepage\n// </Button>\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}