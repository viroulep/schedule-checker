{"version":3,"sources":["Navigation/ItemLink.js","Navigation/Navigation.js","Settings/Settings.js","utils/index.js","GroupGeneration/ModalGenRandom.js","Simulation/TimesDetail.js","Pickers/Generic.js","data/events.js","Pickers/Event.js","data/simu.js","Pickers/Model.js","Simulation/QuickSimu.js","Simulation/QuickRun.js","App.js","serviceWorker.js","index.js"],"names":["ItemLink","prefixed","exact","to","Navigation","Menu","pointing","secondary","SettingsPanel","props","setProps","Form","className","Grid","doubling","textAlign","columns","Object","entries","map","k","v","Column","key","Input","inline","min","type","label","value","onChange","e","newProps","parseInt","updateInProps","target","Settings","simulator","useState","setup","setSetup","model","setModel","scrambling","setScrambling","saved","setSaved","useEffect","mapSetup","asObject","getSetupProps","mapModel","getModelProps","mapScrambling","getScramblingProps","seHasChanges","_","isEqual","mHasChanges","scHasChanges","hasAnyChange","saveButton","Button","content","onClick","loadConfig","asMap","MapStringInt","disabled","positive","Header","Message","color","attached","Item","position","Segment","path","default","integerDivision","x","y","result","Math","floor","remainder","setInt","set","def","ModalGenRandom","times","setTimes","OpenButton","open","setOpenValue","generated","setGenerated","setMin","max","setMax","amount","setAmount","setOpen","setClose","error","primary","Modal","centered","onClose","Content","length","join","size","Array","from","random","generateRandomArray","basic","negative","Actions","Group","Or","TimesDetail","compact","GenericPicker","val","setVal","options","Dropdown","events","id","name","preferred_format","rank","byId","forEach","eventsForSimu","official","filter","forSimulation","includes","text","EventPicker","event","setEvent","Generic","availableModels","defaultModel","modelOptions","m","ModelPicker","QuickSimu","message","setMessage","Event","Model","timesVec","asVector","VectorTime","localOverride","simuGroup","Err","Value","ErrorKind","SUCCESS","errorMessage","time","hour","timeToString","savedTimes","QuickRunPage","array","LoadingMessage","FailureMessage","href","LoadingWasm","loading","icon","Icon","Home","NotFound","App","undefined","setSimulator","setLoading","loadWasm","a","wasm","getSimu","setTimeout","Container","basepath","process","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.76ac308d.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\nimport { Link } from '@reach/router';\n\nconst itemProps = (active) => ({\n  className: cn('item', { active }),\n});\n\nconst isPartiallyActive = ({\n  isPartiallyCurrent,\n}) => itemProps(isPartiallyCurrent);\n\nconst isExactlyActive = ({\n  isCurrent,\n}) => itemProps(isCurrent);\n\n/* eslint-disable react/jsx-props-no-spreading */\nconst ItemLink = ({\n  prefixed,\n  exact,\n  to,\n  ...props\n}) => (\n  // 'prefixed' can be used for absolute navigation and make sure gh-pages work\n  <Link\n    to={prefixed ? `${process.env.PUBLIC_URL}${to}` : to}\n    {...props}\n    getProps={exact ? isExactlyActive : isPartiallyActive}\n  />\n);\n\nexport default ItemLink;\n","import React from 'react';\nimport { Menu } from 'semantic-ui-react'\nimport ItemLink from './ItemLink';\n\nconst Navigation = () => (\n  <Menu pointing secondary>\n    <ItemLink exact prefixed to=\"/\">Home</ItemLink>\n    <ItemLink prefixed to=\"/settings\">Settings</ItemLink>\n    <ItemLink prefixed to=\"/quick-simu\">Quick simulation</ItemLink>\n  </Menu>\n);\n\nexport default Navigation;\n","import React, { useState, useEffect } from 'react';\nimport { Router } from '@reach/router';\nimport {\n  Grid,\n  Header,\n  Form,\n  Button,\n  Segment,\n  Message,\n  Menu,\n} from 'semantic-ui-react';\nimport _ from 'lodash';\nimport { asMap, asObject } from '@viroulep/group-simulator';\n\nimport ItemLink from '../Navigation/ItemLink';\nimport './Settings.scss';\n\nconst SettingsPanel = ({\n  props,\n  setProps,\n}) => {\n  const updateInProps = (k, v) => {\n    const newProps = {\n      ...props,\n    };\n    // NaN evaluates as false, so if NaN take 0\n    newProps[k] = parseInt(v, 10) || 0;\n    setProps(newProps);\n  };\n\n  return (\n    <Form className=\"settings-form\">\n      <Grid doubling textAlign=\"right\" columns={3}>\n        {Object.entries(props).map(([k, v]) => (\n          <Grid.Column key={k}>\n            <Form.Input\n              inline\n              min={0}\n              type=\"number\"\n              label={k}\n              value={v}\n              onChange={(e) => updateInProps(k, e.target.value)}\n            />\n          </Grid.Column>\n        ))}\n      </Grid>\n    </Form>\n  );\n};\n\nconst Settings = ({\n  simulator,\n}) => {\n  const [setup, setSetup] = useState({});\n  const [model, setModel] = useState({});\n  const [scrambling, setScrambling] = useState({});\n  const [saved, setSaved] = useState({});\n\n  useEffect(() => {\n    const mapSetup = asObject(simulator.getSetupProps());\n    const mapModel = asObject(simulator.getModelProps());\n    const mapScrambling = asObject(simulator.getScramblingProps());\n    setSetup(mapSetup);\n    setModel(mapModel);\n    setScrambling(mapScrambling);\n    setSaved({\n      setup: mapSetup,\n      model: mapModel,\n      scrambling: mapScrambling,\n    });\n  }, [simulator]);\n\n  const loadConfig = () => {\n    simulator.loadConfig(\n      asMap(simulator.MapStringInt, setup),\n      asMap(simulator.MapStringInt, model),\n      asMap(simulator.MapStringInt, scrambling),\n    );\n    setSaved({ setup, model, scrambling });\n  }\n\n  const seHasChanges = !_.isEqual(saved.setup, setup);\n  const mHasChanges = !_.isEqual(saved.model, model);\n  const scHasChanges = !_.isEqual(saved.scrambling, scrambling);\n  const hasAnyChange = seHasChanges || mHasChanges || scHasChanges;\n\n  const saveButton = (\n    <Button\n      content=\"Save settings\"\n      onClick={loadConfig}\n      disabled={!hasAnyChange}\n      positive\n    />\n  );\n\n  return (\n    <div>\n      <Header>\n        Simulator settings\n      </Header>\n      <Message color=\"violet\">\n        All values are unsigned integers.\n        <br />\n        All times are expressed in seconds.\n      </Message>\n      <Menu attached=\"top\" pointing color=\"violet\">\n        <ItemLink exact to=\"\">\n          Setup\n          {' '}\n          {seHasChanges ? '*' : ''}\n        </ItemLink>\n        <ItemLink to=\"model\">\n          Model parameters\n          {' '}\n          {mHasChanges ? '*' : ''}\n        </ItemLink>\n        <ItemLink to=\"scrambling\">\n          Scrambling costs\n          {' '}\n          {scHasChanges ? '*' : ''}\n        </ItemLink>\n        <Menu.Item\n          position=\"right\"\n          content={saveButton}\n        />\n      </Menu>\n      <Segment attached=\"bottom\">\n        <Router>\n          <SettingsPanel\n            path=\"/\"\n            default\n            simulator={simulator}\n            props={setup}\n            setProps={setSetup}\n          />\n          <SettingsPanel\n            path=\"/model\"\n            simulator={simulator}\n            props={model}\n            setProps={setModel}\n          />\n          <SettingsPanel\n            path=\"/scrambling\"\n            simulator={simulator}\n            props={scrambling}\n            setProps={setScrambling}\n          />\n        </Router>\n      </Segment>\n    </div>\n  )\n};\n\nexport default Settings;\n","const SECS_IN_MINUTE = 60;\nconst SECS_IN_HOUR = 60 * SECS_IN_MINUTE;\n\nconst integerDivision = (x, y) => ({\n  result: Math.floor(x / y),\n  remainder: x % y,\n});\n\nexport const timeToString = (time) => {\n  let { result, remainder } = integerDivision(time, SECS_IN_HOUR);\n  const hour = result;\n  ({ result, remainder } = integerDivision(remainder, SECS_IN_MINUTE));\n  const hourStr = hour > 0 ? `${hour} hours` : '';\n  const minStr = result > 0 ? `${result} minutes` : '';\n  const secStr = `${remainder} seconds`;\n  return [hourStr, minStr, secStr].join(' ');\n};\n\nexport const setInt = (e, set, def) => set(parseInt(e.target.value, 10) || def);\n","import React, { useState, useEffect } from 'react';\nimport {\n  Form, Button, Modal,\n} from 'semantic-ui-react';\n\nimport { setInt } from '../utils';\n\nconst generateRandomArray = (min, max, size) => Array.from(Array(size))\n  .map(() => Math.floor(Math.random() * (max - min + 1)) + min);\n\nconst ModalGenRandom = ({\n  times,\n  setTimes,\n  OpenButton,\n}) => {\n  const [open, setOpenValue] = useState(false);\n  const [generated, setGenerated] = useState([]);\n  const [min, setMin] = useState(10);\n  const [max, setMax] = useState(15);\n  const [amount, setAmount] = useState(20);\n\n  const setOpen = () => setOpenValue(true);\n  const setClose = () => setOpenValue(false);\n  const error = min > max ? {\n    content: 'Max must be greater than min',\n  } : null;\n\n  const generateAndAppend = () => setGenerated([\n    ...generated,\n    ...generateRandomArray(min, max, amount),\n  ]);\n\n  useEffect(() => setGenerated(times), [times]);\n\n  return (\n    <>\n      {OpenButton ? (\n        <OpenButton onClick={setOpen} />\n      ) : (\n        <Button primary onClick={setOpen}>Generate group</Button>\n      )}\n      <Modal open={open} centered={false} onClose={setClose}>\n        <Modal.Header>Generate competitors for group</Modal.Header>\n        <Modal.Content>\n          <p>\n            Use this form to generate a random population for the group.\n            Each number represents the average time of one competitor,\n            therefore if you want 20 competitors in the group you need to\n            generate 20 numbers.\n          </p>\n          <p>\n            There are\n            {' '}\n            {generated.length}\n            {' '}\n            competitors in the group currently:\n            <br />\n            <code>\n              {generated.join(', ')}\n            </code>\n            <br />\n            The form below let you add some randomly generated number within\n            {' '}\n            <em>min</em>\n            {' '}\n            and\n            {' '}\n            <em>max</em>\n            .\n          </p>\n          <Form>\n            <Form.Input\n              inline\n              min={1}\n              type=\"number\"\n              label=\"Min\"\n              value={min}\n              onChange={(e) => setInt(e, setMin, min)}\n            />\n            <Form.Input\n              inline\n              min={1}\n              type=\"number\"\n              label=\"Max\"\n              value={max}\n              error={error}\n              onChange={(e) => setInt(e, setMax, max)}\n            />\n            <Form.Input\n              inline\n              min={1}\n              type=\"number\"\n              label=\"Amount\"\n              value={amount}\n              onChange={(e) => setInt(e, setAmount, amount)}\n            />\n            <Button\n              color=\"violet\"\n              disabled={!!error}\n              content=\"Generate and append\"\n              onClick={generateAndAppend}\n            />\n            <Button\n              basic\n              negative\n              content=\"Clear times\"\n              onClick={() => setGenerated([])}\n            />\n          </Form>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button.Group>\n            <Button\n              positive\n              onClick={() => { setTimes(generated); setClose(); }}\n              content=\"Save\"\n            />\n            <Button.Or />\n            <Button color=\"black\" onClick={setClose} content=\"Discard\" />\n          </Button.Group>\n        </Modal.Actions>\n      </Modal>\n    </>\n  );\n};\n\nexport default ModalGenRandom;\n","import React, { useState } from 'react';\nimport {\n  Button, Segment,\n} from 'semantic-ui-react';\nimport ModalGenRandom from '../GroupGeneration/ModalGenRandom';\n\nconst TimesDetail = ({\n  times,\n  setTimes,\n}) => {\n  const [open, setOpen] = useState(false);\n  const OpenButton = ({ onClick }) => (\n    <Button\n      color=\"violet\"\n      content=\"Set group times\"\n      onClick={onClick}\n      compact\n    />\n  );\n\n  return (\n    <div className=\"times-details\">\n      <ModalGenRandom\n        times={times}\n        setTimes={setTimes}\n        OpenButton={OpenButton}\n      />\n      <Button onClick={() => setOpen(!open)} compact>\n        {open ? (\n          <>Hide details.</>\n        ) : (\n          <>Show average times.</>\n        )}\n      </Button>\n      {open && (\n        <Segment>\n          <code>\n            {times.join(', ')}\n          </code>\n        </Segment>\n      )}\n    </div>\n  );\n};\n\nexport default TimesDetail;\n","import React from 'react';\nimport { Dropdown } from 'semantic-ui-react';\n\n/* eslint-disable react/jsx-props-no-spreading */\nconst GenericPicker = ({\n  val,\n  setVal,\n  options,\n  ...props\n}) => (\n  <Dropdown\n    {...props}\n    value={val}\n    onChange={(e, { value }) => setVal(value)}\n    options={options}\n  />\n);\n\nexport default GenericPicker;\n","const events = [\n  {\n    id: '333',\n    name: '3x3x3 Cube',\n    preferred_format: 'a',\n    rank: 10,\n  },\n  {\n    id: '222',\n    name: '2x2x2 Cube',\n    preferred_format: 'a',\n    rank: 20,\n  },\n  {\n    id: '444',\n    name: '4x4x4 Cube',\n    preferred_format: 'a',\n    rank: 30,\n  },\n  {\n    id: '555',\n    name: '5x5x5 Cube',\n    preferred_format: 'a',\n    rank: 40,\n  },\n  {\n    id: '666',\n    name: '6x6x6 Cube',\n    preferred_format: 'm',\n    rank: 50,\n  },\n  {\n    id: '777',\n    name: '7x7x7 Cube',\n    preferred_format: 'm',\n    rank: 60,\n  },\n  {\n    id: '333bf',\n    name: '3x3x3 Blindfolded',\n    preferred_format: '3',\n    rank: 70,\n  },\n  {\n    id: '333fm',\n    name: '3x3x3 Fewest Moves',\n    preferred_format: 'm',\n    rank: 80,\n  },\n  {\n    id: '333oh',\n    name: '3x3x3 One-Handed',\n    preferred_format: 'a',\n    rank: 90,\n  },\n  {\n    id: 'clock',\n    name: 'Clock',\n    preferred_format: 'a',\n    rank: 110,\n  },\n  {\n    id: 'minx',\n    name: 'Megaminx',\n    preferred_format: 'a',\n    rank: 120,\n  },\n  {\n    id: 'pyram',\n    name: 'Pyraminx',\n    preferred_format: 'a',\n    rank: 130,\n  },\n  {\n    id: 'skewb',\n    name: 'Skewb',\n    preferred_format: 'a',\n    rank: 140,\n  },\n  {\n    id: 'sq1',\n    name: 'Square-1',\n    preferred_format: 'a',\n    rank: 150,\n  },\n  {\n    id: '444bf',\n    name: '4x4x4 Blindfolded',\n    preferred_format: '3',\n    rank: 160,\n  },\n  {\n    id: '555bf',\n    name: '5x5x5 Blindfolded',\n    preferred_format: '3',\n    rank: 170,\n  },\n  {\n    id: '333mbf',\n    name: '3x3x3 Multi-Blind',\n    preferred_format: '3',\n    rank: 180,\n  },\n  {\n    id: '333ft',\n    name: '3x3x3 With Feet',\n    preferred_format: 'a',\n    rank: 996,\n  },\n  {\n    id: 'magic',\n    name: 'Magic',\n    preferred_format: 'a',\n    rank: 997,\n  },\n  {\n    id: 'mmagic',\n    name: 'Master Magic',\n    preferred_format: 'a',\n    rank: 998,\n  },\n  {\n    id: '333mbo',\n    name: '3x3x3 Multi-Blind Old Style',\n    preferred_format: '3',\n    rank: 999,\n  },\n];\n\nconst byId = {\n};\n\nevents.forEach((e) => { byId[e.id] = e; });\n\nexport default {\n  official: events.filter((e) => e.rank < 900),\n  forSimulation: events.filter((e) => e.rank < 900 && !['333fm', '333mbf'].includes(e.id)),\n  byId,\n};\n","import React from 'react';\n\nimport GenericPicker from './Generic';\nimport events from '../data/events';\n\nconst eventsForSimu = events.forSimulation.map((e) => ({\n  text: e.name,\n  key: e.id,\n  value: e.id,\n}));\n\n/* eslint-disable react/jsx-props-no-spreading */\nconst EventPicker = ({\n  event,\n  setEvent,\n  ...props\n}) => (\n  <GenericPicker\n    {...props}\n    val={event}\n    setVal={setEvent}\n    options={eventsForSimu}\n  />\n);\n\nexport default EventPicker;\n","export const availableModels = ['Runners', 'JudgesRun'];\nexport const defaultModel = availableModels[0];\nexport const defaultEvent = '333';\n","import React from 'react';\n\nimport { availableModels } from '../data/simu';\nimport GenericPicker from './Generic';\n\nconst modelOptions = availableModels.map((m) => ({\n  text: m,\n  key: m,\n  value: m,\n}));\n\n/* eslint-disable react/jsx-props-no-spreading */\nconst ModelPicker = ({\n  model,\n  setModel,\n  ...props\n}) => (\n  <GenericPicker\n    {...props}\n    val={model}\n    setVal={setModel}\n    options={modelOptions}\n  />\n);\n\nexport default ModelPicker;\n","import React, { useState } from 'react';\nimport {\n  Button, Header, Message,\n} from 'semantic-ui-react';\nimport { asVector } from '@viroulep/group-simulator';\nimport EventPicker from '../Pickers/Event';\nimport ModelPicker from '../Pickers/Model';\nimport { timeToString } from '../utils';\nimport { defaultModel, defaultEvent } from '../data/simu';\n\nconst QuickSimu = ({\n  simulator,\n  times,\n}) => {\n  const [event, setEvent] = useState(defaultEvent);\n  const [model, setModel] = useState(defaultModel);\n  const [message, setMessage] = useState('');\n\n  const runSimulation = () => {\n    const timesVec = asVector(simulator.VectorTime, times);\n    // We'll just use the default config with no override!\n    const localOverride = new simulator.MapStringInt();\n    const { Err, Value } = simulator.simuGroup(event, timesVec, localOverride, model);\n    if (Err !== simulator.ErrorKind.SUCCESS) {\n      setMessage(\n        `An error occurred during the simulation: ${simulator.errorMessage(Err)}`,\n      );\n    } else {\n      setMessage(`The group took ${timeToString(Value)}.`);\n    }\n  };\n\n  return (\n    <>\n      <Header>\n        Quick group simulation\n      </Header>\n      <Message\n        compact\n        color=\"brown\"\n      >\n        You can adjust the number of judges/scramblers/runners in the settings.\n      </Message>\n      <div>\n        I want to simulate this group for\n        {' '}\n        <EventPicker event={event} setEvent={setEvent} inline />\n        {' '}\n        and my staff will be using the\n        {' '}\n        <ModelPicker model={model} setModel={setModel} inline />\n        {' '}\n        system throughout the group.\n      </div>\n      <Button\n        primary\n        className=\"run-simu\"\n        content=\"Run it!\"\n        onClick={runSimulation}\n      />\n      <p>\n        {message}\n      </p>\n    </>\n  );\n};\n\nexport default QuickSimu;\n","import React, { useState } from 'react';\nimport {\n  Header,\n} from 'semantic-ui-react';\nimport TimesDetail from './TimesDetail';\nimport QuickSimu from './QuickSimu';\nimport './QuickRun.scss';\n\n// Poor man's database\nlet savedTimes = [];\n\nconst QuickRunPage = ({\n  simulator,\n}) => {\n  const [times, setTimes] = useState(savedTimes);\n  const setPersistedTimes = (array) => {\n    savedTimes = array;\n    setTimes(array);\n  };\n\n  return (\n    <>\n      <Header>\n        Group setup\n      </Header>\n      <div>\n        There are currently\n        {' '}\n        {times.length}\n        {' '}\n        competitors in the group.\n        <TimesDetail times={times} setTimes={setPersistedTimes} />\n      </div>\n      <QuickSimu simulator={simulator} times={times} />\n    </>\n  );\n};\n\nexport default QuickRunPage;\n","import React, { useState, useEffect } from 'react';\nimport {\n  Button, Container, Message, Icon,\n} from 'semantic-ui-react';\nimport { getSimu } from '@viroulep/group-simulator';\nimport { Router } from '@reach/router';\n\nimport './App.css';\nimport Navigation from './Navigation/Navigation';\nimport Settings from './Settings/Settings';\nimport QuickRunPage from './Simulation/QuickRun';\n\n// https://github.com/rafrex/spa-github-pages\n\nconst LoadingMessage = () => (\n  <>\n    <Message.Header>Loading required content</Message.Header>\n    Please wait while the page is loading a required module.\n  </>\n);\n\nconst FailureMessage = () => (\n  <>\n    <p>\n      The loading of the module timed out.\n      It&pos;s likely that there was an error and that your browser does not support WebAssembly.\n    </p>\n\n    <p>\n      This module is necessary for this application, it is pointless to show\n      you anything more than this error message at this point.\n      <br />\n      Feel free to check this website to make sure your browser is supported.\n    </p>\n    <Button\n      href=\"https://caniuse.com/#feat=wasm\"\n      target=\"_blank\"\n      secondary\n    >\n      Check browser compatibility\n    </Button>\n  </>\n);\n\n// Use dismissable with wasm: info loading, green loaded, red timeout!\nconst LoadingWasm = ({\n  simulator,\n  loading,\n}) => (\n  <>\n    {!simulator && (\n      <Message\n        icon\n        color={loading ? 'teal' : 'red'}\n      >\n        {loading && (\n          <Icon name=\"circle notched\" loading />\n        )}\n        <Message.Content>\n          {loading ? (\n            <LoadingMessage />\n          ) : (\n            <FailureMessage />\n          )}\n        </Message.Content>\n      </Message>\n    )}\n  </>\n);\n\nconst Home = () => (\n  <div>\n    This page is a work in progress and most likely won&apos;t do what you expect.\n    <br />\n    You should not use it.\n    <br />\n    Come back later.\n  </div>\n);\n\nconst NotFound = () => <p>Oups, it&apos;s a 404</p>;\n\nfunction App() {\n  const [simulator, setSimulator] = useState(undefined);\n  const [loading, setLoading] = useState(true);\n\n  const loadWasm = async () => {\n    const wasm = getSimu(() => { setSimulator(wasm); setLoading(false) });\n  };\n\n  // Pass '[]' as a dependency, so that it's ran just once.\n  useEffect(() => {\n    loadWasm();\n    // Register a timeout on the loading process\n    setTimeout(() => setLoading(false), 3000);\n  }, []);\n\n  return (\n    <Container>\n      <LoadingWasm simulator={simulator} loading={loading} />\n      {simulator && (\n        <>\n          <Navigation />\n          <Router basepath={process.env.PUBLIC_URL}>\n            <Home path=\"/\" />\n            <Settings simulator={simulator} path=\"settings/*\" />\n            <QuickRunPage simulator={simulator} path=\"/quick-simu\" />\n            <NotFound default />\n          </Router>\n        </>\n      )}\n    </Container>\n  );\n}\n\nexport default App;\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'fomantic-ui-css/semantic.css';\n\n// NOTE:\n// import { Link } from 'react-router-dom'\n// import { Button } from 'semantic-ui-react'\n\n// // 💡 `to` prop is not handled in `Button` and will be passed to `Link` component\n// <Button as={Link} to=\"/home\">\n// To homepage\n// </Button>\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}