{"version":3,"sources":["Navigation/utils.js","utils/index.js","wca/routes.js","wca/api.js","Navigation/Navigation.js","Settings/Settings.js","GroupGeneration/ModalGenRandom.js","Simulation/TimesDetail.js","Pickers/Generic.js","data/events.js","Pickers/Event.js","data/simu.js","Pickers/Model.js","Simulation/QuickOpt.js","Simulation/QuickSimu.js","Simulation/QuickRun.js","wca/persistence.js","Competitions/SyncIcon.js","Competitions/IndexList.js","App.js","serviceWorker.js","index.js"],"names":["itemProps","active","className","cn","isPartiallyActive","isPartiallyCurrent","isExactlyActive","isCurrent","prefixed","url","process","integerDivision","x","y","result","Math","floor","remainder","timeToString","time","hour","join","setInt","e","set","def","parseInt","target","value","loadStoredConfig","simulator","saved","ls","mapSetup","setup","asObject","getSetupProps","mapModel","model","getModelProps","mapScrambling","scrambling","getScramblingProps","err","loadConfig","asMap","MapStringInt","ErrorKind","SUCCESS","console","error","errorMessage","clearAndRefreshSettings","document","location","reload","clearAndRefresh","clear","window","overridenBaseUrl","REACT_APP_WCA_URL","isStaging","WCA_URL","baseUrl","path","apiUrl","competitionsUrl","getOauthToken","setRemoteIfNeeded","params","URLSearchParams","search","has","wcaApiFetch","fetchOptions","fetch","headers","Headers","Authorization","then","response","ok","Error","statusText","json","getMe","getManageableCompetitions","oneYearAgo","Date","now","managed_by_me","start","toISOString","toString","signIn","paramsAsString","origin","client_id","response_type","redirect_uri","scope","Navigation","user","userLoading","Menu","pointing","secondary","to","getProps","Item","Icon","loading","name","Dropdown","item","text","simple","onClick","href","DropdownMenu","saveAction","hasChanges","icon","disabled","SettingsPanel","props","setProps","Form","Grid","doubling","textAlign","columns","Object","entries","map","k","v","Column","key","Input","inline","min","type","label","onChange","newProps","updateInProps","Settings","useState","setSetup","setModel","setScrambling","setSaved","useEffect","seHasChanges","_","isEqual","mHasChanges","scHasChanges","hasAnyChange","Header","Message","color","attached","conf","newConfig","Segment","default","ModalGenRandom","times","setTimes","OpenButton","open","setOpenValue","generated","setGenerated","setMin","max","setMax","amount","setAmount","setOpen","setClose","content","Button","primary","Modal","centered","onClose","Content","length","size","Array","from","random","generateRandomArray","basic","negative","Actions","Group","positive","Or","TimesDetail","compact","GenericPicker","val","setVal","options","events","id","preferred_format","rank","byId","forEach","eventsForSimu","official","filter","forSimulation","includes","EventPicker","event","setEvent","Generic","availableModels","defaultModel","modelOptions","m","ModelPicker","QuickOpt","message","setMessage","maxStations","setMaxStations","maxStaff","setMaxStaff","Event","scrolling","Model","timesVec","asVector","VectorTime","localOverride","optimizeStaff","Err","BestResult","Judges","Runners","Scramblers","strResult","strStaff","QuickSimu","simuGroup","Value","savedTimes","QuickRunPage","array","defaultData","data","lastFetched","SyncIcon","sync","syncIcon","link","Popup","trigger","toLocaleString","wide","position","LoadingPlaceholder","Dimmer","inverted","Loader","Placeholder","Line","ErrorMessage","Competitions","competitions","vertical","fluid","comp","IndexList","kind","fetcher","loadedData","setData","setLoading","setError","useCallback","loaded","catch","finally","storedData","usePersistence","LoadingMessage","FailureMessage","LoadingWasm","Home","NotFound","getOauthTokenIfAny","token","hash","replace","hashParams","get","children","Competition","competitionId","App","undefined","setSimulator","setUserLoading","currentUser","setCurrentUser","loadWasm","a","wasm","getSimu","setUser","me","loginUser","setTimeout","Container","basepath","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.de47c002.chunk.js","sourcesContent":["import cn from 'classnames';\n\nconst itemProps = (active) => ({\n  className: cn('item', { active }),\n});\n\nexport const isPartiallyActive = ({\n  isPartiallyCurrent,\n}) => itemProps(isPartiallyCurrent);\n\nexport const isExactlyActive = ({\n  isCurrent,\n}) => itemProps(isCurrent);\n\nexport const prefixed = (url) => `${process.env.PUBLIC_URL}${url}`;\n","import ls from 'local-storage';\nimport { asMap, asObject } from '@viroulep/group-simulator';\nimport { prefixed } from '../Navigation/utils';\n\nconst SECS_IN_MINUTE = 60;\nconst SECS_IN_HOUR = 60 * SECS_IN_MINUTE;\n\nconst integerDivision = (x, y) => ({\n  result: Math.floor(x / y),\n  remainder: x % y,\n});\n\nexport const timeToString = (time) => {\n  let { result, remainder } = integerDivision(time, SECS_IN_HOUR);\n  const hour = result;\n  ({ result, remainder } = integerDivision(remainder, SECS_IN_MINUTE));\n  const hourStr = hour > 0 ? `${hour} hours` : '';\n  const minStr = result > 0 ? `${result} minutes` : '';\n  const secStr = `${remainder} seconds`;\n  return [hourStr, minStr, secStr].join(' ');\n};\n\nexport const setInt = (e, set, def) => set(parseInt(e.target.value, 10) || def);\n\nexport const loadStoredConfig = (simulator) => {\n  if (!simulator) {\n    return {};\n  }\n  const saved = ls('config') || {};\n  const mapSetup = saved.setup || asObject(simulator.getSetupProps());\n  const mapModel = saved.model || asObject(simulator.getModelProps());\n  const mapScrambling = saved.scrambling || asObject(simulator.getScramblingProps());\n  const err = simulator.loadConfig(\n    asMap(simulator.MapStringInt, mapSetup),\n    asMap(simulator.MapStringInt, mapModel),\n    asMap(simulator.MapStringInt, mapScrambling),\n  );\n  if (err !== simulator.ErrorKind.SUCCESS) {\n    /* eslint-disable-next-line */\n    console.error(`Could not load local config: ${simulator.errorMessage(err)}`);\n    return {\n      mapSetup: asObject(simulator.getSetupProps()),\n      mapModel: asObject(simulator.getModelProps()),\n      mapScrambling: asObject(simulator.getScramblingProps()),\n    }\n  }\n\n  return { mapSetup, mapModel, mapScrambling };\n};\n\nexport const storeConfig = (conf) => ls('config', conf);\n\nexport const clearAndRefreshSettings = () => {\n  ls('config', {});\n  document.location.reload();\n};\n\nexport const clearAndRefresh = () => {\n  ls.clear();\n  window.location = prefixed('/');\n};\n","import ls from 'local-storage';\n\nconst prodBaseUrl = 'https://www.worldcubeassociation.org';\nconst stagingBaseUrl = 'https://staging.worldcubeassociation.org';\nconst overridenBaseUrl = process.env.REACT_APP_WCA_URL;\n\nexport const setStaging = () => {\n  ls.clear();\n  ls('staging', true);\n  document.location.reload();\n};\nexport const setProd = () => {\n  ls.clear();\n  ls('staging', false);\n  document.location.reload();\n};\n\nexport const isStaging = () => overridenBaseUrl || ls('staging');\n\nconst WCA_URL = overridenBaseUrl || (isStaging() ? stagingBaseUrl : prodBaseUrl);\n\nexport const getOauthClientId = () => ((overridenBaseUrl || isStaging())\n  ? 'example-application-id'\n  : '3A9BGEPZcmf7CA1D77meVRMzFGT-CZq6-6oXyPgelMU');\n\nexport const baseUrl = (path = '') => `${WCA_URL}${path}`;\n\nexport const oauthUrl = (paramsAsString) => baseUrl(`/oauth/authorize?${paramsAsString}`);\n\nexport const apiUrl = (path) => baseUrl(`/api/v0${path}`);\nexport const selfUrl = () => apiUrl('/me');\nexport const competitionsUrl = (path) => apiUrl(`/competitions${path}`);\nexport const competitionWcifUrl = (id) => competitionsUrl(`/${id}/wcif`);\n","import ls from 'local-storage';\nimport {\n  selfUrl,\n  competitionWcifUrl,\n  competitionsUrl,\n  getOauthClientId,\n  oauthUrl,\n  setStaging,\n  setProd,\n  isStaging,\n} from './routes';\n\n// For now, this is only some internal details\nconst getOauthToken = () => ls('token') || '';\n\nexport const setOauthToken = (token) => ls('token', token);\n\nexport const setRemoteIfNeeded = () => {\n  const params = new URLSearchParams(window.location.search);\n  if (params.has('staging') && !isStaging()) {\n    setStaging();\n  }\n  if (params.has('prod') && isStaging()) {\n    setProd();\n  }\n};\n\nconst wcaApiFetch = (url, fetchOptions = {}) => fetch(url,\n  {\n    ...fetchOptions,\n    headers: new Headers({\n      Authorization: `Bearer ${getOauthToken()}`,\n      'Content-Type': 'application/json',\n    }),\n  })\n  .then((response) => {\n    if (!response.ok) throw new Error(response.statusText);\n    return response;\n  })\n  .then((response) => response.json());\n\nexport const getMe = () => wcaApiFetch(selfUrl());\nexport const getCompetitionWcif = (id) => wcaApiFetch(competitionWcifUrl(id));\n\nexport const getManageableCompetitions = () => {\n  // Last 12 months: months * days * hours * minByHour * secByMin * milli\n  const oneYearAgo = new Date(Date.now() - 12 * 28 * 24 * 60 * 60 * 1000);\n  const params = new URLSearchParams({\n    managed_by_me: true,\n    start: oneYearAgo.toISOString(),\n  });\n  return wcaApiFetch(competitionsUrl(`?${params.toString()}`));\n};\n\n// Call this upon loading to get the token in local storage is still valid!\nexport const loginUser = (setUser, setLoading) => {\n  if (getOauthToken().length === 0) {\n    return;\n  }\n\n  setLoading(true);\n  getMe().then((user) => {\n    setUser(user.me);\n  }).catch(() => {\n    // invalid token or other error, reset everything.\n    ls('token', '');\n  }).finally(() => setLoading(false));\n};\n\nexport const signIn = () => {\n  const { origin } = window.location;\n  const params = new URLSearchParams({\n    client_id: getOauthClientId(),\n    response_type: 'token',\n    redirect_uri: `${origin}${process.env.PUBLIC_URL}`,\n    scope: 'public manage_competitions',\n  });\n  window.location = oauthUrl(params.toString());\n};\n","import React from 'react';\nimport {\n  Menu, Dropdown, Item, Icon,\n} from 'semantic-ui-react';\nimport { Link } from '@reach/router';\nimport {\n  isPartiallyActive, isExactlyActive, prefixed,\n} from './utils';\nimport { clearAndRefresh } from '../utils';\nimport { signIn } from '../wca/api';\n\n/* eslint-disable jsx-a11y/anchor-is-valid */\nconst Navigation = ({\n  user,\n  userLoading,\n}) => (\n  <Menu pointing secondary>\n    <Link to={prefixed('/')} getProps={isExactlyActive}>\n      Home\n    </Link>\n    <Link to={prefixed('/settings')} getProps={isPartiallyActive}>\n      Settings\n    </Link>\n    <Link to={prefixed('/quick-simu')} getProps={isPartiallyActive}>\n      Quick simulation\n    </Link>\n    {user && (\n      <Link to={prefixed('/competitions')} getProps={isPartiallyActive}>\n        My competitions\n      </Link>\n    )}\n    {userLoading && (\n      <Item className=\"right\">\n        <Icon loading name=\"spinner\" />\n      </Item>\n    )}\n    {user && (\n      <Dropdown item text={user.name} className=\"right\" simple>\n        <Dropdown.Menu>\n          <Dropdown.Item onClick={clearAndRefresh}>\n            Sign out\n          </Dropdown.Item>\n        </Dropdown.Menu>\n      </Dropdown>\n    )}\n    {!user && !userLoading && (\n      <a href=\"#\" className=\"item right\" onClick={signIn}>\n        Sign in with the WCA\n      </a>\n    )}\n  </Menu>\n);\n\nexport default Navigation;\n","import React, { useState, useEffect } from 'react';\nimport { Link, Router } from '@reach/router';\nimport {\n  Grid,\n  Header,\n  Form,\n  Dropdown,\n  Segment,\n  Message,\n  Menu,\n} from 'semantic-ui-react';\nimport _ from 'lodash';\nimport { asMap } from '@viroulep/group-simulator';\n\nimport {\n  isPartiallyActive, isExactlyActive,\n} from '../Navigation/utils';\nimport './Settings.scss';\nimport { storeConfig, loadStoredConfig, clearAndRefreshSettings } from '../utils';\n\nconst DropdownMenu = ({\n  saveAction,\n  hasChanges,\n}) => (\n  <Dropdown item icon=\"cogs\" className=\"right\">\n    <Dropdown.Menu>\n      <Dropdown.Item\n        onClick={saveAction}\n        disabled={!hasChanges}\n      >\n        Save settings\n      </Dropdown.Item>\n      <Dropdown.Item onClick={clearAndRefreshSettings}>Reset settings to default</Dropdown.Item>\n    </Dropdown.Menu>\n  </Dropdown>\n);\n\n/* TODO: for import/export\n<Dropdown.Divider />\n  <Dropdown.Header>Export</Dropdown.Header>\n  <Dropdown.Item>Share</Dropdown.Item>\n  */\n\nconst SettingsPanel = ({\n  props,\n  setProps,\n}) => {\n  const updateInProps = (k, v) => {\n    const newProps = {\n      ...props,\n    };\n    // NaN evaluates as false, so if NaN take 0\n    newProps[k] = parseInt(v, 10) || 0;\n    setProps(newProps);\n  };\n\n  return (\n    <Form className=\"settings-form\">\n      <Grid doubling textAlign=\"right\" columns={3}>\n        {Object.entries(props).map(([k, v]) => (\n          <Grid.Column key={k}>\n            <Form.Input\n              inline\n              min={0}\n              type=\"number\"\n              label={k}\n              value={v}\n              onChange={(e) => updateInProps(k, e.target.value)}\n            />\n          </Grid.Column>\n        ))}\n      </Grid>\n    </Form>\n  );\n};\n\nconst Settings = ({\n  simulator,\n}) => {\n  const [setup, setSetup] = useState({});\n  const [model, setModel] = useState({});\n  const [scrambling, setScrambling] = useState({});\n  const [saved, setSaved] = useState({});\n\n  useEffect(() => {\n    const { mapSetup, mapModel, mapScrambling } = loadStoredConfig(simulator);\n    setSetup(mapSetup);\n    setModel(mapModel);\n    setScrambling(mapScrambling);\n    setSaved({\n      setup: mapSetup,\n      model: mapModel,\n      scrambling: mapScrambling,\n    });\n  }, [simulator]);\n\n  const loadConfig = () => {\n    const newConfig = { setup, model, scrambling };\n    simulator.loadConfig(\n      asMap(simulator.MapStringInt, setup),\n      asMap(simulator.MapStringInt, model),\n      asMap(simulator.MapStringInt, scrambling),\n    );\n    setSaved(newConfig);\n    storeConfig(newConfig);\n  }\n\n  const seHasChanges = !_.isEqual(saved.setup, setup);\n  const mHasChanges = !_.isEqual(saved.model, model);\n  const scHasChanges = !_.isEqual(saved.scrambling, scrambling);\n  const hasAnyChange = seHasChanges || mHasChanges || scHasChanges;\n\n  /* eslint-disable jsx-a11y/anchor-is-valid */\n  return (\n    <div>\n      <Header>\n        Simulator settings\n      </Header>\n      <Message color=\"violet\">\n        All values are unsigned integers.\n        <br />\n        All times are expressed in seconds.\n      </Message>\n      <Menu attached=\"top\" pointing color=\"violet\">\n        <Link to=\"\" getProps={isExactlyActive}>\n          Setup\n          {' '}\n          {seHasChanges ? '*' : ''}\n        </Link>\n        <Link to=\"model\" getProps={isPartiallyActive}>\n          Model parameters\n          {' '}\n          {mHasChanges ? '*' : ''}\n        </Link>\n        <Link to=\"scrambling\" getProps={isPartiallyActive}>\n          Scrambling costs\n          {' '}\n          {scHasChanges ? '*' : ''}\n        </Link>\n        <DropdownMenu\n          saveAction={loadConfig}\n          hasChanges={hasAnyChange}\n        />\n      </Menu>\n      <Segment attached=\"bottom\">\n        <Router>\n          <SettingsPanel\n            path=\"/\"\n            default\n            simulator={simulator}\n            props={setup}\n            setProps={setSetup}\n          />\n          <SettingsPanel\n            path=\"/model\"\n            simulator={simulator}\n            props={model}\n            setProps={setModel}\n          />\n          <SettingsPanel\n            path=\"/scrambling\"\n            simulator={simulator}\n            props={scrambling}\n            setProps={setScrambling}\n          />\n        </Router>\n      </Segment>\n    </div>\n  )\n};\n\nexport default Settings;\n","import React, { useState, useEffect } from 'react';\nimport {\n  Form, Button, Modal,\n} from 'semantic-ui-react';\n\nimport { setInt } from '../utils';\n\nconst generateRandomArray = (min, max, size) => Array.from(Array(size))\n  .map(() => Math.floor(Math.random() * (max - min + 1)) + min);\n\nconst ModalGenRandom = ({\n  times,\n  setTimes,\n  OpenButton,\n}) => {\n  const [open, setOpenValue] = useState(false);\n  const [generated, setGenerated] = useState([]);\n  const [min, setMin] = useState(10);\n  const [max, setMax] = useState(15);\n  const [amount, setAmount] = useState(20);\n\n  const setOpen = () => setOpenValue(true);\n  const setClose = () => setOpenValue(false);\n  const error = min > max ? {\n    content: 'Max must be greater than min',\n  } : null;\n\n  const generateAndAppend = () => setGenerated([\n    ...generated,\n    ...generateRandomArray(min, max, amount),\n  ]);\n\n  useEffect(() => setGenerated(times), [times]);\n\n  return (\n    <>\n      {OpenButton ? (\n        <OpenButton onClick={setOpen} />\n      ) : (\n        <Button primary onClick={setOpen}>Generate group</Button>\n      )}\n      <Modal open={open} centered={false} onClose={setClose}>\n        <Modal.Header>Generate competitors for group</Modal.Header>\n        <Modal.Content>\n          <p>\n            Use this form to generate a random population for the group.\n            Each number represents the average time of one competitor,\n            therefore if you want 20 competitors in the group you need to\n            generate 20 numbers.\n          </p>\n          <p>\n            There are\n            {' '}\n            {generated.length}\n            {' '}\n            competitors in the group currently:\n            <br />\n            <code>\n              {generated.join(', ')}\n            </code>\n            <br />\n            The form below let you add some randomly generated number within\n            {' '}\n            <em>min</em>\n            {' '}\n            and\n            {' '}\n            <em>max</em>\n            .\n          </p>\n          <Form>\n            <Form.Input\n              inline\n              min={1}\n              type=\"number\"\n              label=\"Min\"\n              value={min}\n              onChange={(e) => setInt(e, setMin, min)}\n            />\n            <Form.Input\n              inline\n              min={1}\n              type=\"number\"\n              label=\"Max\"\n              value={max}\n              error={error}\n              onChange={(e) => setInt(e, setMax, max)}\n            />\n            <Form.Input\n              inline\n              min={1}\n              type=\"number\"\n              label=\"Amount\"\n              value={amount}\n              onChange={(e) => setInt(e, setAmount, amount)}\n            />\n            <Button\n              color=\"violet\"\n              disabled={!!error}\n              content=\"Generate and append\"\n              onClick={generateAndAppend}\n            />\n            <Button\n              basic\n              negative\n              content=\"Clear times\"\n              onClick={() => setGenerated([])}\n            />\n          </Form>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button.Group>\n            <Button\n              positive\n              onClick={() => { setTimes(generated); setClose(); }}\n              content=\"Save\"\n            />\n            <Button.Or />\n            <Button color=\"black\" onClick={setClose} content=\"Discard\" />\n          </Button.Group>\n        </Modal.Actions>\n      </Modal>\n    </>\n  );\n};\n\nexport default ModalGenRandom;\n","import React, { useState } from 'react';\nimport {\n  Button, Segment,\n} from 'semantic-ui-react';\nimport ModalGenRandom from '../GroupGeneration/ModalGenRandom';\n\nconst TimesDetail = ({\n  times,\n  setTimes,\n}) => {\n  const [open, setOpen] = useState(false);\n  const OpenButton = ({ onClick }) => (\n    <Button\n      color=\"violet\"\n      content=\"Set group times\"\n      onClick={onClick}\n      compact\n    />\n  );\n\n  return (\n    <div className=\"times-details\">\n      <ModalGenRandom\n        times={times}\n        setTimes={setTimes}\n        OpenButton={OpenButton}\n      />\n      <Button onClick={() => setOpen(!open)} compact>\n        {open ? (\n          <>Hide details.</>\n        ) : (\n          <>Show average times.</>\n        )}\n      </Button>\n      {open && (\n        <Segment>\n          <code>\n            {times.join(', ')}\n          </code>\n        </Segment>\n      )}\n    </div>\n  );\n};\n\nexport default TimesDetail;\n","import React from 'react';\nimport { Dropdown } from 'semantic-ui-react';\n\n/* eslint-disable react/jsx-props-no-spreading */\nconst GenericPicker = ({\n  val,\n  setVal,\n  options,\n  ...props\n}) => (\n  <Dropdown\n    {...props}\n    value={val}\n    onChange={(e, { value }) => setVal(value)}\n    options={options}\n  />\n);\n\nexport default GenericPicker;\n","const events = [\n  {\n    id: '333',\n    name: '3x3x3 Cube',\n    preferred_format: 'a',\n    rank: 10,\n  },\n  {\n    id: '222',\n    name: '2x2x2 Cube',\n    preferred_format: 'a',\n    rank: 20,\n  },\n  {\n    id: '444',\n    name: '4x4x4 Cube',\n    preferred_format: 'a',\n    rank: 30,\n  },\n  {\n    id: '555',\n    name: '5x5x5 Cube',\n    preferred_format: 'a',\n    rank: 40,\n  },\n  {\n    id: '666',\n    name: '6x6x6 Cube',\n    preferred_format: 'm',\n    rank: 50,\n  },\n  {\n    id: '777',\n    name: '7x7x7 Cube',\n    preferred_format: 'm',\n    rank: 60,\n  },\n  {\n    id: '333bf',\n    name: '3x3x3 Blindfolded',\n    preferred_format: '3',\n    rank: 70,\n  },\n  {\n    id: '333fm',\n    name: '3x3x3 Fewest Moves',\n    preferred_format: 'm',\n    rank: 80,\n  },\n  {\n    id: '333oh',\n    name: '3x3x3 One-Handed',\n    preferred_format: 'a',\n    rank: 90,\n  },\n  {\n    id: 'clock',\n    name: 'Clock',\n    preferred_format: 'a',\n    rank: 110,\n  },\n  {\n    id: 'minx',\n    name: 'Megaminx',\n    preferred_format: 'a',\n    rank: 120,\n  },\n  {\n    id: 'pyram',\n    name: 'Pyraminx',\n    preferred_format: 'a',\n    rank: 130,\n  },\n  {\n    id: 'skewb',\n    name: 'Skewb',\n    preferred_format: 'a',\n    rank: 140,\n  },\n  {\n    id: 'sq1',\n    name: 'Square-1',\n    preferred_format: 'a',\n    rank: 150,\n  },\n  {\n    id: '444bf',\n    name: '4x4x4 Blindfolded',\n    preferred_format: '3',\n    rank: 160,\n  },\n  {\n    id: '555bf',\n    name: '5x5x5 Blindfolded',\n    preferred_format: '3',\n    rank: 170,\n  },\n  {\n    id: '333mbf',\n    name: '3x3x3 Multi-Blind',\n    preferred_format: '3',\n    rank: 180,\n  },\n  {\n    id: '333ft',\n    name: '3x3x3 With Feet',\n    preferred_format: 'a',\n    rank: 996,\n  },\n  {\n    id: 'magic',\n    name: 'Magic',\n    preferred_format: 'a',\n    rank: 997,\n  },\n  {\n    id: 'mmagic',\n    name: 'Master Magic',\n    preferred_format: 'a',\n    rank: 998,\n  },\n  {\n    id: '333mbo',\n    name: '3x3x3 Multi-Blind Old Style',\n    preferred_format: '3',\n    rank: 999,\n  },\n];\n\nconst byId = {\n};\n\nevents.forEach((e) => { byId[e.id] = e; });\n\nexport default {\n  official: events.filter((e) => e.rank < 900),\n  forSimulation: events.filter((e) => e.rank < 900 && !['333fm', '333mbf'].includes(e.id)),\n  byId,\n};\n","import React from 'react';\n\nimport GenericPicker from './Generic';\nimport events from '../data/events';\n\nconst eventsForSimu = events.forSimulation.map((e) => ({\n  text: e.name,\n  key: e.id,\n  value: e.id,\n}));\n\n/* eslint-disable react/jsx-props-no-spreading */\nconst EventPicker = ({\n  event,\n  setEvent,\n  ...props\n}) => (\n  <GenericPicker\n    {...props}\n    val={event}\n    setVal={setEvent}\n    options={eventsForSimu}\n  />\n);\n\nexport default EventPicker;\n","export const availableModels = ['Runners', 'JudgesRun'];\nexport const defaultModel = availableModels[0];\nexport const defaultEvent = '333';\n","import React from 'react';\n\nimport { availableModels } from '../data/simu';\nimport GenericPicker from './Generic';\n\nconst modelOptions = availableModels.map((m) => ({\n  text: m,\n  key: m,\n  value: m,\n}));\n\n/* eslint-disable react/jsx-props-no-spreading */\nconst ModelPicker = ({\n  model,\n  setModel,\n  ...props\n}) => (\n  <GenericPicker\n    {...props}\n    val={model}\n    setVal={setModel}\n    options={modelOptions}\n  />\n);\n\nexport default ModelPicker;\n","import React, { useState } from 'react';\nimport {\n  Button, Header, Input,\n} from 'semantic-ui-react';\nimport { asVector } from '@viroulep/group-simulator';\nimport EventPicker from '../Pickers/Event';\nimport ModelPicker from '../Pickers/Model';\nimport { timeToString, setInt } from '../utils';\nimport { defaultModel, defaultEvent } from '../data/simu';\n\nconst QuickOpt = ({\n  simulator,\n  times,\n}) => {\n  const [event, setEvent] = useState(defaultEvent);\n  const [model, setModel] = useState(defaultModel);\n  const [message, setMessage] = useState('');\n  const [maxStations, setMaxStations] = useState(10);\n  const [maxStaff, setMaxStaff] = useState(14);\n\n  const runSimulation = () => {\n    const timesVec = asVector(simulator.VectorTime, times);\n    // We'll just use the default config with no override!\n    const localOverride = new simulator.MapStringInt();\n    const {\n      Err, BestResult, Judges, Runners, Scramblers,\n    } = simulator.optimizeStaff(\n      event, timesVec, maxStations, maxStaff, localOverride, model,\n    );\n    if (Err !== simulator.ErrorKind.SUCCESS) {\n      setMessage(\n        `An error occurred during the simulation: ${simulator.errorMessage(Err)}`,\n      );\n    } else {\n      const strResult = `The best group took ${timeToString(BestResult)},`;\n      const strStaff = `using ${Judges} judges, ${Scramblers} scramblers, and ${Runners} runners. `;\n      setMessage(`${strResult} ${strStaff}`);\n    }\n  };\n\n  return (\n    <>\n      <Header>\n        Quick staff optimizer\n      </Header>\n      <div className=\"opt-content\">\n        <div className=\"inputs\">\n          <Input\n            min={3}\n            type=\"number\"\n            label=\"Total staff\"\n            value={maxStaff}\n            onChange={(e) => setInt(e, setMaxStaff, maxStaff)}\n          />\n          <Input\n            min={1}\n            type=\"number\"\n            label=\"Stations\"\n            value={maxStations}\n            onChange={(e) => setInt(e, setMaxStations, maxStations)}\n          />\n        </div>\n        <p>\n          Given I have\n          {' '}\n          {maxStaff}\n          {' '}\n          staff and at most\n          {' '}\n          {maxStations}\n          {' '}\n          stations available, I want to get the shortest time for this group.\n        </p>\n        <div>\n          This group is for\n          {' '}\n          <EventPicker event={event} setEvent={setEvent} inline scrolling />\n          {' '}\n          and my staff will be using the\n          {' '}\n          <ModelPicker model={model} setModel={setModel} inline />\n          {' '}\n          system throughout the group.\n        </div>\n      </div>\n      <Button\n        primary\n        className=\"run-simu\"\n        content=\"Run it!\"\n        onClick={runSimulation}\n      />\n      <p>\n        {message}\n      </p>\n    </>\n  );\n};\n\nexport default QuickOpt;\n","import React, { useState } from 'react';\nimport {\n  Button, Header, Message,\n} from 'semantic-ui-react';\nimport { asVector } from '@viroulep/group-simulator';\nimport EventPicker from '../Pickers/Event';\nimport ModelPicker from '../Pickers/Model';\nimport { timeToString } from '../utils';\nimport { defaultModel, defaultEvent } from '../data/simu';\n\nconst QuickSimu = ({\n  simulator,\n  times,\n}) => {\n  const [event, setEvent] = useState(defaultEvent);\n  const [model, setModel] = useState(defaultModel);\n  const [message, setMessage] = useState('');\n\n  const runSimulation = () => {\n    const timesVec = asVector(simulator.VectorTime, times);\n    // We'll just use the default config with no override!\n    const localOverride = new simulator.MapStringInt();\n    const { Err, Value } = simulator.simuGroup(event, timesVec, localOverride, model);\n    if (Err !== simulator.ErrorKind.SUCCESS) {\n      setMessage(\n        `An error occurred during the simulation: ${simulator.errorMessage(Err)}`,\n      );\n    } else {\n      setMessage(`The group took ${timeToString(Value)}.`);\n    }\n  };\n\n  return (\n    <>\n      <Header>\n        Quick group simulation\n      </Header>\n      <Message\n        compact\n        color=\"brown\"\n      >\n        You can adjust the number of judges/scramblers/runners,\n        as well as the miscramble or extra rate in the settings.\n      </Message>\n      <div>\n        I want to simulate this group for\n        {' '}\n        <EventPicker event={event} setEvent={setEvent} inline scrolling />\n        {' '}\n        and my staff will be using the\n        {' '}\n        <ModelPicker model={model} setModel={setModel} inline />\n        {' '}\n        system throughout the group.\n      </div>\n      <Button\n        primary\n        className=\"run-simu\"\n        content=\"Run it!\"\n        onClick={runSimulation}\n      />\n      <p>\n        {message}\n      </p>\n    </>\n  );\n};\n\nexport default QuickSimu;\n","import React, { useState } from 'react';\nimport {\n  Header,\n} from 'semantic-ui-react';\nimport TimesDetail from './TimesDetail';\nimport QuickOpt from './QuickOpt';\nimport QuickSimu from './QuickSimu';\nimport './QuickRun.scss';\n\n// Poor man's database\nlet savedTimes = [];\n\nconst QuickRunPage = ({\n  simulator,\n}) => {\n  const [times, setTimes] = useState(savedTimes);\n  const setPersistedTimes = (array) => {\n    savedTimes = array;\n    setTimes(array);\n  };\n\n  return (\n    <>\n      <Header>\n        Group setup\n      </Header>\n      <div>\n        There are currently\n        {' '}\n        {times.length}\n        {' '}\n        competitors in the group.\n        <TimesDetail times={times} setTimes={setPersistedTimes} />\n      </div>\n      <QuickSimu simulator={simulator} times={times} />\n      <QuickOpt simulator={simulator} times={times} />\n    </>\n  );\n};\n\nexport default QuickRunPage;\n","import { useState, useEffect, useCallback } from 'react';\nimport ls from 'local-storage';\n\nconst defaultData = {\n  data: null,\n  lastFetched: null,\n};\n\n/* eslint-disable import/prefer-default-export */\nexport const usePersistence = (kind, fetcher) => {\n  const [loadedData, setData] = useState({\n    ...defaultData,\n  });\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  const sync = useCallback(() => {\n    setLoading(true);\n    setError(null);\n    fetcher().then((loaded) => {\n      const data = {\n        data: loaded,\n        lastFetched: Date.now(),\n      };\n      setData(data);\n      ls(kind, data);\n    }).catch((err) => {\n      setError(err.message);\n    }).finally(() => setLoading(false));\n  }, [kind, fetcher, setData, setError]);\n\n  useEffect(() => {\n    const storedData = ls(kind) || {\n      ...defaultData,\n    };\n    if (!storedData.lastFetched) {\n      sync();\n    } else {\n      setData(storedData);\n      setLoading(false);\n    }\n  }, [kind, sync]);\n\n  return {\n    loadedData,\n    loading,\n    error,\n    sync,\n  };\n};\n","import React from 'react';\nimport { Icon, Popup } from 'semantic-ui-react';\n\nconst SyncIcon = ({\n  loading,\n  sync,\n  lastFetched,\n}) => {\n  const syncIcon = (\n    <Icon\n      link\n      name=\"sync\"\n      size=\"small\"\n      loading={loading}\n      onClick={sync}\n    />\n  );\n  return (\n    <>\n      {lastFetched ? (\n        <Popup\n          trigger={syncIcon}\n          content={`Last fetched on ${new Date(lastFetched).toLocaleString()}`}\n          size=\"small\"\n          wide\n          position=\"bottom center\"\n        />\n      ) : (\n        syncIcon\n      )}\n    </>\n  );\n};\n\nexport default SyncIcon;\n","import React from 'react';\nimport { Link } from '@reach/router';\nimport {\n  Menu, Header, Loader, Placeholder, Dimmer, Segment, Message,\n} from 'semantic-ui-react';\n\nimport { getManageableCompetitions } from '../wca/api';\nimport { usePersistence } from '../wca/persistence';\nimport SyncIcon from './SyncIcon';\nimport './IndexList.scss';\n\nconst LoadingPlaceholder = () => (\n  <>\n    <Dimmer active inverted>\n      <Loader active inverted />\n    </Dimmer>\n    <Placeholder>\n      <Placeholder.Line />\n      <Placeholder.Line />\n    </Placeholder>\n  </>\n);\n\nconst ErrorMessage = ({ error }) => (\n  <Message negative>\n    Something wrong happened when loading the data:\n    <pre>\n      {error}\n    </pre>\n    Your authentification token may have expired, you may try to sign out then\n    back in, or to use the &quot;Clear locally stored data&quot; option in the menu.\n    <br />\n    If the issue persists, it most likely means the WCA website is unreachable.\n    or the WCA website is unreachable.\n  </Message>\n);\n\nconst Competitions = ({\n  competitions,\n}) => (\n  <Menu vertical fluid>\n    {competitions.map((comp) => (\n      <Link key={comp.id} to={comp.id} className=\"item\">\n        {comp.name}\n      </Link>\n    ))}\n  </Menu>\n);\n\nconst IndexList = () => {\n  const {\n    loadedData, loading, error, sync,\n  } = usePersistence('competitions.index', getManageableCompetitions);\n  const { data, lastFetched } = loadedData;\n  return (\n    <>\n      <Header className=\"my-comps\">\n        My recent competitions\n        <SyncIcon\n          loading={loading}\n          sync={sync}\n          lastFetched={lastFetched}\n        />\n      </Header>\n      {error && (\n        <ErrorMessage error={error} />\n      )}\n      {loading && (\n        <Segment>\n          <LoadingPlaceholder />\n        </Segment>\n      )}\n      {!loading && data && (\n        <Competitions competitions={data} />\n      )}\n    </>\n  );\n};\n\nexport default IndexList;\n","import React, { useState, useEffect } from 'react';\nimport {\n  Button, Container, Message, Icon,\n} from 'semantic-ui-react';\nimport { getSimu } from '@viroulep/group-simulator';\nimport { Router } from '@reach/router';\n\nimport './App.css';\nimport Navigation from './Navigation/Navigation';\nimport Settings from './Settings/Settings';\nimport QuickRunPage from './Simulation/QuickRun';\nimport { loadStoredConfig } from './utils';\nimport {\n  setOauthToken,\n  loginUser,\n  setRemoteIfNeeded,\n} from './wca/api';\nimport { isStaging } from './wca/routes';\nimport CompetitionsList from './Competitions/IndexList';\n\n// https://github.com/rafrex/spa-github-pages\n\nconst LoadingMessage = () => (\n  <>\n    <Message.Header>Loading required content</Message.Header>\n    Please wait while the page is loading a required module.\n  </>\n);\n\nconst FailureMessage = () => (\n  <>\n    <p>\n      The loading of the module timed out.\n      It&pos;s likely that there was an error and that your browser does not support WebAssembly.\n    </p>\n\n    <p>\n      This module is necessary for this application, it is pointless to show\n      you anything more than this error message at this point.\n      <br />\n      Feel free to check this website to make sure your browser is supported.\n    </p>\n    <Button\n      href=\"https://caniuse.com/#feat=wasm\"\n      target=\"_blank\"\n      secondary\n    >\n      Check browser compatibility\n    </Button>\n  </>\n);\n\n// Use dismissable with wasm: info loading, green loaded, red timeout!\nconst LoadingWasm = ({\n  simulator,\n  loading,\n}) => (\n  <>\n    {!simulator && (\n      <Message\n        icon\n        color={loading ? 'teal' : 'red'}\n      >\n        {loading && (\n          <Icon name=\"circle notched\" loading />\n        )}\n        <Message.Content>\n          {loading ? (\n            <LoadingMessage />\n          ) : (\n            <FailureMessage />\n          )}\n        </Message.Content>\n      </Message>\n    )}\n  </>\n);\n\nconst Home = () => (\n  <div>\n    This page is a work in progress and most likely won&apos;t do what you expect.\n    <br />\n    You should not use it.\n    <br />\n    Come back later.\n  </div>\n);\n\nconst NotFound = () => <p>Oups, it&apos;s a 404</p>;\n\nconst getOauthTokenIfAny = () => {\n  const hash = window.location.hash.replace(/^#/, '');\n  const hashParams = new URLSearchParams(hash);\n  if (hashParams.has('access_token')) {\n    window.location.hash = '';\n    setOauthToken(hashParams.get('access_token'));\n  }\n};\n\nconst Competitions = ({ children }) => <>{children}</>;\nconst Competition = ({\n  competitionId,\n}) => <div>{competitionId}</div>;\n\nfunction App() {\n  const [simulator, setSimulator] = useState(undefined);\n  const [loading, setLoading] = useState(true);\n  const [userLoading, setUserLoading] = useState(false);\n  const [currentUser, setCurrentUser] = useState(null);\n\n  const loadWasm = async () => {\n    const wasm = getSimu(() => { setSimulator(wasm); setLoading(false) });\n  };\n\n  // Pass '[]' as a dependency, so that it's ran just once.\n  useEffect(() => {\n    loadWasm();\n    setRemoteIfNeeded();\n    getOauthTokenIfAny();\n    loginUser(setCurrentUser, setUserLoading);\n    // Register a timeout on the loading process\n    setTimeout(() => setLoading(false), 3000);\n  }, []);\n\n  useEffect(() => { loadStoredConfig(simulator); }, [simulator]);\n\n  return (\n    <Container>\n      <LoadingWasm simulator={simulator} loading={loading} />\n      {simulator && (\n        <>\n          <Navigation\n            user={currentUser}\n            userLoading={userLoading}\n          />\n          {isStaging() && (\n            <Message size=\"small\">\n              You&apos;re not currently using the WCA&apos;s production data.\n            </Message>\n          )}\n          <Router basepath={process.env.PUBLIC_URL}>\n            <Home path=\"/\" />\n            <Settings simulator={simulator} path=\"settings/*\" />\n            <QuickRunPage simulator={simulator} path=\"/quick-simu\" />\n            {currentUser && (\n              <Competitions path=\"competitions\">\n                <CompetitionsList path=\"/\" />\n                <Competition path=\":competitionId\" />\n              </Competitions>\n            )}\n            <NotFound default />\n          </Router>\n        </>\n      )}\n    </Container>\n  );\n}\n\nexport default App;\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'fomantic-ui-css/semantic.css';\n\n// NOTE:\n// import { Link } from 'react-router-dom'\n// import { Button } from 'semantic-ui-react'\n\n// // 💡 `to` prop is not handled in `Button` and will be passed to `Link` component\n// <Button as={Link} to=\"/home\">\n// To homepage\n// </Button>\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}