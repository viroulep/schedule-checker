{"version":3,"sources":["data/events.js","Pickers/Event.js","data/simu.js","App.js","Pickers/Model.js","serviceWorker.js","index.js"],"names":["events","id","name","preferred_format","rank","byId","forEach","e","official","filter","forSimulation","includes","map","text","key","value","availableModels","LoadingMessage","m","Message","Header","FailureMessage","Button","href","target","secondary","LoadingWasm","simulator","loading","icon","color","Icon","Content","App","useState","undefined","setSimulator","setLoading","loadWasm","a","wasm","getSimu","useEffect","setTimeout","Container","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b5d46e06.chunk.js","sourcesContent":["const events = [\n  {\n    id: '333',\n    name: '3x3x3 Cube',\n    preferred_format: 'a',\n    rank: 10,\n  },\n  {\n    id: '222',\n    name: '2x2x2 Cube',\n    preferred_format: 'a',\n    rank: 20,\n  },\n  {\n    id: '444',\n    name: '4x4x4 Cube',\n    preferred_format: 'a',\n    rank: 30,\n  },\n  {\n    id: '555',\n    name: '5x5x5 Cube',\n    preferred_format: 'a',\n    rank: 40,\n  },\n  {\n    id: '666',\n    name: '6x6x6 Cube',\n    preferred_format: 'm',\n    rank: 50,\n  },\n  {\n    id: '777',\n    name: '7x7x7 Cube',\n    preferred_format: 'm',\n    rank: 60,\n  },\n  {\n    id: '333bf',\n    name: '3x3x3 Blindfolded',\n    preferred_format: '3',\n    rank: 70,\n  },\n  {\n    id: '333fm',\n    name: '3x3x3 Fewest Moves',\n    preferred_format: 'm',\n    rank: 80,\n  },\n  {\n    id: '333oh',\n    name: '3x3x3 One-Handed',\n    preferred_format: 'a',\n    rank: 90,\n  },\n  {\n    id: 'clock',\n    name: 'Clock',\n    preferred_format: 'a',\n    rank: 110,\n  },\n  {\n    id: 'minx',\n    name: 'Megaminx',\n    preferred_format: 'a',\n    rank: 120,\n  },\n  {\n    id: 'pyram',\n    name: 'Pyraminx',\n    preferred_format: 'a',\n    rank: 130,\n  },\n  {\n    id: 'skewb',\n    name: 'Skewb',\n    preferred_format: 'a',\n    rank: 140,\n  },\n  {\n    id: 'sq1',\n    name: 'Square-1',\n    preferred_format: 'a',\n    rank: 150,\n  },\n  {\n    id: '444bf',\n    name: '4x4x4 Blindfolded',\n    preferred_format: '3',\n    rank: 160,\n  },\n  {\n    id: '555bf',\n    name: '5x5x5 Blindfolded',\n    preferred_format: '3',\n    rank: 170,\n  },\n  {\n    id: '333mbf',\n    name: '3x3x3 Multi-Blind',\n    preferred_format: '3',\n    rank: 180,\n  },\n  {\n    id: '333ft',\n    name: '3x3x3 With Feet',\n    preferred_format: 'a',\n    rank: 996,\n  },\n  {\n    id: 'magic',\n    name: 'Magic',\n    preferred_format: 'a',\n    rank: 997,\n  },\n  {\n    id: 'mmagic',\n    name: 'Master Magic',\n    preferred_format: 'a',\n    rank: 998,\n  },\n  {\n    id: '333mbo',\n    name: '3x3x3 Multi-Blind Old Style',\n    preferred_format: '3',\n    rank: 999,\n  },\n];\n\nconst byId = {\n};\n\nevents.forEach((e) => { byId[e.id] = e; });\n\nexport default {\n  official: events.filter((e) => e.rank < 900),\n  forSimulation: events.filter((e) => e.rank < 900 && !['333fm', '333mbf'].includes(e.id)),\n  byId,\n};\n","import React from 'react';\n\nimport GenericPicker from './Generic';\nimport events from '../data/events';\n\nconst eventsForSimu = events.forSimulation.map((e) => ({\n  text: e.name,\n  key: e.id,\n  value: e.id,\n}));\n\n/* eslint-disable react/jsx-props-no-spreading */\nconst EventPicker = ({\n  event,\n  setEvent,\n  ...props\n}) => (\n  <GenericPicker\n    {...props}\n    val={event}\n    setVal={setEvent}\n    options={eventsForSimu}\n  />\n);\n\nexport default EventPicker;\n","export const availableModels = ['Runners', 'JudgesRun'];\nexport const defaultModel = availableModels[0];\nexport const defaultEvent = '333';\n","import React, { useState, useEffect } from 'react';\nimport {\n  Button, Container, Message, Icon,\n} from 'semantic-ui-react';\nimport { getSimu } from '@viroulep/group-simulator';\nimport { Router } from '@reach/router';\n\nimport './App.css';\nimport Navigation from './Navigation/Navigation';\nimport Settings from './Settings/Settings';\nimport QuickRunPage from './Simulation/QuickRun';\n\n// https://github.com/rafrex/spa-github-pages\n\nconst LoadingMessage = () => (\n  <>\n    <Message.Header>Loading required content</Message.Header>\n    Please wait while the page is loading a required module.\n  </>\n);\n\nconst FailureMessage = () => (\n  <>\n    <p>\n      The loading of the module timed out.\n      It&pos;s likely that there was an error and that your browser does not support WebAssembly.\n    </p>\n\n    <p>\n      This module is necessary for this application, it is pointless to show\n      you anything more than this error message at this point.\n      <br />\n      Feel free to check this website to make sure your browser is supported.\n    </p>\n    <Button\n      href=\"https://caniuse.com/#feat=wasm\"\n      target=\"_blank\"\n      secondary\n    >\n      Check browser compatibility\n    </Button>\n  </>\n);\n\n// Use dismissable with wasm: info loading, green loaded, red timeout!\nconst LoadingWasm = ({\n  simulator,\n  loading,\n}) => (\n  <>\n    {!simulator && (\n      <Message\n        icon\n        color={loading ? 'teal' : 'red'}\n      >\n        {loading && (\n          <Icon name=\"circle notched\" loading />\n        )}\n        <Message.Content>\n          {loading ? (\n            <LoadingMessage />\n          ) : (\n            <FailureMessage />\n          )}\n        </Message.Content>\n      </Message>\n    )}\n  </>\n);\n\nconst Home = () => (\n  <div>\n    This page is a work in progress and most likely won&apos;t do what you expect.\n    <br />\n    You should not use it.\n    <br />\n    Come back later.\n  </div>\n);\n\nconst NotFound = () => <p>Oups, it&apos;s a 404</p>;\n\nfunction App() {\n  const [simulator, setSimulator] = useState(undefined);\n  const [loading, setLoading] = useState(true);\n\n  const loadWasm = async () => {\n    const wasm = getSimu(() => { setSimulator(wasm); setLoading(false) });\n  };\n\n  // Pass '[]' as a dependency, so that it's ran just once.\n  useEffect(() => {\n    loadWasm();\n    // Register a timeout on the loading process\n    setTimeout(() => setLoading(false), 3000);\n  }, []);\n\n  return (\n    <Container>\n      <LoadingWasm simulator={simulator} loading={loading} />\n      <div>coucou</div>\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\n\nimport { availableModels } from '../data/simu';\nimport GenericPicker from './Generic';\n\nconst modelOptions = availableModels.map((m) => ({\n  text: m,\n  key: m,\n  value: m,\n}));\n\n/* eslint-disable react/jsx-props-no-spreading */\nconst ModelPicker = ({\n  model,\n  setModel,\n  ...props\n}) => (\n  <GenericPicker\n    {...props}\n    val={model}\n    setVal={setModel}\n    options={modelOptions}\n  />\n);\n\nexport default ModelPicker;\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'fomantic-ui-css/semantic.css';\n\n// NOTE:\n// import { Link } from 'react-router-dom'\n// import { Button } from 'semantic-ui-react'\n\n// // 💡 `to` prop is not handled in `Button` and will be passed to `Link` component\n// <Button as={Link} to=\"/home\">\n// To homepage\n// </Button>\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}