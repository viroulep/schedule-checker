{"version":3,"sources":["Navigation/utils.js","utils/index.js","wca/routes.js","wca/api.js","Navigation/Navigation.js","Settings/Settings.js","GroupGeneration/ModalGenRandom.js","Simulation/TimesDetail.js","Pickers/Generic.js","data/events.js","Pickers/Event.js","data/simu.js","Pickers/Model.js","Simulation/QuickOpt.js","Simulation/QuickSimu.js","Simulation/QuickRun.js","App.js","serviceWorker.js","index.js"],"names":["itemProps","active","className","cn","isPartiallyActive","isPartiallyCurrent","isExactlyActive","isCurrent","prefixed","url","process","integerDivision","x","y","result","Math","floor","remainder","timeToString","time","hour","join","setInt","e","set","def","parseInt","target","value","loadStoredConfig","simulator","saved","ls","mapSetup","setup","asObject","getSetupProps","mapModel","model","getModelProps","mapScrambling","scrambling","getScramblingProps","err","loadConfig","asMap","MapStringInt","ErrorKind","SUCCESS","console","error","errorMessage","clearAndRefresh","document","location","reload","baseUrl","path","apiUrl","getOauthToken","signOut","setRemoteIfNeeded","params","URLSearchParams","window","search","has","wcaApiFetch","fetchOptions","fetch","headers","Headers","Authorization","then","response","ok","Error","statusText","json","getMe","signIn","paramsAsString","origin","client_id","response_type","redirect_uri","scope","toString","Navigation","user","userLoading","Menu","pointing","secondary","to","getProps","Item","Icon","loading","name","Dropdown","item","text","simple","onClick","href","DropdownMenu","saveAction","hasChanges","icon","disabled","SettingsPanel","props","setProps","Form","Grid","doubling","textAlign","columns","Object","entries","map","k","v","Column","key","Input","inline","min","type","label","onChange","newProps","updateInProps","Settings","useState","setSetup","setModel","setScrambling","setSaved","useEffect","seHasChanges","_","isEqual","mHasChanges","scHasChanges","hasAnyChange","Header","Message","color","attached","conf","newConfig","Segment","default","ModalGenRandom","times","setTimes","OpenButton","open","setOpenValue","generated","setGenerated","setMin","max","setMax","amount","setAmount","setOpen","setClose","content","Button","primary","Modal","centered","onClose","Content","length","size","Array","from","random","generateRandomArray","basic","negative","Actions","Group","positive","Or","TimesDetail","compact","GenericPicker","val","setVal","options","events","id","preferred_format","rank","byId","forEach","eventsForSimu","official","filter","forSimulation","includes","EventPicker","event","setEvent","Generic","availableModels","defaultModel","modelOptions","m","ModelPicker","QuickOpt","message","setMessage","maxStations","setMaxStations","maxStaff","setMaxStaff","Event","scrolling","Model","timesVec","asVector","VectorTime","localOverride","optimizeStaff","Err","BestResult","Judges","Runners","Scramblers","strResult","strStaff","QuickSimu","simuGroup","Value","savedTimes","QuickRunPage","array","LoadingMessage","FailureMessage","LoadingWasm","Home","NotFound","getOauthTokenIfAny","token","hash","replace","hashParams","get","App","undefined","setSimulator","setLoading","setUserLoading","currentUser","setCurrentUser","loadWasm","a","wasm","getSimu","setUser","me","catch","finally","loginUser","setTimeout","Container","basepath","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.89de62f0.chunk.js","sourcesContent":["import cn from 'classnames';\n\nconst itemProps = (active) => ({\n  className: cn('item', { active }),\n});\n\nexport const isPartiallyActive = ({\n  isPartiallyCurrent,\n}) => itemProps(isPartiallyCurrent);\n\nexport const isExactlyActive = ({\n  isCurrent,\n}) => itemProps(isCurrent);\n\nexport const prefixed = (url) => `${process.env.PUBLIC_URL}${url}`;\n","import ls from 'local-storage';\nimport { asMap, asObject } from '@viroulep/group-simulator';\n\nconst SECS_IN_MINUTE = 60;\nconst SECS_IN_HOUR = 60 * SECS_IN_MINUTE;\n\nconst integerDivision = (x, y) => ({\n  result: Math.floor(x / y),\n  remainder: x % y,\n});\n\nexport const timeToString = (time) => {\n  let { result, remainder } = integerDivision(time, SECS_IN_HOUR);\n  const hour = result;\n  ({ result, remainder } = integerDivision(remainder, SECS_IN_MINUTE));\n  const hourStr = hour > 0 ? `${hour} hours` : '';\n  const minStr = result > 0 ? `${result} minutes` : '';\n  const secStr = `${remainder} seconds`;\n  return [hourStr, minStr, secStr].join(' ');\n};\n\nexport const setInt = (e, set, def) => set(parseInt(e.target.value, 10) || def);\n\nexport const loadStoredConfig = (simulator) => {\n  if (!simulator) {\n    return {};\n  }\n  const saved = ls('config') || {};\n  const mapSetup = saved.setup || asObject(simulator.getSetupProps());\n  const mapModel = saved.model || asObject(simulator.getModelProps());\n  const mapScrambling = saved.scrambling || asObject(simulator.getScramblingProps());\n  const err = simulator.loadConfig(\n    asMap(simulator.MapStringInt, mapSetup),\n    asMap(simulator.MapStringInt, mapModel),\n    asMap(simulator.MapStringInt, mapScrambling),\n  );\n  if (err !== simulator.ErrorKind.SUCCESS) {\n    /* eslint-disable-next-line */\n    console.error(`Could not load local config: ${simulator.errorMessage(err)}`);\n    return {\n      mapSetup: asObject(simulator.getSetupProps()),\n      mapModel: asObject(simulator.getModelProps()),\n      mapScrambling: asObject(simulator.getScramblingProps()),\n    }\n  }\n\n  return { mapSetup, mapModel, mapScrambling };\n};\n\nexport const storeConfig = (conf) => ls('config', conf);\n\nexport const clearAndRefresh = () => {\n  ls('config', {});\n  document.location.reload();\n};\n","import ls from 'local-storage';\n\nconst prodBaseUrl = 'https://www.worldcubeassociation.org';\nconst stagingBaseUrl = 'https://staging.worldcubeassociation.org';\nconst overridenBaseUrl = process.env.REACT_APP_WCA_URL;\n\nexport const setStaging = () => {\n  ls('staging', true);\n  document.location.reload();\n};\nexport const setProd = () => {\n  ls('staging', false);\n  document.location.reload();\n};\n\nexport const isStaging = () => overridenBaseUrl || ls('staging');\n\nconst WCA_URL = overridenBaseUrl || (isStaging() ? stagingBaseUrl : prodBaseUrl);\n\nexport const getOauthClientId = () => ((overridenBaseUrl || isStaging())\n  ? 'example-application-id'\n  : '3A9BGEPZcmf7CA1D77meVRMzFGT-CZq6-6oXyPgelMU');\n\nexport const baseUrl = (path = '') => `${WCA_URL}${path}`;\n\nexport const oauthUrl = (paramsAsString) => baseUrl(`/oauth/authorize?${paramsAsString}`);\n\nexport const apiUrl = (path) => baseUrl(`/api/v0${path}`);\nexport const selfUrl = () => apiUrl('/me');\nexport const competitionsUrl = (path) => apiUrl(`/competitions${path}`);\nexport const competitionWcifUrl = (id) => competitionsUrl(`/${id}/wcif`);\n","import ls from 'local-storage';\nimport {\n  selfUrl,\n  competitionWcifUrl,\n  getOauthClientId,\n  oauthUrl,\n  setStaging,\n  setProd,\n  isStaging,\n} from './routes';\n\n// For now, this is only some internal details\nconst getOauthToken = () => ls('token') || '';\n\nexport const setOauthToken = (token) => ls('token', token);\nexport const signOut = () => {\n  ls('token', '');\n};\n\nexport const setRemoteIfNeeded = () => {\n  const params = new URLSearchParams(window.location.search);\n  if (params.has('staging') && !isStaging()) {\n    signOut();\n    setStaging();\n  }\n  if (params.has('prod') && isStaging()) {\n    signOut();\n    setProd();\n  }\n};\n\nconst wcaApiFetch = (url, fetchOptions = {}) => fetch(url,\n  {\n    ...fetchOptions,\n    headers: new Headers({\n      Authorization: `Bearer ${getOauthToken()}`,\n      'Content-Type': 'application/json',\n    }),\n  })\n  .then((response) => {\n    if (!response.ok) throw new Error(response.statusText);\n    return response;\n  })\n  .then((response) => response.json());\n\nexport const getMe = () => wcaApiFetch(selfUrl());\nexport const getCompetitionWcif = (id) => wcaApiFetch(competitionWcifUrl(id));\n\n\n// Call this upon loading to get the token in local storage is still valid!\nexport const loginUser = (setUser, setLoading) => {\n  if (getOauthToken().length === 0) {\n    return;\n  }\n\n  setLoading(true);\n  getMe().then((user) => {\n    setUser(user.me);\n  }).catch(() => {\n    // invalid token or other error, reset everything.\n    ls('token', '');\n  }).finally(() => setLoading(false));\n};\n\nexport const signIn = () => {\n  const { origin } = window.location;\n  const params = new URLSearchParams({\n    client_id: getOauthClientId(),\n    response_type: 'token',\n    redirect_uri: `${origin}${process.env.PUBLIC_URL}`,\n    scope: 'public manage_competitions',\n  });\n  window.location = oauthUrl(params.toString());\n};\n","import React from 'react';\nimport {\n  Menu, Dropdown, Item, Icon,\n} from 'semantic-ui-react';\nimport { Link } from '@reach/router';\nimport {\n  isPartiallyActive, isExactlyActive, prefixed,\n} from './utils';\nimport { clearAndRefresh } from '../utils';\nimport { signIn } from '../wca/api';\n\n/* eslint-disable jsx-a11y/anchor-is-valid */\nconst Navigation = ({\n  user,\n  userLoading,\n  signOut,\n}) => (\n  <Menu pointing secondary>\n    <Link to={prefixed('/')} getProps={isExactlyActive}>\n      Home\n    </Link>\n    <Link to={prefixed('/settings')} getProps={isPartiallyActive}>\n      Settings\n    </Link>\n    <Link to={prefixed('/quick-simu')} getProps={isPartiallyActive}>\n      Quick simulation\n    </Link>\n    {userLoading && (\n      <Item className=\"right\">\n        <Icon loading name=\"spinner\" />\n      </Item>\n    )}\n    {user && (\n      <Dropdown item text={user.name} className=\"right\" simple>\n        <Dropdown.Menu>\n          <Dropdown.Item onClick={signOut}>\n            Sign out\n          </Dropdown.Item>\n          <Dropdown.Item onClick={clearAndRefresh}>\n            Clear locally stored data\n          </Dropdown.Item>\n        </Dropdown.Menu>\n      </Dropdown>\n    )}\n    {!user && !userLoading && (\n      <a href=\"#\" className=\"item right\" onClick={signIn}>\n        Sign in with the WCA\n      </a>\n    )}\n  </Menu>\n);\n\nexport default Navigation;\n","import React, { useState, useEffect } from 'react';\nimport { Link, Router } from '@reach/router';\nimport {\n  Grid,\n  Header,\n  Form,\n  Dropdown,\n  Segment,\n  Message,\n  Menu,\n} from 'semantic-ui-react';\nimport _ from 'lodash';\nimport { asMap } from '@viroulep/group-simulator';\n\nimport {\n  isPartiallyActive, isExactlyActive,\n} from '../Navigation/utils';\nimport './Settings.scss';\nimport { storeConfig, loadStoredConfig, clearAndRefresh } from '../utils';\n\nconst DropdownMenu = ({\n  saveAction,\n  hasChanges,\n}) => (\n  <Dropdown item icon=\"cogs\" className=\"right\">\n    <Dropdown.Menu>\n      <Dropdown.Item\n        onClick={saveAction}\n        disabled={!hasChanges}\n      >\n        Save settings\n      </Dropdown.Item>\n      <Dropdown.Item onClick={clearAndRefresh}>Reset settings to default</Dropdown.Item>\n    </Dropdown.Menu>\n  </Dropdown>\n);\n\n/* TODO: for import/export\n<Dropdown.Divider />\n  <Dropdown.Header>Export</Dropdown.Header>\n  <Dropdown.Item>Share</Dropdown.Item>\n  */\n\nconst SettingsPanel = ({\n  props,\n  setProps,\n}) => {\n  const updateInProps = (k, v) => {\n    const newProps = {\n      ...props,\n    };\n    // NaN evaluates as false, so if NaN take 0\n    newProps[k] = parseInt(v, 10) || 0;\n    setProps(newProps);\n  };\n\n  return (\n    <Form className=\"settings-form\">\n      <Grid doubling textAlign=\"right\" columns={3}>\n        {Object.entries(props).map(([k, v]) => (\n          <Grid.Column key={k}>\n            <Form.Input\n              inline\n              min={0}\n              type=\"number\"\n              label={k}\n              value={v}\n              onChange={(e) => updateInProps(k, e.target.value)}\n            />\n          </Grid.Column>\n        ))}\n      </Grid>\n    </Form>\n  );\n};\n\nconst Settings = ({\n  simulator,\n}) => {\n  const [setup, setSetup] = useState({});\n  const [model, setModel] = useState({});\n  const [scrambling, setScrambling] = useState({});\n  const [saved, setSaved] = useState({});\n\n  useEffect(() => {\n    const { mapSetup, mapModel, mapScrambling } = loadStoredConfig(simulator);\n    setSetup(mapSetup);\n    setModel(mapModel);\n    setScrambling(mapScrambling);\n    setSaved({\n      setup: mapSetup,\n      model: mapModel,\n      scrambling: mapScrambling,\n    });\n  }, [simulator]);\n\n  const loadConfig = () => {\n    const newConfig = { setup, model, scrambling };\n    simulator.loadConfig(\n      asMap(simulator.MapStringInt, setup),\n      asMap(simulator.MapStringInt, model),\n      asMap(simulator.MapStringInt, scrambling),\n    );\n    setSaved(newConfig);\n    storeConfig(newConfig);\n  }\n\n  const seHasChanges = !_.isEqual(saved.setup, setup);\n  const mHasChanges = !_.isEqual(saved.model, model);\n  const scHasChanges = !_.isEqual(saved.scrambling, scrambling);\n  const hasAnyChange = seHasChanges || mHasChanges || scHasChanges;\n\n  /* eslint-disable jsx-a11y/anchor-is-valid */\n  return (\n    <div>\n      <Header>\n        Simulator settings\n      </Header>\n      <Message color=\"violet\">\n        All values are unsigned integers.\n        <br />\n        All times are expressed in seconds.\n      </Message>\n      <Menu attached=\"top\" pointing color=\"violet\">\n        <Link to=\"\" getProps={isExactlyActive}>\n          Setup\n          {' '}\n          {seHasChanges ? '*' : ''}\n        </Link>\n        <Link to=\"model\" getProps={isPartiallyActive}>\n          Model parameters\n          {' '}\n          {mHasChanges ? '*' : ''}\n        </Link>\n        <Link to=\"scrambling\" getProps={isPartiallyActive}>\n          Scrambling costs\n          {' '}\n          {scHasChanges ? '*' : ''}\n        </Link>\n        <DropdownMenu\n          saveAction={loadConfig}\n          hasChanges={hasAnyChange}\n        />\n      </Menu>\n      <Segment attached=\"bottom\">\n        <Router>\n          <SettingsPanel\n            path=\"/\"\n            default\n            simulator={simulator}\n            props={setup}\n            setProps={setSetup}\n          />\n          <SettingsPanel\n            path=\"/model\"\n            simulator={simulator}\n            props={model}\n            setProps={setModel}\n          />\n          <SettingsPanel\n            path=\"/scrambling\"\n            simulator={simulator}\n            props={scrambling}\n            setProps={setScrambling}\n          />\n        </Router>\n      </Segment>\n    </div>\n  )\n};\n\nexport default Settings;\n","import React, { useState, useEffect } from 'react';\nimport {\n  Form, Button, Modal,\n} from 'semantic-ui-react';\n\nimport { setInt } from '../utils';\n\nconst generateRandomArray = (min, max, size) => Array.from(Array(size))\n  .map(() => Math.floor(Math.random() * (max - min + 1)) + min);\n\nconst ModalGenRandom = ({\n  times,\n  setTimes,\n  OpenButton,\n}) => {\n  const [open, setOpenValue] = useState(false);\n  const [generated, setGenerated] = useState([]);\n  const [min, setMin] = useState(10);\n  const [max, setMax] = useState(15);\n  const [amount, setAmount] = useState(20);\n\n  const setOpen = () => setOpenValue(true);\n  const setClose = () => setOpenValue(false);\n  const error = min > max ? {\n    content: 'Max must be greater than min',\n  } : null;\n\n  const generateAndAppend = () => setGenerated([\n    ...generated,\n    ...generateRandomArray(min, max, amount),\n  ]);\n\n  useEffect(() => setGenerated(times), [times]);\n\n  return (\n    <>\n      {OpenButton ? (\n        <OpenButton onClick={setOpen} />\n      ) : (\n        <Button primary onClick={setOpen}>Generate group</Button>\n      )}\n      <Modal open={open} centered={false} onClose={setClose}>\n        <Modal.Header>Generate competitors for group</Modal.Header>\n        <Modal.Content>\n          <p>\n            Use this form to generate a random population for the group.\n            Each number represents the average time of one competitor,\n            therefore if you want 20 competitors in the group you need to\n            generate 20 numbers.\n          </p>\n          <p>\n            There are\n            {' '}\n            {generated.length}\n            {' '}\n            competitors in the group currently:\n            <br />\n            <code>\n              {generated.join(', ')}\n            </code>\n            <br />\n            The form below let you add some randomly generated number within\n            {' '}\n            <em>min</em>\n            {' '}\n            and\n            {' '}\n            <em>max</em>\n            .\n          </p>\n          <Form>\n            <Form.Input\n              inline\n              min={1}\n              type=\"number\"\n              label=\"Min\"\n              value={min}\n              onChange={(e) => setInt(e, setMin, min)}\n            />\n            <Form.Input\n              inline\n              min={1}\n              type=\"number\"\n              label=\"Max\"\n              value={max}\n              error={error}\n              onChange={(e) => setInt(e, setMax, max)}\n            />\n            <Form.Input\n              inline\n              min={1}\n              type=\"number\"\n              label=\"Amount\"\n              value={amount}\n              onChange={(e) => setInt(e, setAmount, amount)}\n            />\n            <Button\n              color=\"violet\"\n              disabled={!!error}\n              content=\"Generate and append\"\n              onClick={generateAndAppend}\n            />\n            <Button\n              basic\n              negative\n              content=\"Clear times\"\n              onClick={() => setGenerated([])}\n            />\n          </Form>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button.Group>\n            <Button\n              positive\n              onClick={() => { setTimes(generated); setClose(); }}\n              content=\"Save\"\n            />\n            <Button.Or />\n            <Button color=\"black\" onClick={setClose} content=\"Discard\" />\n          </Button.Group>\n        </Modal.Actions>\n      </Modal>\n    </>\n  );\n};\n\nexport default ModalGenRandom;\n","import React, { useState } from 'react';\nimport {\n  Button, Segment,\n} from 'semantic-ui-react';\nimport ModalGenRandom from '../GroupGeneration/ModalGenRandom';\n\nconst TimesDetail = ({\n  times,\n  setTimes,\n}) => {\n  const [open, setOpen] = useState(false);\n  const OpenButton = ({ onClick }) => (\n    <Button\n      color=\"violet\"\n      content=\"Set group times\"\n      onClick={onClick}\n      compact\n    />\n  );\n\n  return (\n    <div className=\"times-details\">\n      <ModalGenRandom\n        times={times}\n        setTimes={setTimes}\n        OpenButton={OpenButton}\n      />\n      <Button onClick={() => setOpen(!open)} compact>\n        {open ? (\n          <>Hide details.</>\n        ) : (\n          <>Show average times.</>\n        )}\n      </Button>\n      {open && (\n        <Segment>\n          <code>\n            {times.join(', ')}\n          </code>\n        </Segment>\n      )}\n    </div>\n  );\n};\n\nexport default TimesDetail;\n","import React from 'react';\nimport { Dropdown } from 'semantic-ui-react';\n\n/* eslint-disable react/jsx-props-no-spreading */\nconst GenericPicker = ({\n  val,\n  setVal,\n  options,\n  ...props\n}) => (\n  <Dropdown\n    {...props}\n    value={val}\n    onChange={(e, { value }) => setVal(value)}\n    options={options}\n  />\n);\n\nexport default GenericPicker;\n","const events = [\n  {\n    id: '333',\n    name: '3x3x3 Cube',\n    preferred_format: 'a',\n    rank: 10,\n  },\n  {\n    id: '222',\n    name: '2x2x2 Cube',\n    preferred_format: 'a',\n    rank: 20,\n  },\n  {\n    id: '444',\n    name: '4x4x4 Cube',\n    preferred_format: 'a',\n    rank: 30,\n  },\n  {\n    id: '555',\n    name: '5x5x5 Cube',\n    preferred_format: 'a',\n    rank: 40,\n  },\n  {\n    id: '666',\n    name: '6x6x6 Cube',\n    preferred_format: 'm',\n    rank: 50,\n  },\n  {\n    id: '777',\n    name: '7x7x7 Cube',\n    preferred_format: 'm',\n    rank: 60,\n  },\n  {\n    id: '333bf',\n    name: '3x3x3 Blindfolded',\n    preferred_format: '3',\n    rank: 70,\n  },\n  {\n    id: '333fm',\n    name: '3x3x3 Fewest Moves',\n    preferred_format: 'm',\n    rank: 80,\n  },\n  {\n    id: '333oh',\n    name: '3x3x3 One-Handed',\n    preferred_format: 'a',\n    rank: 90,\n  },\n  {\n    id: 'clock',\n    name: 'Clock',\n    preferred_format: 'a',\n    rank: 110,\n  },\n  {\n    id: 'minx',\n    name: 'Megaminx',\n    preferred_format: 'a',\n    rank: 120,\n  },\n  {\n    id: 'pyram',\n    name: 'Pyraminx',\n    preferred_format: 'a',\n    rank: 130,\n  },\n  {\n    id: 'skewb',\n    name: 'Skewb',\n    preferred_format: 'a',\n    rank: 140,\n  },\n  {\n    id: 'sq1',\n    name: 'Square-1',\n    preferred_format: 'a',\n    rank: 150,\n  },\n  {\n    id: '444bf',\n    name: '4x4x4 Blindfolded',\n    preferred_format: '3',\n    rank: 160,\n  },\n  {\n    id: '555bf',\n    name: '5x5x5 Blindfolded',\n    preferred_format: '3',\n    rank: 170,\n  },\n  {\n    id: '333mbf',\n    name: '3x3x3 Multi-Blind',\n    preferred_format: '3',\n    rank: 180,\n  },\n  {\n    id: '333ft',\n    name: '3x3x3 With Feet',\n    preferred_format: 'a',\n    rank: 996,\n  },\n  {\n    id: 'magic',\n    name: 'Magic',\n    preferred_format: 'a',\n    rank: 997,\n  },\n  {\n    id: 'mmagic',\n    name: 'Master Magic',\n    preferred_format: 'a',\n    rank: 998,\n  },\n  {\n    id: '333mbo',\n    name: '3x3x3 Multi-Blind Old Style',\n    preferred_format: '3',\n    rank: 999,\n  },\n];\n\nconst byId = {\n};\n\nevents.forEach((e) => { byId[e.id] = e; });\n\nexport default {\n  official: events.filter((e) => e.rank < 900),\n  forSimulation: events.filter((e) => e.rank < 900 && !['333fm', '333mbf'].includes(e.id)),\n  byId,\n};\n","import React from 'react';\n\nimport GenericPicker from './Generic';\nimport events from '../data/events';\n\nconst eventsForSimu = events.forSimulation.map((e) => ({\n  text: e.name,\n  key: e.id,\n  value: e.id,\n}));\n\n/* eslint-disable react/jsx-props-no-spreading */\nconst EventPicker = ({\n  event,\n  setEvent,\n  ...props\n}) => (\n  <GenericPicker\n    {...props}\n    val={event}\n    setVal={setEvent}\n    options={eventsForSimu}\n  />\n);\n\nexport default EventPicker;\n","export const availableModels = ['Runners', 'JudgesRun'];\nexport const defaultModel = availableModels[0];\nexport const defaultEvent = '333';\n","import React from 'react';\n\nimport { availableModels } from '../data/simu';\nimport GenericPicker from './Generic';\n\nconst modelOptions = availableModels.map((m) => ({\n  text: m,\n  key: m,\n  value: m,\n}));\n\n/* eslint-disable react/jsx-props-no-spreading */\nconst ModelPicker = ({\n  model,\n  setModel,\n  ...props\n}) => (\n  <GenericPicker\n    {...props}\n    val={model}\n    setVal={setModel}\n    options={modelOptions}\n  />\n);\n\nexport default ModelPicker;\n","import React, { useState } from 'react';\nimport {\n  Button, Header, Input,\n} from 'semantic-ui-react';\nimport { asVector } from '@viroulep/group-simulator';\nimport EventPicker from '../Pickers/Event';\nimport ModelPicker from '../Pickers/Model';\nimport { timeToString, setInt } from '../utils';\nimport { defaultModel, defaultEvent } from '../data/simu';\n\nconst QuickOpt = ({\n  simulator,\n  times,\n}) => {\n  const [event, setEvent] = useState(defaultEvent);\n  const [model, setModel] = useState(defaultModel);\n  const [message, setMessage] = useState('');\n  const [maxStations, setMaxStations] = useState(10);\n  const [maxStaff, setMaxStaff] = useState(14);\n\n  const runSimulation = () => {\n    const timesVec = asVector(simulator.VectorTime, times);\n    // We'll just use the default config with no override!\n    const localOverride = new simulator.MapStringInt();\n    const {\n      Err, BestResult, Judges, Runners, Scramblers,\n    } = simulator.optimizeStaff(\n      event, timesVec, maxStations, maxStaff, localOverride, model,\n    );\n    if (Err !== simulator.ErrorKind.SUCCESS) {\n      setMessage(\n        `An error occurred during the simulation: ${simulator.errorMessage(Err)}`,\n      );\n    } else {\n      const strResult = `The best group took ${timeToString(BestResult)},`;\n      const strStaff = `using ${Judges} judges, ${Scramblers} scramblers, and ${Runners} runners. `;\n      setMessage(`${strResult} ${strStaff}`);\n    }\n  };\n\n  return (\n    <>\n      <Header>\n        Quick staff optimizer\n      </Header>\n      <div className=\"opt-content\">\n        <div className=\"inputs\">\n          <Input\n            min={3}\n            type=\"number\"\n            label=\"Total staff\"\n            value={maxStaff}\n            onChange={(e) => setInt(e, setMaxStaff, maxStaff)}\n          />\n          <Input\n            min={1}\n            type=\"number\"\n            label=\"Stations\"\n            value={maxStations}\n            onChange={(e) => setInt(e, setMaxStations, maxStations)}\n          />\n        </div>\n        <p>\n          Given I have\n          {' '}\n          {maxStaff}\n          {' '}\n          staff and at most\n          {' '}\n          {maxStations}\n          {' '}\n          stations available, I want to get the shortest time for this group.\n        </p>\n        <div>\n          This group is for\n          {' '}\n          <EventPicker event={event} setEvent={setEvent} inline scrolling />\n          {' '}\n          and my staff will be using the\n          {' '}\n          <ModelPicker model={model} setModel={setModel} inline />\n          {' '}\n          system throughout the group.\n        </div>\n      </div>\n      <Button\n        primary\n        className=\"run-simu\"\n        content=\"Run it!\"\n        onClick={runSimulation}\n      />\n      <p>\n        {message}\n      </p>\n    </>\n  );\n};\n\nexport default QuickOpt;\n","import React, { useState } from 'react';\nimport {\n  Button, Header, Message,\n} from 'semantic-ui-react';\nimport { asVector } from '@viroulep/group-simulator';\nimport EventPicker from '../Pickers/Event';\nimport ModelPicker from '../Pickers/Model';\nimport { timeToString } from '../utils';\nimport { defaultModel, defaultEvent } from '../data/simu';\n\nconst QuickSimu = ({\n  simulator,\n  times,\n}) => {\n  const [event, setEvent] = useState(defaultEvent);\n  const [model, setModel] = useState(defaultModel);\n  const [message, setMessage] = useState('');\n\n  const runSimulation = () => {\n    const timesVec = asVector(simulator.VectorTime, times);\n    // We'll just use the default config with no override!\n    const localOverride = new simulator.MapStringInt();\n    const { Err, Value } = simulator.simuGroup(event, timesVec, localOverride, model);\n    if (Err !== simulator.ErrorKind.SUCCESS) {\n      setMessage(\n        `An error occurred during the simulation: ${simulator.errorMessage(Err)}`,\n      );\n    } else {\n      setMessage(`The group took ${timeToString(Value)}.`);\n    }\n  };\n\n  return (\n    <>\n      <Header>\n        Quick group simulation\n      </Header>\n      <Message\n        compact\n        color=\"brown\"\n      >\n        You can adjust the number of judges/scramblers/runners,\n        as well as the miscramble or extra rate in the settings.\n      </Message>\n      <div>\n        I want to simulate this group for\n        {' '}\n        <EventPicker event={event} setEvent={setEvent} inline scrolling />\n        {' '}\n        and my staff will be using the\n        {' '}\n        <ModelPicker model={model} setModel={setModel} inline />\n        {' '}\n        system throughout the group.\n      </div>\n      <Button\n        primary\n        className=\"run-simu\"\n        content=\"Run it!\"\n        onClick={runSimulation}\n      />\n      <p>\n        {message}\n      </p>\n    </>\n  );\n};\n\nexport default QuickSimu;\n","import React, { useState } from 'react';\nimport {\n  Header,\n} from 'semantic-ui-react';\nimport TimesDetail from './TimesDetail';\nimport QuickOpt from './QuickOpt';\nimport QuickSimu from './QuickSimu';\nimport './QuickRun.scss';\n\n// Poor man's database\nlet savedTimes = [];\n\nconst QuickRunPage = ({\n  simulator,\n}) => {\n  const [times, setTimes] = useState(savedTimes);\n  const setPersistedTimes = (array) => {\n    savedTimes = array;\n    setTimes(array);\n  };\n\n  return (\n    <>\n      <Header>\n        Group setup\n      </Header>\n      <div>\n        There are currently\n        {' '}\n        {times.length}\n        {' '}\n        competitors in the group.\n        <TimesDetail times={times} setTimes={setPersistedTimes} />\n      </div>\n      <QuickSimu simulator={simulator} times={times} />\n      <QuickOpt simulator={simulator} times={times} />\n    </>\n  );\n};\n\nexport default QuickRunPage;\n","import React, { useState, useEffect } from 'react';\nimport {\n  Button, Container, Message, Icon,\n} from 'semantic-ui-react';\nimport { getSimu } from '@viroulep/group-simulator';\nimport { Router } from '@reach/router';\n\nimport './App.css';\nimport Navigation from './Navigation/Navigation';\nimport Settings from './Settings/Settings';\nimport QuickRunPage from './Simulation/QuickRun';\nimport { loadStoredConfig } from './utils';\nimport {\n  signOut,\n  setOauthToken,\n  loginUser,\n  setRemoteIfNeeded,\n} from './wca/api';\nimport { isStaging } from './wca/routes';\n\n// https://github.com/rafrex/spa-github-pages\n\nconst LoadingMessage = () => (\n  <>\n    <Message.Header>Loading required content</Message.Header>\n    Please wait while the page is loading a required module.\n  </>\n);\n\nconst FailureMessage = () => (\n  <>\n    <p>\n      The loading of the module timed out.\n      It&pos;s likely that there was an error and that your browser does not support WebAssembly.\n    </p>\n\n    <p>\n      This module is necessary for this application, it is pointless to show\n      you anything more than this error message at this point.\n      <br />\n      Feel free to check this website to make sure your browser is supported.\n    </p>\n    <Button\n      href=\"https://caniuse.com/#feat=wasm\"\n      target=\"_blank\"\n      secondary\n    >\n      Check browser compatibility\n    </Button>\n  </>\n);\n\n// Use dismissable with wasm: info loading, green loaded, red timeout!\nconst LoadingWasm = ({\n  simulator,\n  loading,\n}) => (\n  <>\n    {!simulator && (\n      <Message\n        icon\n        color={loading ? 'teal' : 'red'}\n      >\n        {loading && (\n          <Icon name=\"circle notched\" loading />\n        )}\n        <Message.Content>\n          {loading ? (\n            <LoadingMessage />\n          ) : (\n            <FailureMessage />\n          )}\n        </Message.Content>\n      </Message>\n    )}\n  </>\n);\n\nconst Home = () => (\n  <div>\n    This page is a work in progress and most likely won&apos;t do what you expect.\n    <br />\n    You should not use it.\n    <br />\n    Come back later.\n  </div>\n);\n\nconst NotFound = () => <p>Oups, it&apos;s a 404</p>;\n\nconst getOauthTokenIfAny = () => {\n  const hash = window.location.hash.replace(/^#/, '');\n  const hashParams = new URLSearchParams(hash);\n  if (hashParams.has('access_token')) {\n    window.location.hash = '';\n    setOauthToken(hashParams.get('access_token'));\n  }\n};\n\nfunction App() {\n  const [simulator, setSimulator] = useState(undefined);\n  const [loading, setLoading] = useState(true);\n  const [userLoading, setUserLoading] = useState(false);\n  const [currentUser, setCurrentUser] = useState(null);\n\n  const loadWasm = async () => {\n    const wasm = getSimu(() => { setSimulator(wasm); setLoading(false) });\n  };\n\n  // Pass '[]' as a dependency, so that it's ran just once.\n  useEffect(() => {\n    loadWasm();\n    setRemoteIfNeeded();\n    getOauthTokenIfAny();\n    loginUser(setCurrentUser, setUserLoading);\n    // Register a timeout on the loading process\n    setTimeout(() => setLoading(false), 3000);\n  }, []);\n\n  useEffect(() => { loadStoredConfig(simulator); }, [simulator]);\n\n  const signOutAction = () => {\n    signOut();\n    setCurrentUser(null);\n  };\n\n  return (\n    <Container>\n      <LoadingWasm simulator={simulator} loading={loading} />\n      {simulator && (\n        <>\n          <Navigation\n            user={currentUser}\n            userLoading={userLoading}\n            signOut={signOutAction}\n          />\n          {isStaging() && (\n            <Message size=\"small\">\n              You&apos;re not currently using the WCA&apos;s production data.\n            </Message>\n          )}\n          <Router basepath={process.env.PUBLIC_URL}>\n            <Home path=\"/\" />\n            <Settings simulator={simulator} path=\"settings/*\" />\n            <QuickRunPage simulator={simulator} path=\"/quick-simu\" />\n            <NotFound default />\n          </Router>\n        </>\n      )}\n    </Container>\n  );\n}\n\nexport default App;\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'fomantic-ui-css/semantic.css';\n\n// NOTE:\n// import { Link } from 'react-router-dom'\n// import { Button } from 'semantic-ui-react'\n\n// // 💡 `to` prop is not handled in `Button` and will be passed to `Link` component\n// <Button as={Link} to=\"/home\">\n// To homepage\n// </Button>\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}