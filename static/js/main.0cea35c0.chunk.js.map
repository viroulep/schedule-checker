{"version":3,"sources":["Navigation/ItemLink.js","Navigation/Navigation.js","utils/index.js","GroupGeneration/ModalGenRandom.js","Simulation/TimesDetail.js","Pickers/Generic.js","data/events.js","Pickers/Event.js","data/simu.js","Pickers/Model.js","Simulation/QuickOpt.js","Simulation/QuickSimu.js","Simulation/QuickRun.js","App.js","serviceWorker.js","index.js"],"names":["ItemLink","prefixed","exact","to","Navigation","Menu","pointing","secondary","integerDivision","x","y","result","Math","floor","remainder","timeToString","time","hour","join","setInt","e","set","def","parseInt","target","value","ModalGenRandom","times","setTimes","OpenButton","useState","open","setOpenValue","generated","setGenerated","min","setMin","max","setMax","amount","setAmount","setOpen","setClose","error","content","useEffect","onClick","Button","primary","Modal","centered","onClose","Header","Content","length","Form","Input","inline","type","label","onChange","color","disabled","size","Array","from","map","random","generateRandomArray","basic","negative","Actions","Group","positive","Or","TimesDetail","className","compact","Segment","GenericPicker","val","setVal","options","props","Dropdown","events","id","name","preferred_format","rank","byId","forEach","eventsForSimu","official","filter","forSimulation","includes","text","key","EventPicker","event","setEvent","Generic","availableModels","defaultModel","modelOptions","m","ModelPicker","model","setModel","QuickOpt","simulator","message","setMessage","maxStations","setMaxStations","maxStaff","setMaxStaff","Event","upward","Model","timesVec","asVector","VectorTime","localOverride","MapStringInt","optimizeStaff","Err","BestResult","Judges","Runners","Scramblers","ErrorKind","SUCCESS","errorMessage","strResult","strStaff","QuickSimu","Message","simuGroup","Value","savedTimes","QuickRunPage","array","LoadingMessage","FailureMessage","href","LoadingWasm","loading","icon","Icon","App","undefined","setSimulator","setLoading","loadWasm","a","wasm","getSimu","setTimeout","Container","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"6eA+BeA,G,KAdE,SAAC,GAAD,EACfC,SADe,EAEfC,MAFe,EAGfC,GAHe,2CCLFC,EARI,kBACjB,kBAACC,EAAA,EAAD,CAAMC,UAAQ,EAACC,WAAS,GACtB,kBAAC,EAAD,CAAUL,OAAK,EAACD,UAAQ,EAACE,GAAG,KAA5B,QACA,kBAAC,EAAD,CAAUF,UAAQ,EAACE,GAAG,aAAtB,YACA,kBAAC,EAAD,CAAUF,UAAQ,EAACE,GAAG,eAAtB,sB,+ECLEK,EAAkB,SAACC,EAAGC,GAAJ,MAAW,CACjCC,OAAQC,KAAKC,MAAMJ,EAAIC,GACvBI,UAAWL,EAAIC,IAGJK,EAAe,SAACC,GAAU,IAAD,EACRR,EAAgBQ,EARzB,MAQbL,EAD8B,EAC9BA,OAAQG,EADsB,EACtBA,UACRG,EAAON,EAFuB,EAGXH,EAAgBM,EAXpB,IAerB,OAJGH,EAHiC,EAGjCA,OAAQG,EAHyB,EAGzBA,UAIJ,CAHSG,EAAO,EAAP,UAAcA,EAAd,UAA6B,GAC9BN,EAAS,EAAT,UAAgBA,EAAhB,YAAmC,GACtC,UAAMG,EAAN,aACqBI,KAAK,MAG3BC,EAAS,SAACC,EAAGC,EAAKC,GAAT,OAAiBD,EAAIE,SAASH,EAAEI,OAAOC,MAAO,KAAOH,IC4G5DI,EApHQ,SAAC,GAIjB,IAHLC,EAGI,EAHJA,MACAC,EAEI,EAFJA,SACAC,EACI,EADJA,WACI,EACyBC,oBAAS,GADlC,mBACGC,EADH,KACSC,EADT,OAE8BF,mBAAS,IAFvC,mBAEGG,EAFH,KAEcC,EAFd,OAGkBJ,mBAAS,IAH3B,mBAGGK,EAHH,KAGQC,EAHR,OAIkBN,mBAAS,IAJ3B,mBAIGO,EAJH,KAIQC,EAJR,OAKwBR,mBAAS,IALjC,mBAKGS,EALH,KAKWC,EALX,KAOEC,EAAU,kBAAMT,GAAa,IAC7BU,EAAW,kBAAMV,GAAa,IAC9BW,EAAQR,EAAME,EAAM,CACxBO,QAAS,gCACP,KASJ,OAFAC,qBAAU,kBAAMX,EAAaP,KAAQ,CAACA,IAGpC,oCACGE,EACC,kBAACA,EAAD,CAAYiB,QAASL,IAErB,kBAACM,EAAA,EAAD,CAAQC,SAAO,EAACF,QAASL,GAAzB,kBAEF,kBAACQ,EAAA,EAAD,CAAOlB,KAAMA,EAAMmB,UAAU,EAAOC,QAAST,GAC3C,kBAACO,EAAA,EAAMG,OAAP,uCACA,kBAACH,EAAA,EAAMI,QAAP,KACE,yOAMA,uCAEG,IACApB,EAAUqB,OACV,IAJH,sCAME,6BACA,8BACGrB,EAAUf,KAAK,OAElB,6BAVF,mEAYG,IACD,mCACC,IAdH,MAgBG,IACD,mCAjBF,KAoBA,kBAACqC,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,MAAN,CACEC,QAAM,EACNtB,IAAK,EACLuB,KAAK,SACLC,MAAM,MACNlC,MAAOU,EACPyB,SAAU,SAACxC,GAAD,OAAOD,EAAOC,EAAGgB,EAAQD,MAErC,kBAACoB,EAAA,EAAKC,MAAN,CACEC,QAAM,EACNtB,IAAK,EACLuB,KAAK,SACLC,MAAM,MACNlC,MAAOY,EACPM,MAAOA,EACPiB,SAAU,SAACxC,GAAD,OAAOD,EAAOC,EAAGkB,EAAQD,MAErC,kBAACkB,EAAA,EAAKC,MAAN,CACEC,QAAM,EACNtB,IAAK,EACLuB,KAAK,SACLC,MAAM,SACNlC,MAAOc,EACPqB,SAAU,SAACxC,GAAD,OAAOD,EAAOC,EAAGoB,EAAWD,MAExC,kBAACQ,EAAA,EAAD,CACEc,MAAM,SACNC,WAAYnB,EACZC,QAAQ,sBACRE,QAzEc,kBAAMZ,EAAa,GAAD,mBACvCD,GADuC,YApBlB,SAACE,EAAKE,EAAK0B,GAAX,OAAoBC,MAAMC,KAAKD,MAAMD,IAC9DG,KAAI,kBAAMtD,KAAKC,MAAMD,KAAKuD,UAAY9B,EAAMF,EAAM,IAAMA,KAqBpDiC,CAAoBjC,EAAKE,EAAKE,SAyEzB,kBAACQ,EAAA,EAAD,CACEsB,OAAK,EACLC,UAAQ,EACR1B,QAAQ,cACRE,QAAS,kBAAMZ,EAAa,SAIlC,kBAACe,EAAA,EAAMsB,QAAP,KACE,kBAACxB,EAAA,EAAOyB,MAAR,KACE,kBAACzB,EAAA,EAAD,CACE0B,UAAQ,EACR3B,QAAS,WAAQlB,EAASK,GAAYS,KACtCE,QAAQ,SAEV,kBAACG,EAAA,EAAO2B,GAAR,MACA,kBAAC3B,EAAA,EAAD,CAAQc,MAAM,QAAQf,QAASJ,EAAUE,QAAQ,iBCzE9C+B,EAvCK,SAAC,GAGd,IAFLhD,EAEI,EAFJA,MACAC,EACI,EADJA,SACI,EACoBE,oBAAS,GAD7B,mBACGC,EADH,KACSU,EADT,KAWJ,OACE,yBAAKmC,UAAU,iBACb,kBAAC,EAAD,CACEjD,MAAOA,EACPC,SAAUA,EACVC,WAda,SAAC,GAAD,IAAGiB,EAAH,EAAGA,QAAH,OACjB,kBAACC,EAAA,EAAD,CACEc,MAAM,SACNjB,QAAQ,kBACRE,QAASA,EACT+B,SAAO,OAWP,kBAAC9B,EAAA,EAAD,CAAQD,QAAS,kBAAML,GAASV,IAAO8C,SAAO,GAC3C9C,EACC,qDAEA,4DAGHA,GACC,kBAAC+C,EAAA,EAAD,KACE,8BACGnD,EAAMT,KAAK,U,kBCnBT6D,EAdO,SAAC,GAAD,IACpBC,EADoB,EACpBA,IACAC,EAFoB,EAEpBA,OACAC,EAHoB,EAGpBA,QACGC,EAJiB,iDAMpB,kBAACC,EAAA,EAAD,iBACMD,EADN,CAEE1D,MAAOuD,EACPpB,SAAU,SAACxC,EAAD,OAAMK,EAAN,EAAMA,MAAN,OAAkBwD,EAAOxD,IACnCyD,QAASA,MCdPG,EAAS,CACb,CACEC,GAAI,MACJC,KAAM,aACNC,iBAAkB,IAClBC,KAAM,IAER,CACEH,GAAI,MACJC,KAAM,aACNC,iBAAkB,IAClBC,KAAM,IAER,CACEH,GAAI,MACJC,KAAM,aACNC,iBAAkB,IAClBC,KAAM,IAER,CACEH,GAAI,MACJC,KAAM,aACNC,iBAAkB,IAClBC,KAAM,IAER,CACEH,GAAI,MACJC,KAAM,aACNC,iBAAkB,IAClBC,KAAM,IAER,CACEH,GAAI,MACJC,KAAM,aACNC,iBAAkB,IAClBC,KAAM,IAER,CACEH,GAAI,QACJC,KAAM,oBACNC,iBAAkB,IAClBC,KAAM,IAER,CACEH,GAAI,QACJC,KAAM,qBACNC,iBAAkB,IAClBC,KAAM,IAER,CACEH,GAAI,QACJC,KAAM,mBACNC,iBAAkB,IAClBC,KAAM,IAER,CACEH,GAAI,QACJC,KAAM,QACNC,iBAAkB,IAClBC,KAAM,KAER,CACEH,GAAI,OACJC,KAAM,WACNC,iBAAkB,IAClBC,KAAM,KAER,CACEH,GAAI,QACJC,KAAM,WACNC,iBAAkB,IAClBC,KAAM,KAER,CACEH,GAAI,QACJC,KAAM,QACNC,iBAAkB,IAClBC,KAAM,KAER,CACEH,GAAI,MACJC,KAAM,WACNC,iBAAkB,IAClBC,KAAM,KAER,CACEH,GAAI,QACJC,KAAM,oBACNC,iBAAkB,IAClBC,KAAM,KAER,CACEH,GAAI,QACJC,KAAM,oBACNC,iBAAkB,IAClBC,KAAM,KAER,CACEH,GAAI,SACJC,KAAM,oBACNC,iBAAkB,IAClBC,KAAM,KAER,CACEH,GAAI,QACJC,KAAM,kBACNC,iBAAkB,IAClBC,KAAM,KAER,CACEH,GAAI,QACJC,KAAM,QACNC,iBAAkB,IAClBC,KAAM,KAER,CACEH,GAAI,SACJC,KAAM,eACNC,iBAAkB,IAClBC,KAAM,KAER,CACEH,GAAI,SACJC,KAAM,8BACNC,iBAAkB,IAClBC,KAAM,MAIJC,EAAO,GAGbL,EAAOM,SAAQ,SAACvE,GAAQsE,EAAKtE,EAAEkE,IAAMlE,KAEtB,ICjITwE,EDiIS,CACbC,SAAUR,EAAOS,QAAO,SAAC1E,GAAD,OAAOA,EAAEqE,KAAO,OACxCM,cAAeV,EAAOS,QAAO,SAAC1E,GAAD,OAAOA,EAAEqE,KAAO,MAAQ,CAAC,QAAS,UAAUO,SAAS5E,EAAEkE,OACpFI,QCpI2BK,cAAc7B,KAAI,SAAC9C,GAAD,MAAQ,CACrD6E,KAAM7E,EAAEmE,KACRW,IAAK9E,EAAEkE,GACP7D,MAAOL,EAAEkE,OAiBIa,EAbK,SAAC,GAAD,IAClBC,EADkB,EAClBA,MACAC,EAFkB,EAElBA,SACGlB,EAHe,2CAKlB,kBAACmB,EAAD,iBACMnB,EADN,CAEEH,IAAKoB,EACLnB,OAAQoB,EACRnB,QAASU,MCrBAW,EAAkB,CAAC,UAAW,aAC9BC,EAAeD,EAAgB,GCItCE,EAAeF,EAAgBrC,KAAI,SAACwC,GAAD,MAAQ,CAC/CT,KAAMS,EACNR,IAAKQ,EACLjF,MAAOiF,MAiBMC,EAbK,SAAC,GAAD,IAClBC,EADkB,EAClBA,MACAC,EAFkB,EAElBA,SACG1B,EAHe,2CAKlB,kBAACmB,EAAD,iBACMnB,EADN,CAEEH,IAAK4B,EACL3B,OAAQ4B,EACR3B,QAASuB,MC6EEK,EAxFE,SAAC,GAGX,IAFLC,EAEI,EAFJA,UACApF,EACI,EADJA,MACI,EACsBG,mBFZA,OEWtB,mBACGsE,EADH,KACUC,EADV,OAEsBvE,mBAAS0E,GAF/B,mBAEGI,EAFH,KAEUC,EAFV,OAG0B/E,mBAAS,IAHnC,mBAGGkF,EAHH,KAGYC,EAHZ,OAIkCnF,mBAAS,IAJ3C,mBAIGoF,EAJH,KAIgBC,EAJhB,OAK4BrF,mBAAS,IALrC,mBAKGsF,EALH,KAKaC,EALb,KA2BJ,OACE,oCACE,kBAACjE,EAAA,EAAD,8BAGA,yBAAKwB,UAAU,eACb,yBAAKA,UAAU,UACb,kBAACpB,EAAA,EAAD,CACErB,IAAK,EACLuB,KAAK,SACLC,MAAM,cACNlC,MAAO2F,EACPxD,SAAU,SAACxC,GAAD,OAAOD,EAAOC,EAAGiG,EAAaD,MAE1C,kBAAC5D,EAAA,EAAD,CACErB,IAAK,EACLuB,KAAK,SACLC,MAAM,WACNlC,MAAOyF,EACPtD,SAAU,SAACxC,GAAD,OAAOD,EAAOC,EAAG+F,EAAgBD,OAG/C,0CAEG,IACAE,EACA,IAJH,oBAMG,IACAF,EACA,IARH,uEAWA,iDAEG,IACD,kBAACI,EAAD,CAAalB,MAAOA,EAAOC,SAAUA,EAAU5C,QAAM,EAAC8D,QAAQ,IAC7D,IAJH,iCAMG,IACD,kBAACC,EAAD,CAAaZ,MAAOA,EAAOC,SAAUA,EAAUpD,QAAM,IACpD,IARH,iCAYF,kBAACV,EAAA,EAAD,CACEC,SAAO,EACP4B,UAAU,WACVhC,QAAQ,UACRE,QArEgB,WACpB,IAAM2E,EAAWC,YAASX,EAAUY,WAAYhG,GAE1CiG,EAAgB,IAAIb,EAAUc,aAHV,EAMtBd,EAAUe,cACZ1B,EAAOqB,EAAUP,EAAaE,EAAUQ,EAAehB,GAFvDmB,EALwB,EAKxBA,IAAKC,EALmB,EAKnBA,WAAYC,EALO,EAKPA,OAAQC,EALD,EAKCA,QAASC,EALV,EAKUA,WAIpC,GAAIJ,IAAQhB,EAAUqB,UAAUC,QAC9BpB,EAAW,4CAAD,OACoCF,EAAUuB,aAAaP,SAEhE,CACL,IAAMQ,EAAS,8BAA0BxH,EAAaiH,GAAvC,KACTQ,EAAQ,gBAAYP,EAAZ,oBAA8BE,EAA9B,4BAA4DD,EAA5D,cACdjB,EAAW,GAAD,OAAIsB,EAAJ,YAAiBC,QAuD3B,2BACGxB,KCzBMyB,EAzDG,SAAC,GAGZ,IAFL1B,EAEI,EAFJA,UACApF,EACI,EADJA,MACI,EACsBG,mBHZA,OGWtB,mBACGsE,EADH,KACUC,EADV,OAEsBvE,mBAAS0E,GAF/B,mBAEGI,EAFH,KAEUC,EAFV,OAG0B/E,mBAAS,IAHnC,mBAGGkF,EAHH,KAGYC,EAHZ,KAmBJ,OACE,oCACE,kBAAC7D,EAAA,EAAD,+BAGA,kBAACsF,EAAA,EAAD,CACE7D,SAAO,EACPhB,MAAM,SAFR,2EAMA,iEAEG,IACD,kBAACyD,EAAD,CAAalB,MAAOA,EAAOC,SAAUA,EAAU5C,QAAM,IACpD,IAJH,iCAMG,IACD,kBAAC+D,EAAD,CAAaZ,MAAOA,EAAOC,SAAUA,EAAUpD,QAAM,IACpD,IARH,gCAWA,kBAACV,EAAA,EAAD,CACEC,SAAO,EACP4B,UAAU,WACVhC,QAAQ,UACRE,QAxCgB,WACpB,IAAM2E,EAAWC,YAASX,EAAUY,WAAYhG,GAE1CiG,EAAgB,IAAIb,EAAUc,aAHV,EAIHd,EAAU4B,UAAUvC,EAAOqB,EAAUG,EAAehB,GAAnEmB,EAJkB,EAIlBA,IAAKa,EAJa,EAIbA,MACTb,IAAQhB,EAAUqB,UAAUC,QAC9BpB,EAAW,4CAAD,OACoCF,EAAUuB,aAAaP,KAGrEd,EAAW,kBAAD,OAAmBlG,EAAa6H,GAAhC,SAgCV,2BACG5B,KCnDL6B,G,OAAa,IA8BFC,EA5BM,SAAC,GAEf,IADL/B,EACI,EADJA,UACI,EACsBjF,mBAAS+G,GAD/B,mBACGlH,EADH,KACUC,EADV,KAOJ,OACE,oCACE,kBAACwB,EAAA,EAAD,oBAGA,mDAEG,IACAzB,EAAM2B,OACN,IAJH,4BAME,kBAAC,EAAD,CAAa3B,MAAOA,EAAOC,SAhBP,SAACmH,GACzBF,EAAaE,EACbnH,EAASmH,OAgBP,kBAAC,EAAD,CAAWhC,UAAWA,EAAWpF,MAAOA,IACxC,kBAAC,EAAD,CAAUoF,UAAWA,EAAWpF,MAAOA,MCrBvCqH,EAAiB,kBACrB,oCACE,kBAACN,EAAA,EAAQtF,OAAT,iCADF,6DAMI6F,EAAiB,kBACrB,oCACE,+JAKA,6JAGE,6BAHF,2EAMA,kBAAClG,EAAA,EAAD,CACEmG,KAAK,iCACL1H,OAAO,SACPjB,WAAS,GAHX,iCAWE4I,EAAc,SAAC,GAAD,IAClBpC,EADkB,EAClBA,UACAqC,EAFkB,EAElBA,QAFkB,OAIlB,qCACIrC,GACA,kBAAC2B,EAAA,EAAD,CACEW,MAAI,EACJxF,MAAOuF,EAAU,OAAS,OAEzBA,GACC,kBAACE,EAAA,EAAD,CAAM/D,KAAK,iBAAiB6D,SAAO,IAErC,kBAACV,EAAA,EAAQrF,QAAT,KACG+F,EACC,kBAAC,EAAD,MAEA,kBAAC,EAAD,UAgDGG,MA5Bf,WAAgB,IAAD,EACqBzH,wBAAS0H,GAD9B,mBACNzC,EADM,KACK0C,EADL,OAEiB3H,oBAAS,GAF1B,mBAENsH,EAFM,KAEGM,EAFH,KAIPC,EAAQ,uCAAG,4BAAAC,EAAA,sDACTC,EAAOC,aAAQ,WAAQL,EAAaI,GAAOH,GAAW,MAD7C,2CAAH,qDAWd,OANA7G,qBAAU,WACR8G,IAEAI,YAAW,kBAAML,GAAW,KAAQ,OACnC,IAGD,kBAACM,EAAA,EAAD,KACE,kBAAC,EAAD,CAAajD,UAAWA,EAAWqC,QAASA,IAC3CrC,GACC,oCACE,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAcA,UAAWA,EAAWkD,KAAK,mBC1F/BC,QACW,cAA7BC,OAAOC,SAASC,UAEkB,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MAC1B,2D,OCHNC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,SDkHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAACC,GACLA,EAAaC,gBAEdC,OAAM,SAACtI,GACNuI,QAAQvI,MAAMA,EAAMqE,c","file":"static/js/main.0cea35c0.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\nimport { Link } from '@reach/router';\n\nconst itemProps = (active) => ({\n  className: cn('item', { active }),\n});\n\nconst isPartiallyActive = ({\n  isPartiallyCurrent,\n}) => itemProps(isPartiallyCurrent);\n\nconst isExactlyActive = ({\n  isCurrent,\n}) => itemProps(isCurrent);\n\n/* eslint-disable react/jsx-props-no-spreading */\nconst ItemLink = ({\n  prefixed,\n  exact,\n  to,\n  ...props\n}) => (\n  // 'prefixed' can be used for absolute navigation and make sure gh-pages work\n  <Link\n    to={prefixed ? `${process.env.PUBLIC_URL}${to}` : to}\n    {...props}\n    getProps={exact ? isExactlyActive : isPartiallyActive}\n  />\n);\n\nexport default ItemLink;\n","import React from 'react';\nimport { Menu } from 'semantic-ui-react'\nimport ItemLink from './ItemLink';\n\nconst Navigation = () => (\n  <Menu pointing secondary>\n    <ItemLink exact prefixed to=\"/\">Home</ItemLink>\n    <ItemLink prefixed to=\"/settings\">Settings</ItemLink>\n    <ItemLink prefixed to=\"/quick-simu\">Quick simulation</ItemLink>\n  </Menu>\n);\n\nexport default Navigation;\n","const SECS_IN_MINUTE = 60;\nconst SECS_IN_HOUR = 60 * SECS_IN_MINUTE;\n\nconst integerDivision = (x, y) => ({\n  result: Math.floor(x / y),\n  remainder: x % y,\n});\n\nexport const timeToString = (time) => {\n  let { result, remainder } = integerDivision(time, SECS_IN_HOUR);\n  const hour = result;\n  ({ result, remainder } = integerDivision(remainder, SECS_IN_MINUTE));\n  const hourStr = hour > 0 ? `${hour} hours` : '';\n  const minStr = result > 0 ? `${result} minutes` : '';\n  const secStr = `${remainder} seconds`;\n  return [hourStr, minStr, secStr].join(' ');\n};\n\nexport const setInt = (e, set, def) => set(parseInt(e.target.value, 10) || def);\n","import React, { useState, useEffect } from 'react';\nimport {\n  Form, Button, Modal,\n} from 'semantic-ui-react';\n\nimport { setInt } from '../utils';\n\nconst generateRandomArray = (min, max, size) => Array.from(Array(size))\n  .map(() => Math.floor(Math.random() * (max - min + 1)) + min);\n\nconst ModalGenRandom = ({\n  times,\n  setTimes,\n  OpenButton,\n}) => {\n  const [open, setOpenValue] = useState(false);\n  const [generated, setGenerated] = useState([]);\n  const [min, setMin] = useState(10);\n  const [max, setMax] = useState(15);\n  const [amount, setAmount] = useState(20);\n\n  const setOpen = () => setOpenValue(true);\n  const setClose = () => setOpenValue(false);\n  const error = min > max ? {\n    content: 'Max must be greater than min',\n  } : null;\n\n  const generateAndAppend = () => setGenerated([\n    ...generated,\n    ...generateRandomArray(min, max, amount),\n  ]);\n\n  useEffect(() => setGenerated(times), [times]);\n\n  return (\n    <>\n      {OpenButton ? (\n        <OpenButton onClick={setOpen} />\n      ) : (\n        <Button primary onClick={setOpen}>Generate group</Button>\n      )}\n      <Modal open={open} centered={false} onClose={setClose}>\n        <Modal.Header>Generate competitors for group</Modal.Header>\n        <Modal.Content>\n          <p>\n            Use this form to generate a random population for the group.\n            Each number represents the average time of one competitor,\n            therefore if you want 20 competitors in the group you need to\n            generate 20 numbers.\n          </p>\n          <p>\n            There are\n            {' '}\n            {generated.length}\n            {' '}\n            competitors in the group currently:\n            <br />\n            <code>\n              {generated.join(', ')}\n            </code>\n            <br />\n            The form below let you add some randomly generated number within\n            {' '}\n            <em>min</em>\n            {' '}\n            and\n            {' '}\n            <em>max</em>\n            .\n          </p>\n          <Form>\n            <Form.Input\n              inline\n              min={1}\n              type=\"number\"\n              label=\"Min\"\n              value={min}\n              onChange={(e) => setInt(e, setMin, min)}\n            />\n            <Form.Input\n              inline\n              min={1}\n              type=\"number\"\n              label=\"Max\"\n              value={max}\n              error={error}\n              onChange={(e) => setInt(e, setMax, max)}\n            />\n            <Form.Input\n              inline\n              min={1}\n              type=\"number\"\n              label=\"Amount\"\n              value={amount}\n              onChange={(e) => setInt(e, setAmount, amount)}\n            />\n            <Button\n              color=\"violet\"\n              disabled={!!error}\n              content=\"Generate and append\"\n              onClick={generateAndAppend}\n            />\n            <Button\n              basic\n              negative\n              content=\"Clear times\"\n              onClick={() => setGenerated([])}\n            />\n          </Form>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button.Group>\n            <Button\n              positive\n              onClick={() => { setTimes(generated); setClose(); }}\n              content=\"Save\"\n            />\n            <Button.Or />\n            <Button color=\"black\" onClick={setClose} content=\"Discard\" />\n          </Button.Group>\n        </Modal.Actions>\n      </Modal>\n    </>\n  );\n};\n\nexport default ModalGenRandom;\n","import React, { useState } from 'react';\nimport {\n  Button, Segment,\n} from 'semantic-ui-react';\nimport ModalGenRandom from '../GroupGeneration/ModalGenRandom';\n\nconst TimesDetail = ({\n  times,\n  setTimes,\n}) => {\n  const [open, setOpen] = useState(false);\n  const OpenButton = ({ onClick }) => (\n    <Button\n      color=\"violet\"\n      content=\"Set group times\"\n      onClick={onClick}\n      compact\n    />\n  );\n\n  return (\n    <div className=\"times-details\">\n      <ModalGenRandom\n        times={times}\n        setTimes={setTimes}\n        OpenButton={OpenButton}\n      />\n      <Button onClick={() => setOpen(!open)} compact>\n        {open ? (\n          <>Hide details.</>\n        ) : (\n          <>Show average times.</>\n        )}\n      </Button>\n      {open && (\n        <Segment>\n          <code>\n            {times.join(', ')}\n          </code>\n        </Segment>\n      )}\n    </div>\n  );\n};\n\nexport default TimesDetail;\n","import React from 'react';\nimport { Dropdown } from 'semantic-ui-react';\n\n/* eslint-disable react/jsx-props-no-spreading */\nconst GenericPicker = ({\n  val,\n  setVal,\n  options,\n  ...props\n}) => (\n  <Dropdown\n    {...props}\n    value={val}\n    onChange={(e, { value }) => setVal(value)}\n    options={options}\n  />\n);\n\nexport default GenericPicker;\n","const events = [\n  {\n    id: '333',\n    name: '3x3x3 Cube',\n    preferred_format: 'a',\n    rank: 10,\n  },\n  {\n    id: '222',\n    name: '2x2x2 Cube',\n    preferred_format: 'a',\n    rank: 20,\n  },\n  {\n    id: '444',\n    name: '4x4x4 Cube',\n    preferred_format: 'a',\n    rank: 30,\n  },\n  {\n    id: '555',\n    name: '5x5x5 Cube',\n    preferred_format: 'a',\n    rank: 40,\n  },\n  {\n    id: '666',\n    name: '6x6x6 Cube',\n    preferred_format: 'm',\n    rank: 50,\n  },\n  {\n    id: '777',\n    name: '7x7x7 Cube',\n    preferred_format: 'm',\n    rank: 60,\n  },\n  {\n    id: '333bf',\n    name: '3x3x3 Blindfolded',\n    preferred_format: '3',\n    rank: 70,\n  },\n  {\n    id: '333fm',\n    name: '3x3x3 Fewest Moves',\n    preferred_format: 'm',\n    rank: 80,\n  },\n  {\n    id: '333oh',\n    name: '3x3x3 One-Handed',\n    preferred_format: 'a',\n    rank: 90,\n  },\n  {\n    id: 'clock',\n    name: 'Clock',\n    preferred_format: 'a',\n    rank: 110,\n  },\n  {\n    id: 'minx',\n    name: 'Megaminx',\n    preferred_format: 'a',\n    rank: 120,\n  },\n  {\n    id: 'pyram',\n    name: 'Pyraminx',\n    preferred_format: 'a',\n    rank: 130,\n  },\n  {\n    id: 'skewb',\n    name: 'Skewb',\n    preferred_format: 'a',\n    rank: 140,\n  },\n  {\n    id: 'sq1',\n    name: 'Square-1',\n    preferred_format: 'a',\n    rank: 150,\n  },\n  {\n    id: '444bf',\n    name: '4x4x4 Blindfolded',\n    preferred_format: '3',\n    rank: 160,\n  },\n  {\n    id: '555bf',\n    name: '5x5x5 Blindfolded',\n    preferred_format: '3',\n    rank: 170,\n  },\n  {\n    id: '333mbf',\n    name: '3x3x3 Multi-Blind',\n    preferred_format: '3',\n    rank: 180,\n  },\n  {\n    id: '333ft',\n    name: '3x3x3 With Feet',\n    preferred_format: 'a',\n    rank: 996,\n  },\n  {\n    id: 'magic',\n    name: 'Magic',\n    preferred_format: 'a',\n    rank: 997,\n  },\n  {\n    id: 'mmagic',\n    name: 'Master Magic',\n    preferred_format: 'a',\n    rank: 998,\n  },\n  {\n    id: '333mbo',\n    name: '3x3x3 Multi-Blind Old Style',\n    preferred_format: '3',\n    rank: 999,\n  },\n];\n\nconst byId = {\n};\n\nevents.forEach((e) => { byId[e.id] = e; });\n\nexport default {\n  official: events.filter((e) => e.rank < 900),\n  forSimulation: events.filter((e) => e.rank < 900 && !['333fm', '333mbf'].includes(e.id)),\n  byId,\n};\n","import React from 'react';\n\nimport GenericPicker from './Generic';\nimport events from '../data/events';\n\nconst eventsForSimu = events.forSimulation.map((e) => ({\n  text: e.name,\n  key: e.id,\n  value: e.id,\n}));\n\n/* eslint-disable react/jsx-props-no-spreading */\nconst EventPicker = ({\n  event,\n  setEvent,\n  ...props\n}) => (\n  <GenericPicker\n    {...props}\n    val={event}\n    setVal={setEvent}\n    options={eventsForSimu}\n  />\n);\n\nexport default EventPicker;\n","export const availableModels = ['Runners', 'JudgesRun'];\nexport const defaultModel = availableModels[0];\nexport const defaultEvent = '333';\n","import React from 'react';\n\nimport { availableModels } from '../data/simu';\nimport GenericPicker from './Generic';\n\nconst modelOptions = availableModels.map((m) => ({\n  text: m,\n  key: m,\n  value: m,\n}));\n\n/* eslint-disable react/jsx-props-no-spreading */\nconst ModelPicker = ({\n  model,\n  setModel,\n  ...props\n}) => (\n  <GenericPicker\n    {...props}\n    val={model}\n    setVal={setModel}\n    options={modelOptions}\n  />\n);\n\nexport default ModelPicker;\n","import React, { useState } from 'react';\nimport {\n  Button, Header, Input,\n} from 'semantic-ui-react';\nimport { asVector } from '@viroulep/group-simulator';\nimport EventPicker from '../Pickers/Event';\nimport ModelPicker from '../Pickers/Model';\nimport { timeToString, setInt } from '../utils';\nimport { defaultModel, defaultEvent } from '../data/simu';\n\nconst QuickOpt = ({\n  simulator,\n  times,\n}) => {\n  const [event, setEvent] = useState(defaultEvent);\n  const [model, setModel] = useState(defaultModel);\n  const [message, setMessage] = useState('');\n  const [maxStations, setMaxStations] = useState(10);\n  const [maxStaff, setMaxStaff] = useState(14);\n\n  const runSimulation = () => {\n    const timesVec = asVector(simulator.VectorTime, times);\n    // We'll just use the default config with no override!\n    const localOverride = new simulator.MapStringInt();\n    const {\n      Err, BestResult, Judges, Runners, Scramblers,\n    } = simulator.optimizeStaff(\n      event, timesVec, maxStations, maxStaff, localOverride, model,\n    );\n    if (Err !== simulator.ErrorKind.SUCCESS) {\n      setMessage(\n        `An error occurred during the simulation: ${simulator.errorMessage(Err)}`,\n      );\n    } else {\n      const strResult = `The best group took ${timeToString(BestResult)},`;\n      const strStaff = `using ${Judges} judges, ${Scramblers} scramblers, and ${Runners} runners. `;\n      setMessage(`${strResult} ${strStaff}`);\n    }\n  };\n\n  return (\n    <>\n      <Header>\n        Quick staff optimizer\n      </Header>\n      <div className=\"opt-content\">\n        <div className=\"inputs\">\n          <Input\n            min={3}\n            type=\"number\"\n            label=\"Total staff\"\n            value={maxStaff}\n            onChange={(e) => setInt(e, setMaxStaff, maxStaff)}\n          />\n          <Input\n            min={1}\n            type=\"number\"\n            label=\"Stations\"\n            value={maxStations}\n            onChange={(e) => setInt(e, setMaxStations, maxStations)}\n          />\n        </div>\n        <p>\n          Given I have\n          {' '}\n          {maxStaff}\n          {' '}\n          staff and at most\n          {' '}\n          {maxStations}\n          {' '}\n          stations available, I want to get the shortest time for this group.\n        </p>\n        <div>\n          This group is for\n          {' '}\n          <EventPicker event={event} setEvent={setEvent} inline upward={false} />\n          {' '}\n          and my staff will be using the\n          {' '}\n          <ModelPicker model={model} setModel={setModel} inline />\n          {' '}\n          system throughout the group.\n        </div>\n      </div>\n      <Button\n        primary\n        className=\"run-simu\"\n        content=\"Run it!\"\n        onClick={runSimulation}\n      />\n      <p>\n        {message}\n      </p>\n    </>\n  );\n};\n\nexport default QuickOpt;\n","import React, { useState } from 'react';\nimport {\n  Button, Header, Message,\n} from 'semantic-ui-react';\nimport { asVector } from '@viroulep/group-simulator';\nimport EventPicker from '../Pickers/Event';\nimport ModelPicker from '../Pickers/Model';\nimport { timeToString } from '../utils';\nimport { defaultModel, defaultEvent } from '../data/simu';\n\nconst QuickSimu = ({\n  simulator,\n  times,\n}) => {\n  const [event, setEvent] = useState(defaultEvent);\n  const [model, setModel] = useState(defaultModel);\n  const [message, setMessage] = useState('');\n\n  const runSimulation = () => {\n    const timesVec = asVector(simulator.VectorTime, times);\n    // We'll just use the default config with no override!\n    const localOverride = new simulator.MapStringInt();\n    const { Err, Value } = simulator.simuGroup(event, timesVec, localOverride, model);\n    if (Err !== simulator.ErrorKind.SUCCESS) {\n      setMessage(\n        `An error occurred during the simulation: ${simulator.errorMessage(Err)}`,\n      );\n    } else {\n      setMessage(`The group took ${timeToString(Value)}.`);\n    }\n  };\n\n  return (\n    <>\n      <Header>\n        Quick group simulation\n      </Header>\n      <Message\n        compact\n        color=\"brown\"\n      >\n        You can adjust the number of judges/scramblers/runners in the settings.\n      </Message>\n      <div>\n        I want to simulate this group for\n        {' '}\n        <EventPicker event={event} setEvent={setEvent} inline />\n        {' '}\n        and my staff will be using the\n        {' '}\n        <ModelPicker model={model} setModel={setModel} inline />\n        {' '}\n        system throughout the group.\n      </div>\n      <Button\n        primary\n        className=\"run-simu\"\n        content=\"Run it!\"\n        onClick={runSimulation}\n      />\n      <p>\n        {message}\n      </p>\n    </>\n  );\n};\n\nexport default QuickSimu;\n","import React, { useState } from 'react';\nimport {\n  Header,\n} from 'semantic-ui-react';\nimport TimesDetail from './TimesDetail';\nimport QuickOpt from './QuickOpt';\nimport QuickSimu from './QuickSimu';\nimport './QuickRun.scss';\n\n// Poor man's database\nlet savedTimes = [];\n\nconst QuickRunPage = ({\n  simulator,\n}) => {\n  const [times, setTimes] = useState(savedTimes);\n  const setPersistedTimes = (array) => {\n    savedTimes = array;\n    setTimes(array);\n  };\n\n  return (\n    <>\n      <Header>\n        Group setup\n      </Header>\n      <div>\n        There are currently\n        {' '}\n        {times.length}\n        {' '}\n        competitors in the group.\n        <TimesDetail times={times} setTimes={setPersistedTimes} />\n      </div>\n      <QuickSimu simulator={simulator} times={times} />\n      <QuickOpt simulator={simulator} times={times} />\n    </>\n  );\n};\n\nexport default QuickRunPage;\n","import React, { useState, useEffect } from 'react';\nimport {\n  Button, Container, Message, Icon,\n} from 'semantic-ui-react';\nimport { getSimu } from '@viroulep/group-simulator';\nimport { Router } from '@reach/router';\n\nimport './App.css';\nimport Navigation from './Navigation/Navigation';\nimport Settings from './Settings/Settings';\nimport QuickRunPage from './Simulation/QuickRun';\n\n// https://github.com/rafrex/spa-github-pages\n\nconst LoadingMessage = () => (\n  <>\n    <Message.Header>Loading required content</Message.Header>\n    Please wait while the page is loading a required module.\n  </>\n);\n\nconst FailureMessage = () => (\n  <>\n    <p>\n      The loading of the module timed out.\n      It&pos;s likely that there was an error and that your browser does not support WebAssembly.\n    </p>\n\n    <p>\n      This module is necessary for this application, it is pointless to show\n      you anything more than this error message at this point.\n      <br />\n      Feel free to check this website to make sure your browser is supported.\n    </p>\n    <Button\n      href=\"https://caniuse.com/#feat=wasm\"\n      target=\"_blank\"\n      secondary\n    >\n      Check browser compatibility\n    </Button>\n  </>\n);\n\n// Use dismissable with wasm: info loading, green loaded, red timeout!\nconst LoadingWasm = ({\n  simulator,\n  loading,\n}) => (\n  <>\n    {!simulator && (\n      <Message\n        icon\n        color={loading ? 'teal' : 'red'}\n      >\n        {loading && (\n          <Icon name=\"circle notched\" loading />\n        )}\n        <Message.Content>\n          {loading ? (\n            <LoadingMessage />\n          ) : (\n            <FailureMessage />\n          )}\n        </Message.Content>\n      </Message>\n    )}\n  </>\n);\n\nconst Home = () => (\n  <div>\n    This page is a work in progress and most likely won&apos;t do what you expect.\n    <br />\n    You should not use it.\n    <br />\n    Come back later.\n  </div>\n);\n\nconst NotFound = () => <p>Oups, it&apos;s a 404</p>;\n\nfunction App() {\n  const [simulator, setSimulator] = useState(undefined);\n  const [loading, setLoading] = useState(true);\n\n  const loadWasm = async () => {\n    const wasm = getSimu(() => { setSimulator(wasm); setLoading(false) });\n  };\n\n  // Pass '[]' as a dependency, so that it's ran just once.\n  useEffect(() => {\n    loadWasm();\n    // Register a timeout on the loading process\n    setTimeout(() => setLoading(false), 3000);\n  }, []);\n\n  return (\n    <Container>\n      <LoadingWasm simulator={simulator} loading={loading} />\n      {simulator && (\n        <>\n          <Navigation />\n          <QuickRunPage simulator={simulator} path=\"/quick-simu\" />\n        </>\n      )}\n    </Container>\n  );\n}\n\nexport default App;\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'fomantic-ui-css/semantic.css';\n\n// NOTE:\n// import { Link } from 'react-router-dom'\n// import { Button } from 'semantic-ui-react'\n\n// // 💡 `to` prop is not handled in `Button` and will be passed to `Link` component\n// <Button as={Link} to=\"/home\">\n// To homepage\n// </Button>\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}